!function(){"use strict";var e={226:function(e,t){MathJax._.components.global.isObject,MathJax._.components.global.combineConfig,t.PV=MathJax._.components.global.combineDefaults,MathJax._.components.global.combineWithMathJax,t.NI=MathJax._.components.global.MathJax},150:function(e,t){t.v=MathJax._.core.MmlTree.MML.MML},113:function(e,t){t.Ls=MathJax._.core.MmlTree.MmlNode.TEXCLASS,MathJax._.core.MmlTree.MmlNode.TEXCLASSNAMES,MathJax._.core.MmlTree.MmlNode.indentAttributes,t.oI=MathJax._.core.MmlTree.MmlNode.AbstractMmlNode,MathJax._.core.MmlTree.MmlNode.AbstractMmlTokenNode,MathJax._.core.MmlTree.MmlNode.AbstractMmlLayoutNode,MathJax._.core.MmlTree.MmlNode.AbstractMmlBaseNode,MathJax._.core.MmlTree.MmlNode.AbstractMmlEmptyNode,MathJax._.core.MmlTree.MmlNode.TextNode,MathJax._.core.MmlTree.MmlNode.XMLNode},272:function(e,t){MathJax._.util.BBox.BBoxStyleAdjust,t.bK=MathJax._.util.BBox.BBox},54:function(e,t){t.VK=MathJax._.input.tex.Configuration.Configuration,MathJax._.input.tex.Configuration.ConfigurationHandler,MathJax._.input.tex.Configuration.ParserConfiguration},443:function(e,t){t.Z=MathJax._.input.tex.ParseMethods.default},201:function(e,t){MathJax._.input.tex.SymbolMap.AbstractSymbolMap,MathJax._.input.tex.SymbolMap.RegExpMap,MathJax._.input.tex.SymbolMap.AbstractParseMap,MathJax._.input.tex.SymbolMap.CharacterMap,MathJax._.input.tex.SymbolMap.DelimiterMap,MathJax._.input.tex.SymbolMap.MacroMap,t.QQ=MathJax._.input.tex.SymbolMap.CommandMap,t.QM=MathJax._.input.tex.SymbolMap.EnvironmentMap},850:function(e,t){t.Z=MathJax._.input.tex.TexError.default},592:function(e,t){t.Z=MathJax._.input.tex.TexParser.default},225:function(e,t){t.Z=MathJax._.input.tex.base.BaseMethods.default},990:function(e,t){MathJax._.output.chtml.Wrapper.FONTSIZE,MathJax._.output.chtml.Wrapper.SPACE,t.wO=MathJax._.output.chtml.Wrapper.CHTMLWrapper},268:function(e,t){t.w=MathJax._.output.chtml.Wrappers_ts.CHTMLWrappers}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}!function(){var e=n(226);(0,e.PV)(e.NI._,"output",{common:{Wrapper:{}},chtml:{Wrapper:{},Wrappers_ts:{}},svg:{Wrapper:{},Wrappers_ts:{}}});var t=n(54),r=n(201),i=n(225),a=n(443),o=n(592),u=n(850),s={whiteSpaceRegex:/^(\s+|%[^\r\n]*(\r\n|\r|\n)?)+/,lengthResolution:128,interpolationResolution:5,machinePrecision:1e-12};function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return t&&h(e.prototype,t),n&&h(e,n),e}function m(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function f(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=y(e);if(t){var i=y(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return d(this,n)}}function d(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function v(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var x=function e(){v(this,e)},g=function(e){m(n,e);var t=f(n);function n(e){var r;return v(this,n),(r=t.call(this)).get=e,r}return l(n,[{key:"isEmpty",get:function(){return!1}},{key:"isDefined",get:function(){return!0}},{key:"getOrElse",value:function(e){return this.get}},{key:"flatMap",value:function(e){return e(this.get)}},{key:"map",value:function(e){return new n(e(this.get))}},{key:"foreach",value:function(e){e(this.get)}},{key:"toString",value:function(){return"Some("+this.get+")"}}],[{key:"unapply",value:function(e){return new n(e.get)}}]),n}(x),w=function(e){m(n,e);var t=f(n);function n(){return v(this,n),t.call(this)}return l(n,[{key:"isEmpty",get:function(){return!0}},{key:"isDefined",get:function(){return!1}},{key:"getOrElse",value:function(e){return e}},{key:"flatMap",value:function(e){return this}},{key:"foreach",value:function(e){}},{key:"map",value:function(e){return this}},{key:"toString",value:function(){return"None"}}],[{key:"unapply",value:function(e){return new g(e)}}]),n}(x);function S(e){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return t&&C(e.prototype,t),n&&C(e,n),e}function k(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&M(e,t)}function M(e,t){return(M=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=O(e);if(t){var i=O(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return B(this,n)}}function B(e,t){return!t||"object"!==S(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function O(e){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function E(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}x.Some=g,x.None=w,x.empty=new w;var A=function e(){E(this,e)},L=function(e){k(n,e);var t=P(n);function n(e,r){var i;return E(this,n),(i=t.call(this)).head=e,i.tail=r,i}return b(n,[{key:"isEmpty",get:function(){return!1}},{key:"at",value:function(e){if(e<0||e>=this.length())throw Error("no such element at "+e+". index must be lower than "+this.length()+".");for(var t=this,n=0;n<e;n++)t=t.tail;return t.head}},{key:"length",value:function(){for(var e=this,t=0;!e.isEmpty;)t++,e=e.tail;return t}},{key:"prepend",value:function(e){return new n(e,this)}},{key:"append",value:function(e){var t=new n(e,A.empty);return this.reverse().foreach((function(e){t=new n(e,t)})),t}},{key:"concat",value:function(e){var t=e;return this.reverse().foreach((function(e){t=new n(e,t)})),t}},{key:"foldLeft",value:function(e,t){var n,r;for(n=t(e,this.head),r=this.tail;!r.isEmpty;)n=t(n,r.head),r=r.tail;return n}},{key:"foldRight",value:function(e,t){return this.tail.isEmpty?t(this.head,e):t(this.head,this.tail.foldRight(e,t))}},{key:"map",value:function(e){return new n(e(this.head),this.tail.map(e))}},{key:"flatMap",value:function(e){return e(this.head).concat(this.tail.flatMap(e))}},{key:"foreach",value:function(e){for(var t=this;!t.isEmpty;)e(t.head),t=t.tail}},{key:"reverse",value:function(){var e=A.empty;return this.foreach((function(t){e=new n(t,e)})),e}},{key:"mkString",value:function(){var e,t,r,i,a;switch(arguments.length){case 0:e=t=r="";break;case 1:t=arguments[0],e=r="";break;case 2:e=arguments[0],t=arguments[1],r="";break;default:e=arguments[0],t=arguments[1],r=arguments[2]}for(i=e+this.head.toString(),a=this.tail;a instanceof n;)i+=t+a.head.toString(),a=a.tail;return i+=r}},{key:"toString",value:function(){return this.mkString("[",", ","]")}}],[{key:"unapply",value:function(e){return new x.Some([e.head,e.tail])}}]),n}(A);A.Cons=L;var j=function(e){k(n,e);var t=P(n);function n(){return E(this,n),t.call(this)}return b(n,[{key:"isEmpty",get:function(){return!0}},{key:"at",value:function(e){throw new Error("cannot get element from an empty list.")}},{key:"length",value:function(){return 0}},{key:"prepend",value:function(e){return new L(e,A.empty)}},{key:"append",value:function(e){return new L(e,A.empty)}},{key:"concat",value:function(e){return e}},{key:"foldLeft",value:function(e,t){return e}},{key:"foldRight",value:function(e,t){return e}},{key:"flatMap",value:function(e){return this}},{key:"map",value:function(e){return this}},{key:"foreach",value:function(e){}},{key:"reverse",value:function(){return this}},{key:"mkString",value:function(){switch(arguments.length){case 0:case 1:return"";case 2:return arguments[0];default:return arguments[0]+arguments[2]}}},{key:"toString",value:function(){return"[]"}}],[{key:"unapply",value:function(e){return new x.Some(e)}}]),n}(A);function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}A.Nil=j,A.empty=new j,A.fromArray=function(e){var t,n;for(t=A.empty,n=e.length-1;n>=0;)t=new L(e[n],t),n-=1;return t};var T=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=t,this.tail=n}var t,n,r;return t=e,r=[{key:"unapply",value:function(e){return new Option.Some([e.head,e.tail])}}],(n=[{key:"toString",value:function(){return"("+this.head+"~"+this.tail+")"}}])&&D(t.prototype,n),r&&D(t,r),e}();function R(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function G(e,t,n){return t&&F(e.prototype,t),n&&F(e,n),e}var V=function(){function e(){R(this,e),this.cases=[]}return G(e,[{key:"Case",value:function(e,t){return this.cases.push([e,t]),this}},{key:"match",value:function(e){var t,n,r,i;for(t=0,n=this.cases.length;t<n;){if(e instanceof(r=this.cases[t][0])&&(i=r.unapply(e)).isDefined)return this.cases[t][1](i.get);t+=1}throw new _(e)}}]),e}(),_=function(){function e(t){R(this,e),this.obj=t}return G(e,[{key:"toString",value:function(){return"MatchError("+this.obj+")"}}]),e}();function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function z(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Q(e,t)}function Q(e,t){return(Q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function N(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=W(e);if(t){var i=W(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return X(this,n)}}function X(e,t){return!t||"object"!==I(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function W(e){return(W=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function U(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function q(e,t,n){return t&&H(e.prototype,t),n&&H(e,n),e}var J=function(){function e(t,n){U(this,e),this.source=t,this.offset=void 0===n?0:n,this._index=null,this._line=null}return q(e,[{key:"index",value:function(){if(null!==this._index)return this._index;this._index=[],this._index.push(0);for(var e=0;e<this.source.length;)"\n"===this.source.charAt(e)&&this._index.push(e+1),e+=1;return this._index.push(this.source.length),this._index}},{key:"line",value:function(){var e,t,n;if(null!==this._line)return this._line;for(e=0,t=this.index().length-1;e+1<t;)n=t+e>>1,this.offset<this.index()[n]?t=n:e=n;return this._line=e+1,this._line}},{key:"column",value:function(){return this.offset-this.index()[this.line()-1]+1}},{key:"lineContents",value:function(){var e,t;return e=this.index(),t=this.line(),this.source.substring(e[t-1],e[t])}},{key:"toString",value:function(){return this.line().toString()+"."+this.column()}},{key:"longString",value:function(){var e,t;for(e=this.lineContents()+"\n",t=0;t<this.column();)"\t"===this.lineContents().charAt(t)?e+="\t":e+=" ",t+=1;return e+="^"}},{key:"isLessThan",value:function(t){return t instanceof e?this.offset<t.offset:this.line()<t.line()||this.line()===t.line()&&this.column()<t.column()}}]),e}(),Z=function(){function e(t,n,r){U(this,e),this.source=t,this.offset=n,this.context=r}return q(e,[{key:"first",value:function(){return this.offset<this.source.length?this.source.charAt(this.offset):e.EofCh}},{key:"rest",value:function(){return this.offset<this.source.length?new e(this.source,this.offset+1,this.context):this}},{key:"pos",value:function(){return new J(this.source,this.offset)}},{key:"atEnd",value:function(){return this.offset>=this.source.length}},{key:"drop",value:function(e){var t,n;for(t=this,n=e;n>0;)t=t.rest(),n-=1;return t}}]),e}();Z.EofCh="\x03";var Y=function(){function e(){U(this,e)}return q(e,null,[{key:"parse",value:function(e,t){return e.apply(t)}},{key:"parseAll",value:function(t,n){return t.andl((function(){return e.eos()})).apply(n)}},{key:"parseString",value:function(t,n){var r=new Z(n,0,{lastNoSuccess:void 0});return e.parse(t,r)}},{key:"parseAllString",value:function(t,n){var r=new Z(n,0,{lastNoSuccess:void 0});return e.parseAll(t,r)}},{key:"_handleWhiteSpace",value:function(e){var t=e.context.whiteSpaceRegex,n=e.source,r=e.offset,i=t.exec(n.substring(r,n.length));return null!==i?r+i[0].length:r}},{key:"literal",value:function(t){return new re((function(n){var r,i,a,o,u,s;for(r=n.source,i=n.offset,o=0,u=a=e._handleWhiteSpace(n);o<t.length&&u<r.length&&t.charAt(o)===r.charAt(u);)o+=1,u+=1;return o===t.length?new K(t,n.drop(u-i)):(s=a===r.length?"end of source":"`"+r.charAt(a)+"'",new te("`"+t+"' expected but "+s+" found",n.drop(a-i)))}))}},{key:"regex",value:function(e){if("/^"!==e.toString().substring(0,2))throw"regex must start with `^' but "+e;return new re((function(t){var n,r,i,a;return n=t.source,r=t.offset,null!==(i=e.exec(n.substring(r,n.length)))?new K(i[0],t.drop(i[0].length)):(a=r===n.length?"end of source":"`"+n.charAt(r)+"'",new te("string matching regex "+e+" expected but "+a+" found",t))}))}},{key:"regexLiteral",value:function(t){if("/^"!==t.toString().substring(0,2))throw"regex must start with `^' but "+t;return new re((function(n){var r,i,a,o,u;return r=n.source,i=n.offset,a=e._handleWhiteSpace(n),null!==(o=t.exec(r.substring(a,r.length)))?new K(o[0],n.drop(a+o[0].length-i)):(u=a===r.length?"end of source":"`"+r.charAt(a)+"'",new te("string matching regex "+t+" expected but "+u+" found",n.drop(a-i)))}))}},{key:"eos",value:function(){return new re((function(t){var n,r;return n=t.source,t.offset,r=e._handleWhiteSpace(t),n.length===r?new K("",t):new te("end of source expected but `"+n.charAt(r)+"' found",t)}))}},{key:"commit",value:function(e){return new re((function(t){var n=e()(t);return(new V).Case(K,(function(e){return n})).Case(ne,(function(e){return n})).Case(te,(function(e){return new ne(e[0],e[1])})).match(n)}))}},{key:"elem",value:function(t){return e.accept(t).named('"'+t+'"')}},{key:"accept",value:function(t){return e.acceptIf((function(e){return e===t}),(function(e){return"`"+t+"' expected but `"+e+"' found"}))}},{key:"acceptIf",value:function(e,t){return new re((function(n){return e(n.first())?new K(n.first(),n.rest()):new te(t(n.first()),n)}))}},{key:"failure",value:function(e){return new re((function(t){return new te(e,t)}))}},{key:"err",value:function(e){return new re((function(t){return new ne(e,t)}))}},{key:"success",value:function(e){return new re((function(t){return new K(e,t)}))}},{key:"log",value:function(e,t){return new re((function(n){console.log("trying "+t+" at "+n);var r=e().apply(n);return console.log(t+" --\x3e "+r),r}))}},{key:"rep",value:function(t){var n=e.success(A.empty);return e.rep1(t).or((function(){return n}))}},{key:"rep1",value:function(e){return new re((function(t){var n,r,i,a;if(n=[],r=t,(a=(i=e()).apply(t))instanceof K){for(;a instanceof K;)n.push(a.result),r=a.next,a=i.apply(r);return new K(A.fromArray(n),r)}return a}))}},{key:"repN",value:function(t,n){return 0===t?e.success(FP.List.empty):new re((function(e){var r,i,a,o;for(r=[],i=e,o=(a=n()).apply(i);o instanceof K;){if(r.push(o.result),i=o.next,t===r.length)return new K(A.fromArray(r),i);o=a.apply(i)}return o}))}},{key:"repsep",value:function(t,n){var r=e.success(A.empty);return e.rep1sep(t,n).or((function(){return r}))}},{key:"rep1sep",value:function(t,n){return t().and(e.rep(n().andr(t))).to((function(e){return new A.Cons(e.head,e.tail)}))}},{key:"chainl1",value:function(t,n,r){return t().and(e.rep(r().and(n))).to((function(e){return e.tail.foldLeft(e.head,(function(e,t){return t.head(e,t.tail)}))}))}},{key:"chainr1",value:function(e,t,n,r){return e().and(this.rep(t().and(e))).to((function(e){return new A.Cons(new T(n,e.head),e.tail).foldRight(r,(function(e,t){return e.head(e.tail,t)}))}))}},{key:"opt",value:function(t){return t().to((function(e){return new x.Some(e)})).or((function(){return e.success(x.empty)}))}},{key:"not",value:function(e){return new re((function(t){return e().apply(t).successful?new te("Expected failure",t):new K(x.empty,t)}))}},{key:"guard",value:function(e){return new re((function(t){var n=e().apply(t);return n.successful?new K(n.result,t):n}))}},{key:"mkList",value:function(e){return new A.Cons(e.head,e.tail)}},{key:"fun",value:function(e){return function(){return e}}},{key:"lazyParser",value:function(t){var n,r;return t instanceof String||"string"==typeof t?(n=e.literal(t),function(){return n}):t instanceof Function?t:t instanceof Object?t instanceof re?function(){return t}:t instanceof RegExp?(r=e.regexLiteral(t),function(){return r}):e.err("unhandlable type"):e.err("unhandlable type")}},{key:"seq",value:function(){var t,n,r;if(0===(t=arguments.length))return e.err("at least one element must be specified");for(n=e.lazyParser(arguments[0])(),r=1;r<t;)n=n.and(e.lazyParser(arguments[r])),r+=1;return n}},{key:"or",value:function(){var t,n,r;if(0===(t=arguments.length))return e.err("at least one element must be specified");for(n=e.lazyParser(arguments[0])(),r=1;r<t;)n=n.or(e.lazyParser(arguments[r])),r+=1;return n}}]),e}(),$=function(){function e(){U(this,e)}return q(e,[{key:"isEmpty",value:function(){return!this.successful}},{key:"getOrElse",value:function(e){return this.isEmpty?e():this.get()}}]),e}();Y.ParseResult=$;var K=function(e){z(n,e);var t=N(n);function n(e,r){var i;return U(this,n),(i=t.call(this)).result=e,i.next=r,i}return q(n,[{key:"successful",get:function(){return!0}},{key:"map",value:function(e){return new n(e(this.result),this.next)}},{key:"mapPartial",value:function(e,t){try{return new n(e(this.result),this.next)}catch(e){if(e instanceof _)return new te(t(this.result),this.next);throw e}}},{key:"flatMapWithNext",value:function(e){return e(this.result).apply(this.next)}},{key:"append",value:function(e){return this}},{key:"get",value:function(){return this.result}},{key:"toString",value:function(){return"["+this.next.pos()+"] parsed: "+this.result}}],[{key:"unapply",value:function(e){return new x.Some([e.result,e.next])}}]),n}($);Y.Success=K;var ee=function(e){z(n,e);var t=N(n);function n(){return U(this,n),t.call(this)}return q(n,[{key:"successful",get:function(){return!1}},{key:"_setLastNoSuccess",value:function(){var e=this.next.context;void 0!==e.lastNoSuccess&&this.next.pos().isLessThan(e.lastNoSuccess.next.pos())||(e.lastNoSuccess=this)}},{key:"map",value:function(e){return this}},{key:"mapPartial",value:function(e,t){return this}},{key:"flatMapWithNext",value:function(e){return this}},{key:"get",value:function(){return Y.error("No result when parsing failed")}}]),n}($);Y.NoSuccess=ee;var te=function(e){z(n,e);var t=N(n);function n(e,r){var i;return U(this,n),(i=t.call(this)).msg=e,i.next=r,i._setLastNoSuccess(),i}return q(n,[{key:"append",value:function(e){var t=e();if(t instanceof K)return t;if(t instanceof ee)return t.next.pos().isLessThan(this.next.pos())?this:t;throw new _(t)}},{key:"toString",value:function(){return"["+this.next.pos()+"] failure: "+this.msg+"\n\n"+this.next.pos().longString()}}],[{key:"unapply",value:function(e){return new x.Some([e.msg,e.next])}}]),n}(ee);Y.Failure=te;var ne=function(e){z(n,e);var t=N(n);function n(e,r){var i;return U(this,n),(i=t.call(this)).msg=e,i.next=r,i._setLastNoSuccess(),i}return q(n,[{key:"append",value:function(e){return this}},{key:"toString",value:function(){return"["+this.next.pos()+"] error: "+this.msg+"\n\n"+this.next.pos().longString()}}],[{key:"unapply",value:function(e){return new x.Some([e.msg,e.next])}}]),n}(ee);Y.ParseError=ne;var re=function(){function e(t){U(this,e),this.apply=t,this.name=""}return q(e,[{key:"named",value:function(e){return this.name=e,this}},{key:"toString",value:function(){return"Parser ("+this.name+")"}},{key:"flatMap",value:function(t){var n=this;return new e((function(e){return n.apply(e).flatMapWithNext(t)}))}},{key:"map",value:function(t){var n=this;return new e((function(e){return n.apply(e).map(t)}))}},{key:"append",value:function(t){var n=this;return new e((function(e){return n.apply(e).append((function(){return t().apply(e)}))}))}},{key:"and",value:function(e){return this.flatMap((function(t){return e().map((function(e){return new T(t,e)}))})).named("~")}},{key:"andr",value:function(e){return this.flatMap((function(t){return e().map((function(e){return e}))})).named("~>")}},{key:"andl",value:function(e){return this.flatMap((function(t){return e().map((function(e){return t}))})).named("<~")}},{key:"or",value:function(e){return this.append(e).named("|")}},{key:"andOnce",value:function(e){var t=this;return new ie((function(){return t.flatMap((function(t){return Y.commit(e).map((function(e){return new T(t,e)}))})).named("~!")}))}},{key:"longestOr",value:function(t){var n=this;return new e((function(e){var r,i;return r=n.apply(e),i=t()(e),r.successful?i.successful?i.next.pos().isLessThan(r.next.pos())?r:i:r:i.successful?i:r instanceof ne||i.next.pos().isLessThan(r.next.pos())?r:i})).named("|||")}},{key:"to",value:function(e){return this.map(e).named(this.toString()+"^^")}},{key:"ret",value:function(t){var n=this;return new e((function(e){return n.apply(e).map((function(e){return t()}))})).named(this.toString()+"^^^")}},{key:"toIfPossible",value:function(t,n){void 0===n&&(n=function(e){return"Constructor function not defined at "+e});var r=this;return new e((function(e){return r.apply(e).mapPartial(t,n)})).named(this.toString()+"^?")}},{key:"into",value:function(e){return this.flatMap(e)}},{key:"rep",value:function(){var e=this;return Y.rep((function(){return e}))}},{key:"chain",value:function(e){var t,n;return t=this,n=function(){return t},Y.chainl1(n,n,e)}},{key:"rep1",value:function(){var e=this;return Y.rep1((function(){return e}))}},{key:"opt",value:function(){var e=this;return Y.opt((function(){return e}))}}]),e}();Y.Parser=re;var ie=function(e){z(n,e);var t=N(n);function n(e){return U(this,n),t.call(this,e)}return q(n,[{key:"and",value:function(e){var t=this;return new n((function(){return t.flatMap((function(t){return Y.commit(e).map((function(e){return T(t,e)}))}))})).named("~")}}]),n}(re);Y.OnceParser=ie;var ae=n(113),oe=n(150);function ue(e){return(ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ce(e,t,n){return t&&se(e.prototype,t),n&&se(e,n),e}function he(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&le(e,t)}function le(e,t){return(le=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function me(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=fe(e);if(t){var i=fe(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return pe(this,n)}}function pe(e,t){return!t||"object"!==ue(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function fe(e){return(fe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function de(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var ye=function e(){de(this,e)},ve=function(e){he(n,e);var t=me(n);function n(e,r){var i;return de(this,n),(i=t.call(this,e,{},r)).textMmls=r,i.texClass=ae.Ls.ORD,i}return n}(ae.oI);ve.defaults=ae.oI.defaults,(ye.xypic=function(e){he(n,e);var t=me(n);function n(e,r,i){var a;return de(this,n),(a=t.call(this,e,i)).cmd=r,a}return ce(n,[{key:"kind",get:function(){return"xypic"}},{key:"toString",value:function(){return this.kind+"("+this.cmd+")"}}]),n}(ve)).defaults=ve.defaults,oe.v[ye.xypic.prototype.kind]=ye.xypic,ye.xypic.newdir=function(e){he(n,e);var t=me(n);function n(e,r,i){var a;return de(this,n),(a=t.call(this,e,i)).cmd=r,a}return ce(n,[{key:"kind",get:function(){return"xypic-newdir"}},{key:"toString",value:function(){return this.kind+"("+this.cmd+")"}}]),n}(ve),ye.xypic.newdir.defaults=ve.defaults,oe.v[ye.xypic.newdir.prototype.kind]=ye.xypic.newdir,ye.xypic.includegraphics=function(e){he(n,e);var t=me(n);function n(e,r,i){var a;return de(this,n),(a=t.call(this,e,i)).cmd=r,a}return ce(n,[{key:"kind",get:function(){return"xypic-includegraphics"}},{key:"toString",value:function(){return this.kind+"("+this.cmd+")"}}]),n}(ve),ye.xypic.includegraphics.defaults=ve.defaults,oe.v[ye.xypic.includegraphics.prototype.kind]=ye.xypic.includegraphics,ye.PosDecor=function(){function e(t,n){de(this,e),this.pos=t,this.decor=n}return ce(e,[{key:"toString",value:function(){return this.pos.toString()+" "+this.decor}}]),e}(),(ye.Pos=function e(){de(this,e)}).Coord=function(){function e(t,n){de(this,e),this.coord=t,this.pos2s=n}return ce(e,[{key:"toString",value:function(){return this.coord.toString()+" "+this.pos2s.mkString(" ")}}]),e}(),ye.Pos.Plus=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return"+("+this.coord+")"}}]),e}(),ye.Pos.Minus=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return"-("+this.coord+")"}}]),e}(),ye.Pos.Skew=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return"!("+this.coord+")"}}]),e}(),ye.Pos.Cover=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return".("+this.coord+")"}}]),e}(),ye.Pos.Then=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return",("+this.coord+")"}}]),e}(),ye.Pos.SwapPAndC=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return";("+this.coord+")"}}]),e}(),ye.Pos.SetBase=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return":("+this.coord+")"}}]),e}(),ye.Pos.SetYBase=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return"::("+this.coord+")"}}]),e}(),ye.Pos.ConnectObject=function(){function e(t){de(this,e),this.object=t}return ce(e,[{key:"toString",value:function(){return"**("+this.object+")"}}]),e}(),ye.Pos.DropObject=function(){function e(t){de(this,e),this.object=t}return ce(e,[{key:"toString",value:function(){return"*("+this.object+")"}}]),e}(),ye.Pos.Place=function(){function e(t){de(this,e),this.place=t}return ce(e,[{key:"toString",value:function(){return"?("+this.place+")"}}]),e}(),ye.Pos.PushCoord=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return"@+("+this.coord+")"}}]),e}(),ye.Pos.EvalCoordThenPop=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return"@-("+this.coord+")"}}]),e}(),ye.Pos.LoadStack=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return"@=("+this.coord+")"}}]),e}(),ye.Pos.DoCoord=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return"@@("+this.coord+")"}}]),e}(),ye.Pos.InitStack=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"@i"}}]),e}(),ye.Pos.EnterFrame=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"@("}}]),e}(),ye.Pos.LeaveFrame=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"@)"}}]),e}(),ye.Pos.SavePos=function(){function e(t){de(this,e),this.id=t}return ce(e,[{key:"toString",value:function(){return'="'+this.id+'"'}}]),e}(),ye.Pos.SaveMacro=function(){function e(t,n){de(this,e),this.macro=t,this.id=n}return ce(e,[{key:"toString",value:function(){return"=("+this.macro+' "'+this.id+'")'}}]),e}(),ye.Pos.SaveBase=function(){function e(t){de(this,e),this.id=t}return ce(e,[{key:"toString",value:function(){return'=:"'+this.id+'"'}}]),e}(),ye.Pos.SaveStack=function(){function e(t){de(this,e),this.id=t}return ce(e,[{key:"toString",value:function(){return'=@"'+this.id+'"'}}]),e}(),(ye.Coord=function e(){de(this,e)}).Vector=function(){function e(t){de(this,e),this.vector=t}return ce(e,[{key:"toString",value:function(){return this.vector.toString()}}]),e}(),ye.Coord.C=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"c"}}]),e}(),ye.Coord.P=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"p"}}]),e}(),ye.Coord.X=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"x"}}]),e}(),ye.Coord.Y=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"y"}}]),e}(),ye.Coord.Id=function(){function e(t){de(this,e),this.id=t}return ce(e,[{key:"toString",value:function(){return'"'+this.id+'"'}}]),e}(),ye.Coord.Group=function(){function e(t){de(this,e),this.posDecor=t}return ce(e,[{key:"toString",value:function(){return"{"+this.posDecor+"}"}}]),e}(),ye.Coord.StackPosition=function(){function e(t){de(this,e),this.number=t}return ce(e,[{key:"toString",value:function(){return"s{"+this.number+"}"}}]),e}(),ye.Coord.DeltaRowColumn=function(){function e(t,n,r){de(this,e),this.prefix=t,this.dr=n,this.dc=r}return ce(e,[{key:"toString",value:function(){return"["+(""===this.prefix?"":'"'+this.prefix+'"')+this.dr+","+this.dc+"]"}}]),e}(),ye.Coord.Hops=function(){function e(t,n){de(this,e),this.prefix=t,this.hops=n}return ce(e,[{key:"toString",value:function(){return"["+(""===this.prefix?"":'"'+this.prefix+'"')+this.hops.mkString("")+"]"}}]),e}(),ye.Coord.HopsWithPlace=function(){function e(t,n,r){de(this,e),this.prefix=t,this.hops=n,this.place=r}return ce(e,[{key:"toString",value:function(){return"["+(""===this.prefix?"":'"'+this.prefix+'"')+this.hops.mkString("")+this.place+"]"}}]),e}(),(ye.Vector=function e(){de(this,e)}).InCurBase=function(){function e(t,n){de(this,e),this.x=t,this.y=n}return ce(e,[{key:"toString",value:function(){return"("+this.x+", "+this.y+")"}}]),e}(),ye.Vector.Abs=function(){function e(t,n){de(this,e),this.x=t,this.y=n}return ce(e,[{key:"toString",value:function(){return"<"+this.x+", "+this.y+">"}}]),e}(),ye.Vector.Angle=function(){function e(t){de(this,e),this.degree=t}return ce(e,[{key:"toString",value:function(){return"a("+this.degree+")"}}]),e}(),ye.Vector.Dir=function(){function e(t,n){de(this,e),this.dir=t,this.dimen=n}return ce(e,[{key:"toString",value:function(){return"/"+this.dir+" "+this.dimen+"/"}}]),e}(),ye.Vector.Corner=function(){function e(t,n){de(this,e),this.corner=t,this.factor=n}return ce(e,[{key:"toString",value:function(){return this.corner.toString()+"("+this.factor+")"}}]),e}(),(ye.Corner=function e(){de(this,e)}).L=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"L"}}]),e}(),ye.Corner.R=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"R"}}]),e}(),ye.Corner.D=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"D"}}]),e}(),ye.Corner.U=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"U"}}]),e}(),ye.Corner.CL=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"CL"}}]),e}(),ye.Corner.CR=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"CR"}}]),e}(),ye.Corner.CD=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"CD"}}]),e}(),ye.Corner.CU=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"CU"}}]),e}(),ye.Corner.LD=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"LD"}}]),e}(),ye.Corner.RD=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"RD"}}]),e}(),ye.Corner.LU=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"LU"}}]),e}(),ye.Corner.RU=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"RU"}}]),e}(),ye.Corner.NearestEdgePoint=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"E"}}]),e}(),ye.Corner.PropEdgePoint=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"P"}}]),e}(),ye.Corner.Axis=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"A"}}]),e}(),(ye.Place=function(){function e(t,n,r,i){de(this,e),this.shaveP=t,this.shaveC=n,this.factor=r,this.slide=i}return ce(e,[{key:"compound",value:function(e){return new ye.Place(this.shaveP+e.shaveP,this.shaveC+e.shaveC,void 0===e.factor?this.factor:e.factor,e.slide)}},{key:"toString",value:function(){for(var e="",t=0;t<this.shaveP;t++)e+="<";for(var n=0;n<this.shaveC;n++)e+=">";return void 0!==this.factor&&(e+="("+this.factor+")"),this.slide.dimen.foreach((function(t){e+="/"+t+"/"})),e}}]),e}()).Factor=function(){function e(t){de(this,e),this.factor=t}return ce(e,[{key:"isIntercept",get:function(){return!1}},{key:"toString",value:function(){return this.factor.toString()}}]),e}(),ye.Place.Intercept=function(){function e(t){de(this,e),this.pos=t}return ce(e,[{key:"isIntercept",get:function(){return!0}},{key:"toString",value:function(){return"!{"+this.pos+"}"}}]),e}(),ye.Slide=function(){function e(t){de(this,e),this.dimen=t}return ce(e,[{key:"toString",value:function(){return this.dimen.getOrElse("")}}]),e}(),ye.Object=function(){function e(t,n){de(this,e),this.modifiers=t,this.object=n}return ce(e,[{key:"dirVariant",value:function(){return this.object.dirVariant()}},{key:"dirMain",value:function(){return this.object.dirMain()}},{key:"isDir",value:function(){return this.object.isDir()}},{key:"toString",value:function(){return this.modifiers.mkString()+this.object.toString()}}]),e}(),(ye.ObjectBox=function(){function e(){de(this,e)}return ce(e,[{key:"isEmpty",get:function(){return!1}},{key:"dirVariant",value:function(){}},{key:"dirMain",value:function(){}},{key:"isDir",value:function(){return!1}}]),e}()).Text=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).math=e,r}return ce(n,[{key:"toString",value:function(){return"{"+this.math.toString()+"}"}}]),n}(ye.ObjectBox),ye.ObjectBox.Empty=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"isEmpty",get:function(){return!0}},{key:"toString",value:function(){return"{}"}}]),n}(ye.ObjectBox),ye.ObjectBox.Xymatrix=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).xymatrix=e,r}return ce(n,[{key:"toString",value:function(){return this.xymatrix.toString()}}]),n}(ye.ObjectBox),ye.ObjectBox.Txt=function(e){he(n,e);var t=me(n);function n(e,r){var i;return de(this,n),(i=t.call(this)).width=e,i.textObject=r,i}return ce(n,[{key:"toString",value:function(){return"\\txt"+this.width+"{"+this.textObject.toString()+"}"}}]),n}(ye.ObjectBox),ye.ObjectBox.Txt.Width=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return n}(ye.ObjectBox),ye.ObjectBox.Txt.Width.Vector=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).vector=e,r}return ce(n,[{key:"toString",value:function(){return this.vector.toString()}}]),n}(ye.ObjectBox),ye.ObjectBox.Txt.Width.Default=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return""}}]),n}(ye.ObjectBox),ye.ObjectBox.WrapUpObject=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).object=e,r}return ce(n,[{key:"toString",value:function(){return"\\object"+this.object.toString()}}]),n}(ye.ObjectBox),ye.ObjectBox.CompositeObject=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).objects=e,r}return ce(n,[{key:"toString",value:function(){return"\\composite{"+this.objects.mkString(" * ")+"}"}}]),n}(ye.ObjectBox),ye.ObjectBox.Xybox=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).posDecor=e,r}return ce(n,[{key:"toString",value:function(){return"\\xybox{"+this.posDecor.toString()+"}"}}]),n}(ye.ObjectBox),ye.ObjectBox.Cir=function(e){he(n,e);var t=me(n);function n(e,r){var i;return de(this,n),(i=t.call(this)).radius=e,i.cir=r,i}return ce(n,[{key:"toString",value:function(){return"\\cir"+this.radius+"{"+this.cir+"}"}}]),n}(ye.ObjectBox),ye.ObjectBox.Cir.Radius=function e(){de(this,e)},ye.ObjectBox.Cir.Radius.Vector=function(){function e(t){de(this,e),this.vector=t}return ce(e,[{key:"toString",value:function(){return this.vector.toString()}}]),e}(),ye.ObjectBox.Cir.Radius.Default=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return""}}]),e}(),ye.ObjectBox.Cir.Cir=function e(){de(this,e)},ye.ObjectBox.Cir.Cir.Segment=function(){function e(t,n,r){de(this,e),this.startDiag=t,this.orient=n,this.endDiag=r}return ce(e,[{key:"toString",value:function(){return this.startDiag.toString()+this.orient+this.endDiag}}]),e}(),ye.ObjectBox.Cir.Cir.Full=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return""}}]),e}(),ye.ObjectBox.Dir=function(e){he(n,e);var t=me(n);function n(e,r){var i;return de(this,n),(i=t.call(this)).variant=e,i.main=r,i}return ce(n,[{key:"dirVariant",value:function(){return this.variant}},{key:"dirMain",value:function(){return this.main}},{key:"isDir",value:function(){return!0}},{key:"toString",value:function(){return"\\dir"+this.variant+"{"+this.main+"}"}}]),n}(ye.ObjectBox),ye.ObjectBox.Curve=function(e){he(n,e);var t=me(n);function n(e,r,i){var a;return de(this,n),(a=t.call(this)).modifiers=e,a.objects=r,a.poslist=i,a}return ce(n,[{key:"dirVariant",value:function(){return""}},{key:"dirMain",value:function(){return"-"}},{key:"isDir",value:function(){return!1}},{key:"toString",value:function(){return"\\curve"+this.modifiers.mkString("")+"{"+this.objects.mkString(" ")+" "+this.poslist.mkString("&")+"}"}}]),n}(ye.ObjectBox),ye.ObjectBox.Curve.Modifier=function e(){de(this,e)},ye.ObjectBox.Curve.Modifier.p=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~p"}}]),e}(),ye.ObjectBox.Curve.Modifier.P=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~P"}}]),e}(),ye.ObjectBox.Curve.Modifier.l=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~l"}}]),e}(),ye.ObjectBox.Curve.Modifier.L=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~L"}}]),e}(),ye.ObjectBox.Curve.Modifier.c=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~c"}}]),e}(),ye.ObjectBox.Curve.Modifier.C=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~C"}}]),e}(),ye.ObjectBox.Curve.Modifier.pc=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~pc"}}]),e}(),ye.ObjectBox.Curve.Modifier.pC=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~pC"}}]),e}(),ye.ObjectBox.Curve.Modifier.Pc=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~Pc"}}]),e}(),ye.ObjectBox.Curve.Modifier.PC=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~PC"}}]),e}(),ye.ObjectBox.Curve.Modifier.lc=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~lc"}}]),e}(),ye.ObjectBox.Curve.Modifier.lC=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~lC"}}]),e}(),ye.ObjectBox.Curve.Modifier.Lc=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~Lc"}}]),e}(),ye.ObjectBox.Curve.Modifier.LC=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~LC"}}]),e}(),ye.ObjectBox.Curve.Modifier.cC=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~cC"}}]),e}(),ye.ObjectBox.Curve.Object=function e(){de(this,e)},ye.ObjectBox.Curve.Object.Drop=function(){function e(t){de(this,e),this.object=t}return ce(e,[{key:"toString",value:function(){return"~*"+this.object}}]),e}(),ye.ObjectBox.Curve.Object.Connect=function(){function e(t){de(this,e),this.object=t}return ce(e,[{key:"toString",value:function(){return"~**"+this.object}}]),e}(),ye.ObjectBox.Curve.PosList=function e(){de(this,e)},ye.ObjectBox.Curve.PosList.CurPos=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return""}}]),e}(),ye.ObjectBox.Curve.PosList.Pos=function(){function e(t){de(this,e),this.pos=t}return ce(e,[{key:"toString",value:function(){return this.pos.toString()}}]),e}(),ye.ObjectBox.Curve.PosList.AddStack=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~@"}}]),e}(),(ye.Modifier=function e(){de(this,e)}).Vector=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).vector=e,r}return ce(n,[{key:"toString",value:function(){return"!"+this.vector}}]),n}(ye.Modifier),ye.Modifier.RestoreOriginalRefPoint=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"!"}}]),n}(ye.Modifier),ye.Modifier.AddOp=function(e){he(n,e);var t=me(n);function n(e,r){var i;return de(this,n),(i=t.call(this)).op=e,i.size=r,i}return ce(n,[{key:"toString",value:function(){return this.op.toString()+" "+this.size}}]),n}(ye.Modifier),ye.Modifier.AddOp.Grow=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"+"}}]),e}(),ye.Modifier.AddOp.Shrink=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"-"}}]),e}(),ye.Modifier.AddOp.Set=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"="}}]),e}(),ye.Modifier.AddOp.GrowTo=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"+="}}]),e}(),ye.Modifier.AddOp.ShrinkTo=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"-="}}]),e}(),ye.Modifier.AddOp.VactorSize=function(){function e(t){de(this,e),this.vector=t}return ce(e,[{key:"isDefault",get:function(){return!1}},{key:"toString",value:function(){return this.vector.toString()}}]),e}(),ye.Modifier.AddOp.DefaultSize=function(){function e(){de(this,e)}return ce(e,[{key:"isDefault",get:function(){return!0}},{key:"toString",value:function(){return""}}]),e}(),ye.Modifier.Shape=function e(){de(this,e)},ye.Modifier.Shape.Point=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"[.]"}}]),n}(ye.Modifier),ye.Modifier.Shape.Rect=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"[]"}}]),n}(ye.Modifier),ye.Modifier.Shape.Alphabets=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).alphabets=e,r}return ce(n,[{key:"toString",value:function(){return"["+this.alphabets+"]"}}]),n}(ye.Modifier),ye.Modifier.Shape.DefineShape=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).shape=e,r}return ce(n,[{key:"toString",value:function(){return"["+this.shape+"]"}}]),n}(ye.Modifier),ye.Modifier.Shape.Circle=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"[o]"}}]),n}(ye.Modifier),ye.Modifier.Shape.L=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"[l]"}}]),n}(ye.Modifier),ye.Modifier.Shape.R=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"[r]"}}]),n}(ye.Modifier),ye.Modifier.Shape.U=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"[u]"}}]),n}(ye.Modifier),ye.Modifier.Shape.D=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"[d]"}}]),n}(ye.Modifier),ye.Modifier.Shape.C=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"[c]"}}]),n}(ye.Modifier),ye.Modifier.Shape.ChangeColor=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).colorName=e,r}return ce(n,[{key:"toString",value:function(){return"["+this.colorName+"]"}}]),n}(ye.Modifier),ye.Modifier.Shape.CompositeModifiers=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).modifiers=e,r}return ce(n,[{key:"toString",value:function(){return this.modifiers.mkString("")}}]),n}(ye.Modifier),ye.Modifier.Shape.Frame=function(e){he(n,e);var t=me(n);function n(e,r){var i;return de(this,n),(i=t.call(this)).main=e,i.options=r,i}return ce(n,[{key:"toString",value:function(){return"[F"+this.main+this.options.mkString("")+"]"}}]),n}(ye.Modifier),ye.Modifier.Shape.Frame.Radius=function(){function e(t){de(this,e),this.vector=t}return ce(e,[{key:"toString",value:function(){return":"+this.vector}}]),e}(),ye.Modifier.Shape.Frame.Color=function(){function e(t){de(this,e),this.colorName=t}return ce(e,[{key:"toString",value:function(){return":"+this.colorName}}]),e}(),ye.Modifier.Invisible=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"i"}}]),n}(ye.Modifier),ye.Modifier.Hidden=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"h"}}]),n}(ye.Modifier),ye.Modifier.Direction=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).direction=e,r}return ce(n,[{key:"toString",value:function(){return this.direction.toString()}}]),n}(ye.Modifier),(ye.Direction=function e(){de(this,e)}).Compound=function(){function e(t,n){de(this,e),this.dir=t,this.rots=n}return ce(e,[{key:"toString",value:function(){return this.dir.toString()+this.rots.mkString()}}]),e}(),ye.Direction.Diag=function(){function e(t){de(this,e),this.diag=t}return ce(e,[{key:"toString",value:function(){return this.diag.toString()}}]),e}(),ye.Direction.Vector=function(){function e(t){de(this,e),this.vector=t}return ce(e,[{key:"toString",value:function(){return"v"+this.vector.toString()}}]),e}(),ye.Direction.ConstructVector=function(){function e(t){de(this,e),this.posDecor=t}return ce(e,[{key:"toString",value:function(){return"q{"+this.posDecor.toString()+"}"}}]),e}(),ye.Direction.RotVector=function(){function e(t){de(this,e),this.vector=t}return ce(e,[{key:"toString",value:function(){return":"+this.vector.toString()}}]),e}(),ye.Direction.RotAntiCW=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"_"}}]),e}(),ye.Direction.RotCW=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"^"}}]),e}(),(ye.Diag=function e(){de(this,e)}).Default=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return""}}]),e}(),ye.Diag.Angle=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return this.symbol}}]),e}(),ye.Diag.LD=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"symbol",get:function(){return"ld"}},{key:"ang",get:function(){return-3*Math.PI/4}},{key:"turn",value:function(e){return"^"===e?new ye.Diag.RD:new ye.Diag.LU}}]),n}(ye.Diag.Angle),ye.Diag.RD=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"symbol",get:function(){return"rd"}},{key:"ang",get:function(){return-Math.PI/4}},{key:"turn",value:function(e){return"^"===e?new ye.Diag.RU:new ye.Diag.LD}}]),n}(ye.Diag.Angle),ye.Diag.LU=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"symbol",get:function(){return"lu"}},{key:"ang",get:function(){return 3*Math.PI/4}},{key:"turn",value:function(e){return"^"===e?new ye.Diag.LD:new ye.Diag.RU}}]),n}(ye.Diag.Angle),ye.Diag.RU=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"symbol",get:function(){return"ru"}},{key:"ang",get:function(){return Math.PI/4}},{key:"turn",value:function(e){return"^"===e?new ye.Diag.LU:new ye.Diag.RD}}]),n}(ye.Diag.Angle),ye.Diag.L=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"symbol",get:function(){return"l"}},{key:"ang",get:function(){return Math.PI}},{key:"turn",value:function(e){return"^"===e?new ye.Diag.D:new ye.Diag.U}}]),n}(ye.Diag.Angle),ye.Diag.R=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"symbol",get:function(){return"r"}},{key:"ang",get:function(){return 0}},{key:"turn",value:function(e){return"^"===e?new ye.Diag.U:new ye.Diag.D}}]),n}(ye.Diag.Angle),ye.Diag.D=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"symbol",get:function(){return"d"}},{key:"ang",get:function(){return-Math.PI/2}},{key:"turn",value:function(e){return"^"===e?new ye.Diag.R:new ye.Diag.L}}]),n}(ye.Diag.Angle),ye.Diag.U=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"symbol",get:function(){return"u"}},{key:"ang",get:function(){return Math.PI/2}},{key:"turn",value:function(e){return"^"===e?new ye.Diag.L:new ye.Diag.R}}]),n}(ye.Diag.Angle),ye.ObjectBox.Frame=function(e){he(n,e);var t=me(n);function n(e,r){var i;return de(this,n),(i=t.call(this)).radius=e,i.main=r,i}return ce(n,[{key:"toString",value:function(){return"\\frm"+this.radius+"{"+this.main+"}"}}]),n}(ye.ObjectBox),ye.ObjectBox.Frame.Radius=function e(){de(this,e)},ye.ObjectBox.Frame.Radius.Vector=function(){function e(t){de(this,e),this.vector=t}return ce(e,[{key:"toString",value:function(){return this.vector.toString()}}]),e}(),ye.ObjectBox.Frame.Radius.Default=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return""}}]),e}(),ye.Decor=function(){function e(t){de(this,e),this.commands=t}return ce(e,[{key:"toString",value:function(){return this.commands.mkString(" ")}}]),e}(),(ye.Command=function e(){de(this,e)}).Save=function(){function e(t){de(this,e),this.pos=t}return ce(e,[{key:"toString",value:function(){return"\\save "+this.pos}}]),e}(),ye.Command.Restore=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"\\restore"}}]),e}(),ye.Command.Pos=function(){function e(t){de(this,e),this.pos=t}return ce(e,[{key:"toString",value:function(){return"\\POS "+this.pos}}]),e}(),ye.Command.AfterPos=function(){function e(t,n){de(this,e),this.decor=t,this.pos=n}return ce(e,[{key:"toString",value:function(){return"\\afterPOS{"+this.decor+"} "+this.pos}}]),e}(),ye.Command.Drop=function(){function e(t){de(this,e),this.object=t}return ce(e,[{key:"toString",value:function(){return"\\drop "+this.object}}]),e}(),ye.Command.Connect=function(){function e(t){de(this,e),this.object=t}return ce(e,[{key:"toString",value:function(){return"\\connect "+this.object}}]),e}(),ye.Command.Relax=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"\\relax"}}]),e}(),ye.Command.Ignore=function(){function e(t,n){de(this,e),this.pos=t,this.decor=n}return ce(e,[{key:"toString",value:function(){return"\\ignore{"+this.pos+" "+this.decor+"}"}}]),e}(),ye.Command.ShowAST=function(){function e(t,n){de(this,e),this.pos=t,this.decor=n}return ce(e,[{key:"toString",value:function(){return"\\xyshowAST{"+this.pos+" "+this.decor+"}"}}]),e}(),ye.Command.Path=function(){function e(t){de(this,e),this.path=t}return ce(e,[{key:"toString",value:function(){return"\\PATH "+this.path}}]),e}(),ye.Command.AfterPath=function(){function e(t,n){de(this,e),this.decor=t,this.path=n}return ce(e,[{key:"toString",value:function(){return"\\afterPATH{"+this.decor+"} "+this.path}}]),e}(),ye.Command.Path.Path=function(){function e(t){de(this,e),this.pathElements=t}return ce(e,[{key:"toString",value:function(){return this.pathElements.mkString("[",", ","]")}}]),e}(),ye.Command.Path.SetBeforeAction=function(){function e(t){de(this,e),this.posDecor=t}return ce(e,[{key:"toString",value:function(){return"~={"+this.posDecor+"}"}}]),e}(),ye.Command.Path.SetAfterAction=function(){function e(t){de(this,e),this.posDecor=t}return ce(e,[{key:"toString",value:function(){return"~/{"+this.posDecor+"}"}}]),e}(),ye.Command.Path.AddLabelNextSegmentOnly=function(){function e(t){de(this,e),this.labels=t}return ce(e,[{key:"toString",value:function(){return"~<{"+this.labels+"}"}}]),e}(),ye.Command.Path.AddLabelLastSegmentOnly=function(){function e(t){de(this,e),this.labels=t}return ce(e,[{key:"toString",value:function(){return"~>{"+this.labels+"}"}}]),e}(),ye.Command.Path.AddLabelEverySegment=function(){function e(t){de(this,e),this.labels=t}return ce(e,[{key:"toString",value:function(){return"~+{"+this.labels+"}"}}]),e}(),ye.Command.Path.StraightSegment=function(){function e(t){de(this,e),this.segment=t}return ce(e,[{key:"toString",value:function(){return"'"+this.segment}}]),e}(),ye.Command.Path.TurningSegment=function(){function e(t,n){de(this,e),this.turn=t,this.segment=n}return ce(e,[{key:"toString",value:function(){return"`"+this.turn+" "+this.segment}}]),e}(),ye.Command.Path.LastSegment=function(){function e(t){de(this,e),this.segment=t}return ce(e,[{key:"toString",value:function(){return this.segment.toString()}}]),e}(),ye.Command.Path.Turn=function e(){de(this,e)},ye.Command.Path.Turn.Diag=function(){function e(t,n){de(this,e),this.diag=t,this.radius=n}return ce(e,[{key:"toString",value:function(){return this.diag.toString()+" "+this.radius}}]),e}(),ye.Command.Path.Turn.Cir=function(){function e(t,n){de(this,e),this.cir=t,this.radius=n}return ce(e,[{key:"toString",value:function(){return this.cir.toString()+" "+this.radius}}]),e}(),ye.Command.Path.TurnRadius=function e(){de(this,e)},ye.Command.Path.TurnRadius.Default=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return""}}]),e}(),ye.Command.Path.TurnRadius.Dimen=function(){function e(t){de(this,e),this.dimen=t}return ce(e,[{key:"toString",value:function(){return"/"+this.dimen}}]),e}(),ye.Command.Path.Segment=function(){function e(t,n,r){de(this,e),this.pos=t,this.slide=n,this.labels=r}return ce(e,[{key:"toString",value:function(){return this.pos.toString()+" "+this.slide+" "+this.labels}}]),e}(),ye.Command.Path.Labels=function(){function e(t){de(this,e),this.labels=t}return ce(e,[{key:"toString",value:function(){return this.labels.mkString(" ")}}]),e}(),ye.Command.Path.Label=function e(t,n,r){de(this,e),this.anchor=t,this.it=n,this.aliasOption=r},ye.Command.Path.Label.Above=function(e){he(n,e);var t=me(n);function n(e,r,i){return de(this,n),t.call(this,e,r,i)}return ce(n,[{key:"toString",value:function(){return"^("+this.anchor+" "+this.it+" "+this.aliasOption+")"}}]),n}(ye.Command.Path.Label),ye.Command.Path.Label.Below=function(e){he(n,e);var t=me(n);function n(e,r,i){return de(this,n),t.call(this,e,r,i)}return ce(n,[{key:"toString",value:function(){return"_("+this.anchor+" "+this.it+" "+this.aliasOption+")"}}]),n}(ye.Command.Path.Label),ye.Command.Path.Label.At=function(e){he(n,e);var t=me(n);function n(e,r,i){return de(this,n),t.call(this,e,r,i)}return ce(n,[{key:"toString",value:function(){return"|("+this.anchor+" "+this.it+" "+this.aliasOption+")"}}]),n}(ye.Command.Path.Label),ye.Command.Ar=function(){function e(t,n){de(this,e),this.forms=t,this.path=n}return ce(e,[{key:"toString",value:function(){return"\\ar "+this.forms.mkString(" ")+" "+this.path}}]),e}(),ye.Command.Ar.Form=function e(){de(this,e)},ye.Command.Ar.Form.BuildArrow=function(e){he(n,e);var t=me(n);function n(e,r,i,a){var o;return de(this,n),(o=t.call(this)).variant=e,o.tailTip=r,o.stemConn=i,o.headTip=a,o}return ce(n,[{key:"toString",value:function(){return"@"+this.variant+"{"+this.tailTip.toString()+", "+this.stemConn.toString()+", "+this.headTip.toString()+"}"}}]),n}(ye.Command.Ar.Form),ye.Command.Ar.Form.ChangeVariant=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).variant=e,r}return ce(n,[{key:"toString",value:function(){return"@"+this.variant}}]),n}(ye.Command.Ar.Form),ye.Command.Ar.Form.Tip=function e(){de(this,e)},ye.Command.Ar.Form.Tip.Tipchars=function(){function e(t){de(this,e),this.tipchars=t}return ce(e,[{key:"toString",value:function(){return this.tipchars}}]),e}(),ye.Command.Ar.Form.Tip.Object=function(){function e(t){de(this,e),this.object=t}return ce(e,[{key:"toString",value:function(){return"*"+this.object}}]),e}(),ye.Command.Ar.Form.Tip.Dir=function(){function e(t){de(this,e),this.dir=t}return ce(e,[{key:"toString",value:function(){return this.dir}}]),e}(),ye.Command.Ar.Form.Conn=function e(){de(this,e)},ye.Command.Ar.Form.Conn.Connchars=function(){function e(t){de(this,e),this.connchars=t}return ce(e,[{key:"toString",value:function(){return this.connchars}}]),e}(),ye.Command.Ar.Form.Conn.Object=function(){function e(t){de(this,e),this.object=t}return ce(e,[{key:"toString",value:function(){return"*"+this.object}}]),e}(),ye.Command.Ar.Form.Conn.Dir=function(){function e(t){de(this,e),this.dir=t}return ce(e,[{key:"toString",value:function(){return this.dir}}]),e}(),ye.Command.Ar.Form.ChangeStem=function(){function e(t){de(this,e),this.connchar=t}return ce(e,[{key:"toString",value:function(){return"@"+this.connchar}}]),e}(),ye.Command.Ar.Form.DashArrowStem=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"@!"}}]),e}(),ye.Command.Ar.Form.CurveArrow=function(){function e(t,n){de(this,e),this.direction=t,this.dist=n}return ce(e,[{key:"toString",value:function(){return"@/"+this.direction+" "+this.dist+"/"}}]),e}(),ye.Command.Ar.Form.CurveFitToDirection=function(){function e(t,n){de(this,e),this.outDirection=t,this.inDirection=n}return ce(e,[{key:"toString",value:function(){return"@("+this.outDirection+","+this.inDirection+")"}}]),e}(),ye.Command.Ar.Form.CurveWithControlPoints=function(){function e(t){de(this,e),this.coord=t}return ce(e,[{key:"toString",value:function(){return"@`{"+this.coord+"}"}}]),e}(),ye.Command.Ar.Form.AddShape=function(){function e(t){de(this,e),this.shape=t}return ce(e,[{key:"toString",value:function(){return"@["+this.shape+"]"}}]),e}(),ye.Command.Ar.Form.AddModifiers=function(){function e(t){de(this,e),this.modifiers=t}return ce(e,[{key:"toString",value:function(){return"@*{"+this.modifiers.mkString(" ")+"}"}}]),e}(),ye.Command.Ar.Form.Slide=function(){function e(t){de(this,e),this.slideDimen=t}return ce(e,[{key:"toString",value:function(){return"@<"+this.slideDimen+">"}}]),e}(),ye.Command.Ar.Form.LabelAt=function(){function e(t,n){de(this,e),this.anchor=t,this.it=n}return ce(e,[{key:"toString",value:function(){return"|"+this.anchor+" "+this.it}}]),e}(),ye.Command.Ar.Form.LabelAbove=function(){function e(t,n){de(this,e),this.anchor=t,this.it=n}return ce(e,[{key:"toString",value:function(){return"^"+this.anchor+" "+this.it}}]),e}(),ye.Command.Ar.Form.LabelBelow=function(){function e(t,n){de(this,e),this.anchor=t,this.it=n}return ce(e,[{key:"toString",value:function(){return"_"+this.anchor+" "+this.it}}]),e}(),ye.Command.Ar.Form.ReverseAboveAndBelow=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"@?"}}]),e}(),ye.Command.Xymatrix=function(){function e(t,n){de(this,e),this.setup=t,this.rows=n}return ce(e,[{key:"toString",value:function(){return"\\xymatrix"+this.setup+"{\n"+this.rows.mkString("","\\\\\n","")+"\n}"}}]),e}(),ye.Command.Xymatrix.Setup=function e(){de(this,e)},ye.Command.Xymatrix.Setup.Prefix=function(){function e(t){de(this,e),this.prefix=t}return ce(e,[{key:"toString",value:function(){return'"'+this.prefix+'"'}}]),e}(),ye.Command.Xymatrix.Setup.ChangeSpacing=function e(t,n){de(this,e),this.addop=t,this.dimen=n},ye.Command.Xymatrix.Setup.ChangeSpacing.Row=function(e){he(n,e);var t=me(n);function n(e,r){return de(this,n),t.call(this,e,r)}return ce(n,[{key:"toString",value:function(){return"@R"+this.addop+this.dimen}}]),n}(ye.Command.Xymatrix.Setup.ChangeSpacing),ye.Command.Xymatrix.Setup.ChangeSpacing.Column=function(e){he(n,e);var t=me(n);function n(e,r){return de(this,n),t.call(this,e,r)}return ce(n,[{key:"toString",value:function(){return"@C"+this.addop+this.dimen}}]),n}(ye.Command.Xymatrix.Setup.ChangeSpacing),ye.Command.Xymatrix.Setup.ChangeSpacing.RowAndColumn=function(e){he(n,e);var t=me(n);function n(e,r){return de(this,n),t.call(this,e,r)}return ce(n,[{key:"toString",value:function(){return"@"+this.addop+this.dimen}}]),n}(ye.Command.Xymatrix.Setup.ChangeSpacing),ye.Command.Xymatrix.Setup.PretendEntrySize=function e(t){de(this,e),this.dimen=t},ye.Command.Xymatrix.Setup.PretendEntrySize.Height=function(e){he(n,e);var t=me(n);function n(e){return de(this,n),t.call(this,e)}return ce(n,[{key:"toString",value:function(){return"@!R="+this.dimen}}]),n}(ye.Command.Xymatrix.Setup.PretendEntrySize),ye.Command.Xymatrix.Setup.PretendEntrySize.Width=function(e){he(n,e);var t=me(n);function n(e){return de(this,n),t.call(this,e)}return ce(n,[{key:"toString",value:function(){return"@!C="+this.dimen}}]),n}(ye.Command.Xymatrix.Setup.PretendEntrySize),ye.Command.Xymatrix.Setup.PretendEntrySize.HeightAndWidth=function(e){he(n,e);var t=me(n);function n(e){return de(this,n),t.call(this,e)}return ce(n,[{key:"toString",value:function(){return"@!="+this.dimen}}]),n}(ye.Command.Xymatrix.Setup.PretendEntrySize),ye.Command.Xymatrix.Setup.FixGrid=function e(){de(this,e)},ye.Command.Xymatrix.Setup.FixGrid.Row=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"@!R"}}]),n}(ye.Command.Xymatrix.Setup.FixGrid),ye.Command.Xymatrix.Setup.FixGrid.Column=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"@!C"}}]),n}(ye.Command.Xymatrix.Setup.FixGrid),ye.Command.Xymatrix.Setup.FixGrid.RowAndColumn=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"@!"}}]),n}(ye.Command.Xymatrix.Setup.FixGrid),ye.Command.Xymatrix.Setup.AdjustEntrySize=function e(t,n){de(this,e),this.addop=t,this.dimen=n},ye.Command.Xymatrix.Setup.AdjustEntrySize.Margin=function(e){he(n,e);var t=me(n);function n(e,r){return de(this,n),t.call(this,e,r)}return ce(n,[{key:"toString",value:function(){return"@M"+this.addop+this.dimen}}]),n}(ye.Command.Xymatrix.Setup.AdjustEntrySize),ye.Command.Xymatrix.Setup.AdjustEntrySize.Width=function(e){he(n,e);var t=me(n);function n(e,r){return de(this,n),t.call(this,e,r)}return ce(n,[{key:"toString",value:function(){return"@W"+this.addop+this.dimen}}]),n}(ye.Command.Xymatrix.Setup.AdjustEntrySize),ye.Command.Xymatrix.Setup.AdjustEntrySize.Height=function(e){he(n,e);var t=me(n);function n(e,r){return de(this,n),t.call(this,e,r)}return ce(n,[{key:"toString",value:function(){return"@H"+this.addop+this.dimen}}]),n}(ye.Command.Xymatrix.Setup.AdjustEntrySize),ye.Command.Xymatrix.Setup.AdjustLabelSep=function(){function e(t,n){de(this,e),this.addop=t,this.dimen=n}return ce(e,[{key:"toString",value:function(){return"@L"+this.addop+this.dimen}}]),e}(),ye.Command.Xymatrix.Setup.SetOrientation=function(){function e(t){de(this,e),this.direction=t}return ce(e,[{key:"toString",value:function(){return"@"+this.direction}}]),e}(),ye.Command.Xymatrix.Setup.AddModifier=function(){function e(t){de(this,e),this.modifier=t}return ce(e,[{key:"toString",value:function(){return"@*"+this.modifier}}]),e}(),ye.Command.Xymatrix.Row=function(){function e(t){de(this,e),this.entries=t}return ce(e,[{key:"toString",value:function(){return this.entries.mkString(" & ")}}]),e}(),ye.Command.Xymatrix.Entry=function e(){de(this,e)},ye.Command.Xymatrix.Entry.SimpleEntry=function(e){he(n,e);var t=me(n);function n(e,r,i){var a;return de(this,n),(a=t.call(this)).modifiers=e,a.objectbox=r,a.decor=i,a}return ce(n,[{key:"isEmpty",get:function(){return!1}},{key:"toString",value:function(){return this.modifiers.mkString("**{","","}")+" "+this.objectbox+" "+this.decor}}]),n}(ye.Command.Xymatrix.Entry),ye.Command.Xymatrix.Entry.ObjectEntry=function(e){he(n,e);var t=me(n);function n(e,r,i){var a;return de(this,n),(a=t.call(this)).object=e,a.pos=r,a.decor=i,a}return ce(n,[{key:"isEmpty",get:function(){return!1}},{key:"toString",value:function(){return"*"+this.object+" "+this.pos+" "+this.decor}}]),n}(ye.Command.Xymatrix.Entry),ye.Command.Xymatrix.Entry.EmptyEntry=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).decor=e,r}return ce(n,[{key:"isEmpty",get:function(){return!0}},{key:"toString",value:function(){return""+this.decor}}]),n}(ye.Command.Xymatrix.Entry),ye.Command.Twocell=function(){function e(t,n,r){de(this,e),this.twocell=t,this.switches=n,this.arrow=r}return ce(e,[{key:"toString",value:function(){return this.twocell.toString()+this.switches.mkString("")+this.arrow}}]),e}(),ye.Command.Twocell.Hops2cell=function e(t,n){de(this,e),this.hops=t,this.maybeDisplace=n},ye.Command.Twocell.Twocell=function(e){he(n,e);var t=me(n);function n(e,r){return de(this,n),t.call(this,e,r)}return ce(n,[{key:"toString",value:function(){return"\\xtwocell["+this.hops+"]"+this.maybeDisplace.getOrElse("{}")}}]),n}(ye.Command.Twocell.Hops2cell),ye.Command.Twocell.UpperTwocell=function(e){he(n,e);var t=me(n);function n(e,r){return de(this,n),t.call(this,e,r)}return ce(n,[{key:"toString",value:function(){return"\\xuppertwocell["+this.hops+"]"+this.maybeDisplace.getOrElse("{}")}}]),n}(ye.Command.Twocell.Hops2cell),ye.Command.Twocell.LowerTwocell=function(e){he(n,e);var t=me(n);function n(e,r){return de(this,n),t.call(this,e,r)}return ce(n,[{key:"toString",value:function(){return"\\xlowertwocell["+this.hops+"]"+this.maybeDisplace.getOrElse("{}")}}]),n}(ye.Command.Twocell.Hops2cell),ye.Command.Twocell.CompositeMap=function(e){he(n,e);var t=me(n);function n(e,r){return de(this,n),t.call(this,e,r)}return ce(n,[{key:"toString",value:function(){return"\\xcompositemap["+this.hops+"]"+this.maybeDisplace.getOrElse("{}")}}]),n}(ye.Command.Twocell.Hops2cell),ye.Command.Twocell.Switch=function e(){de(this,e)},ye.Command.Twocell.Switch.UpperLabel=function(){function e(t){de(this,e),this.label=t}return ce(e,[{key:"toString",value:function(){return"^"+this.label}}]),e}(),ye.Command.Twocell.Switch.LowerLabel=function(){function e(t){de(this,e),this.label=t}return ce(e,[{key:"toString",value:function(){return"_"+this.label}}]),e}(),ye.Command.Twocell.Switch.SetCurvature=function(){function e(t){de(this,e),this.nudge=t}return ce(e,[{key:"toString",value:function(){return this.nudge.toString()}}]),e}(),ye.Command.Twocell.Switch.DoNotSetCurvedArrows=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"\\omit"}}]),e}(),ye.Command.Twocell.Switch.PlaceModMapObject=function(){function e(){de(this,e)}return ce(e,[{key:"toString",value:function(){return"~!"}}]),e}(),ye.Command.Twocell.Switch.ChangeHeadTailObject=function(){function e(t,n){de(this,e),this.what=t,this.object=n}return ce(e,[{key:"toString",value:function(){return"~"+this.what+"{"+this.object+"}"}}]),e}(),ye.Command.Twocell.Switch.ChangeCurveObject=function(){function e(t,n,r){de(this,e),this.what=t,this.spacer=n,this.maybeObject=r}return ce(e,[{key:"toString",value:function(){return"~"+this.what+"{"+this.spacer+(this.maybeObject.isDefined?"~**"+this.maybeObject.get:"")+"}"}}]),e}(),ye.Command.Twocell.Label=function(){function e(t,n){de(this,e),this.maybeNudge=t,this.labelObject=n}return ce(e,[{key:"toString",value:function(){return this.maybeNudge.toString()+this.labelObject}}]),e}(),ye.Command.Twocell.Nudge=function e(){de(this,e)},ye.Command.Twocell.Nudge.Number=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).number=e,r}return ce(n,[{key:"toString",value:function(){return"<"+this.number+">"}}]),n}(ye.Command.Twocell.Nudge),ye.Command.Twocell.Nudge.Omit=function(e){he(n,e);var t=me(n);function n(){return de(this,n),t.call(this)}return ce(n,[{key:"toString",value:function(){return"<\\omit>"}}]),n}(ye.Command.Twocell.Nudge),ye.Command.Twocell.Arrow=function e(){de(this,e)},ye.Command.Twocell.Arrow.WithOrientation=function(e){he(n,e);var t=me(n);function n(e,r){var i;return de(this,n),(i=t.call(this)).tok=e,i.labelObject=r,i}return ce(n,[{key:"toString",value:function(){return"{["+this.tok+"] "+this.labelObject+"}"}}]),n}(ye.Command.Twocell.Arrow),ye.Command.Twocell.Arrow.WithPosition=function(e){he(n,e);var t=me(n);function n(e,r){var i;return de(this,n),(i=t.call(this)).nudge=e,i.labelObject=r,i}return ce(n,[{key:"toString",value:function(){return"{["+this.nudge+"] "+this.labelObject+"}"}}]),n}(ye.Command.Twocell.Arrow),ye.Command.Newdir=function(){function e(t,n){de(this,e),this.dirMain=t,this.compositeObject=n}return ce(e,[{key:"toString",value:function(){return"\\newdir{"+this.dirMain+"}{"+this.compositeObject+"}"}}]),e}(),ye.Pos.Xyimport=function e(){de(this,e)},ye.Pos.Xyimport.TeXCommand=function(e){he(n,e);var t=me(n);function n(e,r,i,a,o){var u;return de(this,n),(u=t.call(this)).width=e,u.height=r,u.xOffset=i,u.yOffset=a,u.graphics=o,u}return ce(n,[{key:"toString",value:function(){return"\\xyimport("+this.width+", "+this.height+")("+this.xOffset+", "+this.yOffset+"){"+this.graphics+"}"}}]),n}(ye.Pos.Xyimport),ye.Pos.Xyimport.Graphics=function(e){he(n,e);var t=me(n);function n(e,r,i,a,o){var u;return de(this,n),(u=t.call(this)).width=e,u.height=r,u.xOffset=i,u.yOffset=a,u.graphics=o,u}return ce(n,[{key:"toString",value:function(){return"\\xyimport("+this.width+", "+this.height+")("+this.xOffset+", "+this.yOffset+"){"+this.graphics+"}"}}]),n}(ye.Pos.Xyimport),ye.Command.Includegraphics=function(){function e(t,n,r){de(this,e),this.isClipped=t,this.attributeList=n,this.filepath=r}return ce(e,[{key:"isIncludegraphics",get:function(){return!0}},{key:"toString",value:function(){return"\\includegraphics"+(this.isClipped?"*":"")+this.attributeList.mkString("[",",","]")+"{"+this.filepath+"}"}}]),e}(),ye.Command.Includegraphics.Attr=function e(){de(this,e)},ye.Command.Includegraphics.Attr.Width=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).dimen=e,r}return ce(n,[{key:"toString",value:function(){return"width="+this.dimen}}]),n}(ye.Command.Includegraphics.Attr),ye.Command.Includegraphics.Attr.Height=function(e){he(n,e);var t=me(n);function n(e){var r;return de(this,n),(r=t.call(this)).dimen=e,r}return ce(n,[{key:"toString",value:function(){return"height="+this.dimen}}]),n}(ye.Command.Includegraphics.Attr);var xe=Y.fun,ge=Y.elem,we=function(e){return xe(Y.elem(e))},Se=Y.literal,Ce=Y.regex,be=Y.regexLiteral,ke=function(e){return xe(Y.literal(e))},Me=Y.seq,Pe=Y.or,Be=function(e){return Y.lazyParser(e)().rep()},Oe=function(e){return Y.lazyParser(e)().rep1()},Ee=function(e){return Y.lazyParser(e)().opt()},Ae=Y.success,Le=function(e){return function(){var t=e.memo;return void 0===t&&(t=e.memo=e()),t}},je=new Y,De={xy:Le((function(){return je.posDecor().to((function(e){return e}))})),xybox:Le((function(){return Se("{").andr(je.posDecor).andl(ke("}")).to((function(e){return e}))})),xymatrixbox:Le((function(){return je.xymatrix().to((function(e){return new ye.PosDecor(new ye.Pos.Coord(new ye.Coord.C,A.empty),new ye.Decor(A.empty.append(e)))}))})),posDecor:Le((function(){return Me(je.pos,je.decor).to((function(e){return new ye.PosDecor(e.head,e.tail)}))})),pos:Le((function(){return Me(je.coord,Be(je.pos2)).to((function(e){return new ye.Pos.Coord(e.head,e.tail)}))})),nonemptyPos:Le((function(){return Pe(Me(je.nonemptyCoord,Be(je.pos2)),Me(je.coord,Oe(je.pos2))).to((function(e){return new ye.Pos.Coord(e.head,e.tail)}))})),pos2:Le((function(){return Pe(Se("+").andr(je.coord).to((function(e){return new ye.Pos.Plus(e)})),Se("-").andr(je.coord).to((function(e){return new ye.Pos.Minus(e)})),Se("!").andr(je.coord).to((function(e){return new ye.Pos.Skew(e)})),Se(".").andr(je.coord).to((function(e){return new ye.Pos.Cover(e)})),Se(",").andr(je.coord).to((function(e){return new ye.Pos.Then(e)})),Se(";").andr(je.coord).to((function(e){return new ye.Pos.SwapPAndC(e)})),Se("::").andr(je.coord).to((function(e){return new ye.Pos.SetYBase(e)})),Se(":").andr(je.coord).to((function(e){return new ye.Pos.SetBase(e)})),Se("**").andr(je.object).to((function(e){return new ye.Pos.ConnectObject(e)})),Se("*").andr(je.object).to((function(e){return new ye.Pos.DropObject(e)})),Se("?").andr(je.place).to((function(e){return new ye.Pos.Place(e)})),Se("@+").andr(je.coord).to((function(e){return new ye.Pos.PushCoord(e)})),Se("@-").andr(je.coord).to((function(e){return new ye.Pos.EvalCoordThenPop(e)})),Se("@=").andr(je.coord).to((function(e){return new ye.Pos.LoadStack(e)})),Se("@@").andr(je.coord).to((function(e){return new ye.Pos.DoCoord(e)})),Se("@i").to((function(){return new ye.Pos.InitStack})),Se("@(").to((function(){return new ye.Pos.EnterFrame})),Se("@)").to((function(){return new ye.Pos.LeaveFrame})),Se("=:").andr(ke('"')).andr(je.id).andl(we('"')).to((function(e){return new ye.Pos.SaveBase(e)})),Se("=@").andr(ke('"')).andr(je.id).andl(we('"')).to((function(e){return new ye.Pos.SaveStack(e)})),Se("=").andr(ke('"')).andr(je.id).andl(we('"')).to((function(e){return new ye.Pos.SavePos(e)})),Se("=").andr(je.nonemptyCoord).andl(ke('"')).and(je.id).andl(we('"')).to((function(e){return new ye.Pos.SaveMacro(e.head,e.tail)})),je.xyimport)})),coord:Le((function(){return Pe(je.nonemptyCoord,Ae("empty").to((function(){return new ye.Coord.C})))})),nonemptyCoord:Le((function(){return Pe(Se("c").to((function(){return new ye.Coord.C})),Se("p").to((function(){return new ye.Coord.P})),Se("x").to((function(){return new ye.Coord.X})),Se("y").to((function(){return new ye.Coord.Y})),je.vector().to((function(e){return new ye.Coord.Vector(e)})),Se('"').andr(je.id).andl(we('"')).to((function(e){return new ye.Coord.Id(e)})),Se("{").andr(je.posDecor).andl(ke("}")).to((function(e){return new ye.Coord.Group(e)})),Se("s").andr(xe(be(/^\d/))).to((function(e){return new ye.Coord.StackPosition(parseInt(e))})),Se("s").andr(ke("{")).and(je.nonnegativeNumber).andl(ke("}")).to((function(e){return new ye.Coord.StackPosition(e)})),Se("[").andr(xe(Ee(Se('"').andr(je.id).andl(we('"'))).to((function(e){return e.getOrElse("")})))).and(je.number).andl(ke(",")).and(je.number).andl(ke("]")).to((function(e){return new ye.Coord.DeltaRowColumn(e.head.head,e.head.tail,e.tail)})),Se("[").andr(xe(Ee(Se('"').andr(je.id).andl(we('"'))).to((function(e){return e.getOrElse("")})))).and(xe(Be(Ce(/^[lrud]/)))).andl(ke("]")).to((function(e){return new ye.Coord.Hops(e.head,e.tail)})),Se("[").andr(xe(Ee(Se('"').andr(je.id).andl(we('"'))).to((function(e){return e.getOrElse("")})))).and(xe(Oe(Ce(/^[lrud]/)))).and(je.place).andl(ke("]")).to((function(e){return new ye.Coord.DeltaRowColumn(e.head.head,e.head.tail,new ye.Pos.Place(e.tail))})))})),vector:Le((function(){return Pe(Se("(").andr(je.factor).andl(ke(",")).and(je.factor).andl(ke(")")).to((function(e){return new ye.Vector.InCurBase(e.head,e.tail)})),Se("<").andr(je.dimen).andl(ke(",")).and(je.dimen).andl(ke(">")).to((function(e){return new ye.Vector.Abs(e.head,e.tail)})),Se("<").andr(je.dimen).andl(ke(">")).to((function(e){return new ye.Vector.Abs(e,e)})),Se("a").andr(ke("(")).andr(je.number).andl(ke(")")).to((function(e){return new ye.Vector.Angle(e)})),Se("/").andr(je.direction).and(je.looseDimen).andl(ke("/")).to((function(e){return new ye.Vector.Dir(e.head,e.tail)})),Se("0").to((function(e){return new ye.Vector.Abs("0mm","0mm")})),(function(){return je.corner().and(xe(Y.opt(xe(Se("(").andr(je.factor).andl(ke(")")))).to((function(e){return e.getOrElse(1)})))).to((function(e){return new ye.Vector.Corner(e.head,e.tail)}))}))})),corner:Le((function(){return Pe(be(/^(CL|LC)/).to((function(){return new ye.Corner.CL})),be(/^(CR|RC)/).to((function(){return new ye.Corner.CR})),be(/^(CD|DC)/).to((function(){return new ye.Corner.CD})),be(/^(CU|UC)/).to((function(){return new ye.Corner.CU})),be(/^(LD|DL)/).to((function(){return new ye.Corner.LD})),be(/^(RD|DR)/).to((function(){return new ye.Corner.RD})),be(/^(LU|UL)/).to((function(){return new ye.Corner.LU})),be(/^(RU|UR)/).to((function(){return new ye.Corner.RU})),Se("L").to((function(){return new ye.Corner.L})),Se("R").to((function(){return new ye.Corner.R})),Se("D").to((function(){return new ye.Corner.D})),Se("U").to((function(){return new ye.Corner.U})),Se("E").to((function(){return new ye.Corner.NearestEdgePoint})),Se("P").to((function(){return new ye.Corner.PropEdgePoint})),Se("A").to((function(){return new ye.Corner.Axis})))})),place:Le((function(){return Pe(Se("<").andr(je.place).to((function(e){return new ye.Place(1,0,void 0,void 0).compound(e)})),Se(">").andr(je.place).to((function(e){return new ye.Place(0,1,void 0,void 0).compound(e)})),Se("(").andr(je.factor).andl(ke(")")).and(je.place).to((function(e){return new ye.Place(0,0,new ye.Place.Factor(e.head),void 0).compound(e.tail)})),Se("!").andr(ke("{")).andr(je.pos).andl(ke("}")).and(je.slide).to((function(e){return new ye.Place(0,0,new ye.Place.Intercept(e.head),e.tail)})),(function(){return je.slide().to((function(e){return new ye.Place(0,0,void 0,e)}))}))})),slide:Le((function(){return Pe(Se("/").andr(je.dimen).andl(ke("/")).to((function(e){return new ye.Slide(new x.Some(e))})),Ae("no slide").to((function(){return new ye.Slide(x.empty)})))})),factor:Le(xe(be(/^[+\-]?(\d+(\.\d*)?|\d*\.\d+)/).to((function(e){return parseFloat(e)})))),number:Le(xe(be(/^[+\-]?\d+/).to((function(e){return parseInt(e)})))),nonnegativeNumber:Le(xe(be(/^\d+/).to((function(e){return parseInt(e)})))),unit:Le(xe(be(/^(em|ex|px|pt|pc|in|cm|mm|mu)/).to((function(e){return e})))),dimen:Le((function(){return je.factor().and(je.unit).to((function(e){return e.head.toString()+e.tail}))})),looseDimen:Le((function(){return je.looseFactor().and(je.unit).to((function(e){return e.head.toString()+e.tail}))})),looseFactor:Le(xe(Pe(be(/^(\d \d*(\.\d*))/).to((function(e){return parseFloat(e.replace(/ /,""))})),be(/^[+\-]?(\d+(\.\d*)?|\d*\.\d+)/).to((function(e){return parseFloat(e)}))))),id:Le(xe(Ce(/^[^"]+/))),object:Le((function(){return Pe(Be(je.modifier).and(je.objectbox).to((function(e){return new ye.Object(e.head,e.tail)})))})),objectbox:Le((function(){return Pe(je.mathText,Se("@").andr(je.dir),Se("\\dir").andr(je.dir),Se("\\cir").andr(je.cirRadius).andl(ke("{")).and(je.cir).andl(ke("}")).to((function(e){return new ye.ObjectBox.Cir(e.head,e.tail)})),Se("\\frm").andr(je.frameRadius).andl(ke("{")).and(je.frameMain).andl(ke("}")).to((function(e){return new ye.ObjectBox.Frame(e.head,e.tail)})),Se("\\object").andr(je.object).to((function(e){return new ye.ObjectBox.WrapUpObject(e)})),Se("\\composite").and(ke("{")).andr(je.compositeObject).andl(ke("}")).to((function(e){return new ye.ObjectBox.CompositeObject(e)})),Se("\\xybox").and(ke("{")).andr(je.posDecor).andl(ke("}")).to((function(e){return new ye.ObjectBox.Xybox(e)})),Se("\\xymatrix").andr(je.xymatrix).to((function(e){return new ye.ObjectBox.Xymatrix(e)})),je.txt,je.curve,Ce(/^(\\[a-zA-Z@][a-zA-Z0-9@]+)/).andl(ke("{")).and(je.text).andl(ke("}")).and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail;return je.toMath(t.head+"{"+t.tail+"}",n)})))})),compositeObject:Le((function(){return je.object().and(xe(Be(Se("*").andr(je.object)))).to((function(e){return e.tail.prepend(e.head)}))})),mathText:Le((function(){return Se("{").andr(je.text).andl(we("}")).and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail;return je.toMath("\\hbox{$\\objectstyle{"+t+"}$}",n)}))})),toMath:function(e,t){var n=t(e);return new ye.ObjectBox.Text(n)},textNodeCreator:Le((function(){return new Y.Parser((function(e){return new Y.Success(e.context.createTextNode,e)}))})),text:Le((function(){return Ce(/^[^{}\\%]*/).and((function(){return Pe(Ce(/^(\\\{|\\\}|\\%|\\)/).to((function(e){return e})),ge("{").andr(je.text).andl(we("}")).to((function(e){return"{"+e+"}"})),Ce(/^%[^\r\n]*(\r\n|\r|\n)?/).to((function(e){return" "}))).and(xe(Ce(/^[^{}\\%]*/))).rep().to((function(e){var t="";return e.foreach((function(e){t+=e.head+e.tail})),t}))})).to((function(e){return e.head+e.tail}))})),txt:Le((function(){return Se("\\txt").andr(je.txtWidth).and(xe(Ce(/^(\\[a-zA-Z@][a-zA-Z0-9@]+)?/))).andl(ke("{")).and(je.text).andl(ke("}")).and(je.textNodeCreator).to((function(e){var t,n=e.head,r=e.tail,i=n.head.head,a=n.head.tail,o=n.tail,u=o.split("\\\\");if(u.length<=1)t=a+"{\\hbox{"+o+"}}";else{t="\\hbox{$\\begin{array}{c}\n";for(var s=0;s<u.length;s++)t+=a+"{\\hbox{"+u[s].replace(/(^[\r\n\s]+)|([\r\n\s]+$)/g,"")+"}}",s!=u.length-1&&(t+="\\\\\n");t+="\\end{array}$}"}return new ye.ObjectBox.Txt(i,je.toMath(t,r))}))})),txtWidth:Le((function(){return Pe(Se("<").andr(je.dimen).andl(ke(">")).to((function(e){return new ye.Vector.Abs(e,e)})).to((function(e){return new ye.ObjectBox.Txt.Width.Vector(e)})),Ae("default").to((function(){return new ye.ObjectBox.Txt.Width.Default})))})),dir:Le((function(){return be(/^[\^_0123]/).opt().andl(ke("{")).and(je.dirMain).andl(ke("}")).to((function(e){return new ye.ObjectBox.Dir(e.head.getOrElse(""),e.tail)}))})),dirMain:Le((function(){return Ce(/^(-|\.|~|>|<|\(|\)|`|'|\||\*|\+|x|\/|o|=|:|[a-zA-Z@ ])+/).opt().to((function(e){return e.getOrElse("")}))})),cirRadius:Le((function(){return Pe(je.vector().to((function(e){return new ye.ObjectBox.Cir.Radius.Vector(e)})),Ae("default").to((function(){return new ye.ObjectBox.Cir.Radius.Default})))})),frameRadius:Le((function(){return Pe(je.frameRadiusVector().to((function(e){return new ye.ObjectBox.Frame.Radius.Vector(e)})),Ae("default").to((function(){return new ye.ObjectBox.Frame.Radius.Default})))})),frameRadiusVector:Le((function(){return Pe(Se("<").andr(je.dimen).andl(ke(",")).and(je.dimen).andl(ke(">")).to((function(e){return new ye.Vector.Abs(e.head,e.tail)})),Se("<").andr(je.dimen).andl(ke(">")).to((function(e){return new ye.Vector.Abs(e,e)})))})),frameMain:Le((function(){return Ce(/^(((_|\^)?(\\\{|\\\}|\(|\)))|[\-=oe,\.\*]*)/)})),cir:Le((function(){return Pe(je.nonemptyCir,Ae("full").to((function(){return new ye.ObjectBox.Cir.Cir.Full})))})),nonemptyCir:Le((function(){return je.diag().and(xe(be(/^[_\^]/))).and(je.diag).to((function(e){return new ye.ObjectBox.Cir.Cir.Segment(e.head.head,e.head.tail,e.tail)}))})),curve:Le((function(){return Se("\\crv").andr(je.curveModifier).andl(ke("{")).and(je.curveObject).and(je.curvePoslist).andl(ke("}")).to((function(e){return new ye.ObjectBox.Curve(e.head.head,e.head.tail,e.tail)}))})),curveModifier:Le((function(){return Be(xe(Se("~").andr(je.curveOption)))})),curveOption:Le((function(){return Pe(Se("p").to((function(){return new ye.ObjectBox.Curve.Modifier.p})),Se("P").to((function(){return new ye.ObjectBox.Curve.Modifier.P})),Se("l").to((function(){return new ye.ObjectBox.Curve.Modifier.l})),Se("L").to((function(){return new ye.ObjectBox.Curve.Modifier.L})),Se("c").to((function(){return new ye.ObjectBox.Curve.Modifier.c})),Se("C").to((function(){return new ye.ObjectBox.Curve.Modifier.C})),Se("pc").to((function(){return new ye.ObjectBox.Curve.Modifier.pc})),Se("pC").to((function(){return new ye.ObjectBox.Curve.Modifier.pC})),Se("Pc").to((function(){return new ye.ObjectBox.Curve.Modifier.Pc})),Se("PC").to((function(){return new ye.ObjectBox.Curve.Modifier.PC})),Se("lc").to((function(){return new ye.ObjectBox.Curve.Modifier.lc})),Se("lC").to((function(){return new ye.ObjectBox.Curve.Modifier.lC})),Se("Lc").to((function(){return new ye.ObjectBox.Curve.Modifier.Lc})),Se("LC").to((function(){return new ye.ObjectBox.Curve.Modifier.LC})),Se("cC").to((function(){return new ye.ObjectBox.Curve.Modifier.cC})))})),curveObject:Le((function(){return Be(Pe(Se("~*").andr(je.object).to((function(e){return new ye.ObjectBox.Curve.Object.Drop(e)})),Se("~**").andr(je.object).to((function(e){return new ye.ObjectBox.Curve.Object.Connect(e)}))))})),curvePoslist:Le((function(){return Pe(Se("&").andr(je.curvePoslist2).to((function(e){return e.prepend(new ye.ObjectBox.Curve.PosList.CurPos)})),Se("~@").andr(ke("&")).andr(je.curvePoslist2).to((function(e){return e.prepend(new ye.ObjectBox.Curve.PosList.AddStack)})),Se("~@").to((function(){return A.empty.prepend(new ye.ObjectBox.Curve.PosList.AddStack)})),je.pos().andl(ke("&")).and(je.curvePoslist2).to((function(e){return e.tail.prepend(new ye.ObjectBox.Curve.PosList.Pos(e.head))})),je.nonemptyPos().to((function(e){return A.empty.prepend(new ye.ObjectBox.Curve.PosList.Pos(e))})),Ae("empty").to((function(){return A.empty})))})),curvePoslist2:Le((function(){return Pe(Se("&").andr(je.curvePoslist2).to((function(e){return e.prepend(new ye.ObjectBox.Curve.PosList.CurPos)})),Se("~@").andr(ke("&")).andr(je.curvePoslist2).to((function(e){return e.prepend(new ye.ObjectBox.Curve.PosList.AddStack)})),Se("~@").to((function(){return A.empty.prepend(new ye.ObjectBox.Curve.PosList.AddStack)})),je.nonemptyPos().andl(ke("&")).and(je.curvePoslist2).to((function(e){return e.tail.prepend(new ye.ObjectBox.Curve.PosList.Pos(e.head))})),je.nonemptyPos().to((function(e){return A.empty.prepend(new ye.ObjectBox.Curve.PosList.Pos(e))})),Ae("empty").to((function(){return A.empty.prepend(new ye.ObjectBox.Curve.PosList.CurPos)})))})),modifier:Le((function(){return Pe(Se("!").andr(je.vector).to((function(e){return new ye.Modifier.Vector(e)})),Se("!").to((function(e){return new ye.Modifier.RestoreOriginalRefPoint})),Se("[").andr(je.shape).andl(ke("]")).to((function(e){return e})),Se("i").to((function(e){return new ye.Modifier.Invisible})),Se("h").to((function(e){return new ye.Modifier.Hidden})),je.addOp().and(je.size).to((function(e){return new ye.Modifier.AddOp(e.head,e.tail)})),je.nonemptyDirection().to((function(e){return new ye.Modifier.Direction(e)})))})),addOp:Le((function(){return Pe(Se("+=").to((function(){return new ye.Modifier.AddOp.GrowTo})),Se("-=").to((function(){return new ye.Modifier.AddOp.ShrinkTo})),Se("+").to((function(){return new ye.Modifier.AddOp.Grow})),Se("-").to((function(){return new ye.Modifier.AddOp.Shrink})),Se("=").to((function(){return new ye.Modifier.AddOp.Set})))})),size:Le((function(){return Pe((function(){return je.vector().to((function(e){return new ye.Modifier.AddOp.VactorSize(e)}))}),Ae("default size").to((function(){return new ye.Modifier.AddOp.DefaultSize})))})),shape:Le((function(){return Pe(Se(".").to((function(){return new ye.Modifier.Shape.Point})),je.frameShape,je.alphabets().to((function(e){return new ye.Modifier.Shape.Alphabets(e)})),Se("=").andr(je.alphabets).to((function(e){return new ye.Modifier.Shape.DefineShape(e)})),Ae("rect").to((function(){return new ye.Modifier.Shape.Rect})))})),frameShape:Le((function(){return Se("F").andr(je.frameMain).and(xe(Be(Se(":").andr(xe(Pe(je.frameRadiusVector().to((function(e){return new ye.Modifier.Shape.Frame.Radius(e)})),je.colorName().to((function(e){return new ye.Modifier.Shape.Frame.Color(e)})))))))).to((function(e){var t=e.head;return""===t&&(t="-"),new ye.Modifier.Shape.Frame(t,e.tail)}))})),alphabets:Le((function(){return Ce(/^([a-zA-Z]+)/)})),colorName:Le((function(){return Ce(/^([a-zA-Z][a-zA-Z0-9]*)/)})),direction:Le((function(){return Me(je.direction0,Be(je.direction1)).to((function(e){return new ye.Direction.Compound(e.head,e.tail)}))})),direction0:Le((function(){return Pe(je.direction2,je.diag().to((function(e){return new ye.Direction.Diag(e)})))})),direction1:Le((function(){return Pe(Se(":").andr(je.vector).to((function(e){return new ye.Direction.RotVector(e)})),Se("_").to((function(e){return new ye.Direction.RotAntiCW})),Se("^").to((function(e){return new ye.Direction.RotCW})))})),direction2:Le((function(){return Pe(Se("v").andr(je.vector).to((function(e){return new ye.Direction.Vector(e)})),Se("q").andr(ke("{")).andr(je.posDecor).andl(ke("}")).to((function(e){return new ye.Direction.ConstructVector(e)})))})),nonemptyDirection:Le((function(){return Pe(Me(je.nonemptyDirection0,Be(je.direction1)),Me(je.direction0,Oe(je.direction1))).to((function(e){return new ye.Direction.Compound(e.head,e.tail)}))})),nonemptyDirection0:Le((function(){return Pe(je.direction2,je.nonemptyDiag().to((function(e){return new ye.Direction.Diag(e)})))})),diag:Le((function(){return Pe(je.nonemptyDiag,Ae("empty").to((function(e){return new ye.Diag.Default})))})),nonemptyDiag:Le((function(){return Pe(be(/^(ld|dl)/).to((function(e){return new ye.Diag.LD})),be(/^(rd|dr)/).to((function(e){return new ye.Diag.RD})),be(/^(lu|ul)/).to((function(e){return new ye.Diag.LU})),be(/^(ru|ur)/).to((function(e){return new ye.Diag.RU})),Se("l").to((function(e){return new ye.Diag.L})),Se("r").to((function(e){return new ye.Diag.R})),Se("d").to((function(e){return new ye.Diag.D})),Se("u").to((function(e){return new ye.Diag.U})))})),decor:Le((function(){return je.command().rep().to((function(e){return new ye.Decor(e)}))})),command:Le((function(){return Pe(Se("\\ar").andr(xe(Be(je.arrowForm))).and(je.path).to((function(e){return new ye.Command.Ar(e.head,e.tail)})),Se("\\xymatrix").andr(je.xymatrix),Se("\\PATH").andr(je.path).to((function(e){return new ye.Command.Path(e)})),Se("\\afterPATH").andr(ke("{")).andr(je.decor).andl(ke("}")).and(je.path).to((function(e){return new ye.Command.AfterPath(e.head,e.tail)})),Se("\\save").andr(je.pos).to((function(e){return new ye.Command.Save(e)})),Se("\\restore").to((function(){return new ye.Command.Restore})),Se("\\POS").andr(je.pos).to((function(e){return new ye.Command.Pos(e)})),Se("\\afterPOS").andr(ke("{")).andr(je.decor).andl(ke("}")).and(je.pos).to((function(e){return new ye.Command.AfterPos(e.head,e.tail)})),Se("\\drop").andr(je.object).to((function(e){return new ye.Command.Drop(e)})),Se("\\connect").andr(je.object).to((function(e){return new ye.Command.Connect(e)})),Se("\\relax").to((function(){return new ye.Command.Relax})),Se("\\xyignore").andr(ke("{")).andr(je.pos).and(je.decor).andl(ke("}")).to((function(e){return new ye.Command.Ignore(e.head,e.tail)})),Se("\\xyshowAST").andr(ke("{")).andr(je.pos).and(je.decor).andl(ke("}")).to((function(e){return new ye.Command.ShowAST(e.head,e.tail)})),je.twocellCommand)})),arrowForm:Le((function(){return Pe(Se("@").andr(xe(Ce(/^([\-\.~=:])/))).to((function(e){return new ye.Command.Ar.Form.ChangeStem(e)})),Se("@").andr(ke("!")).to((function(e){return new ye.Command.Ar.Form.DashArrowStem})),Se("@").andr(ke("/")).andr(je.direction).and(xe(Ee(je.looseDimen))).andl(ke("/")).to((function(e){return new ye.Command.Ar.Form.CurveArrow(e.head,e.tail.getOrElse(".5pc"))})),Se("@").andr(ke("(")).andr(je.direction).andl(ke(",")).and(je.direction).andl(ke(")")).to((function(e){return new ye.Command.Ar.Form.CurveFitToDirection(e.head,e.tail)})),Se("@").andr(ke("`")).andr(je.coord).to((function(e){return new ye.Command.Ar.Form.CurveWithControlPoints(e)})),Se("@").andr(ke("[")).andr(je.shape).andl(ke("]")).to((function(e){return new ye.Command.Ar.Form.AddShape(e)})),Se("@").andr(ke("*")).andr(ke("{")).andr(xe(Be(je.modifier))).andl(ke("}")).to((function(e){return new ye.Command.Ar.Form.AddModifiers(e)})),Se("@").andr(ke("<")).andr(je.dimen).andl(ke(">")).to((function(e){return new ye.Command.Ar.Form.Slide(e)})),Se("|").andr(je.anchor).and(je.it).to((function(e){return new ye.Command.Ar.Form.LabelAt(e.head,e.tail)})),Se("^").andr(je.anchor).and(je.it).to((function(e){return new ye.Command.Ar.Form.LabelAbove(e.head,e.tail)})),Se("_").andr(je.anchor).and(je.it).to((function(e){return new ye.Command.Ar.Form.LabelBelow(e.head,e.tail)})),Se("@").andr(ke("?")).to((function(){return new ye.Command.Ar.Form.ReverseAboveAndBelow})),Se("@").andr(xe(Ce(/^([\^_0123])/).opt())).and(xe(Ee(je.tipConnTip))).to((function(e){var t=e.head.getOrElse("");if(e.tail.isDefined){var n=e.tail.get;return new ye.Command.Ar.Form.BuildArrow(t,n.tail,n.stem,n.head)}return new ye.Command.Ar.Form.ChangeVariant(t)})))})),tipConnTip:Le((function(){return Se("{").andr(xe(Ee(je.nonemptyTip))).and(xe(Ee(je.nonemptyConn))).and(xe(Ee(je.nonemptyTip))).andl(ke("}")).to((function(e){var t,n,r,i=e.head.head,a=e.head.tail,o=e.tail,u=new ye.Command.Ar.Form.Tip.Tipchars("");return a.isDefined||o.isDefined?(t=i.getOrElse(u),n=a.getOrElse(new ye.Command.Ar.Form.Conn.Connchars("")),r=o.getOrElse(u)):i.isDefined?(t=u,n=new ye.Command.Ar.Form.Conn.Connchars("-"),r=i.getOrElse(u)):(t=u,n=new ye.Command.Ar.Form.Conn.Connchars(""),r=u),{tail:t,stem:n,head:r}}))})),nonemptyTip:Le((function(){return Pe(Ce(/^([<>()|'`+\/a-zA-Z ]+)/).to((function(e){return new ye.Command.Ar.Form.Tip.Tipchars(e)})),Se("*").andr(je.object).to((function(e){return new ye.Command.Ar.Form.Tip.Object(e)})),je.dir().to((function(e){return new ye.Command.Ar.Form.Tip.Dir(e)})))})),nonemptyConn:Le((function(){return Pe(Ce(/^([\-\.~=:]+)/).to((function(e){return new ye.Command.Ar.Form.Conn.Connchars(e)})),Se("*").andr(je.object).to((function(e){return new ye.Command.Ar.Form.Conn.Object(e)})),je.dir().to((function(e){return new ye.Command.Ar.Form.Conn.Dir(e)})))})),path:Le((function(){return je.path2(A.empty).to((function(e){return new ye.Command.Path.Path(e)}))})),path2:function(e){var t=Le((function(){return je.path2(e)}));return Pe(je.path3().and(t).to((function(e){return e.tail.prepend(e.head)})),Me("~","{",t,"}").to((function(e){return e.head.tail})).into((function(e){return je.path2(e)})),je.segment().to((function(e){return A.empty.prepend(new ye.Command.Path.LastSegment(e))})),Ae(e).to((function(e){return e})))},path3:Le((function(){return Pe(Me("~","=","{",je.posDecor,"}").to((function(e){return new ye.Command.Path.SetBeforeAction(e.head.tail)})),Me("~","/","{",je.posDecor,"}").to((function(e){return new ye.Command.Path.SetAfterAction(e.head.tail)})),Me("~","<","{",je.labels,"}").to((function(e){return new ye.Command.Path.AddLabelNextSegmentOnly(e.head.tail)})),Me("~",">","{",je.labels,"}").to((function(e){return new ye.Command.Path.AddLabelLastSegmentOnly(e.head.tail)})),Me("~","+","{",je.labels,"}").to((function(e){return new ye.Command.Path.AddLabelEverySegment(e.head.tail)})),Me("'",je.segment).to((function(e){return new ye.Command.Path.StraightSegment(e.tail)})),Me("`",je.turn,je.segment).to((function(e){return new ye.Command.Path.TurningSegment(e.head.tail,e.tail)})))})),turn:Le((function(){return Pe(je.nonemptyCir().and(je.turnRadius).to((function(e){return new ye.Command.Path.Turn.Cir(e.head,e.tail)})),je.diag().and(je.turnRadius).to((function(e){return new ye.Command.Path.Turn.Diag(e.head,e.tail)})))})),turnRadius:Le((function(){return Pe(Se("/").andr(je.dimen).to((function(e){return new ye.Command.Path.TurnRadius.Dimen(e)})),Ae("default").to((function(){return new ye.Command.Path.TurnRadius.Default})))})),segment:Le((function(){return je.nonemptyPos().and(je.pathSlide).and(je.labels).to((function(e){return new ye.Command.Path.Segment(e.head.head,e.head.tail,e.tail)}))})),pathSlide:Le((function(){return Pe(Se("<").andr(je.dimen).andl(ke(">")).to((function(e){return new ye.Slide(new x.Some(e))})),Ae("no slide").to((function(){return new ye.Slide(x.empty)})))})),labels:Le((function(){return je.label().rep().to((function(e){return new ye.Command.Path.Labels(e)}))})),label:Le((function(){return Pe(Me("^",je.anchor,je.it,je.alias).to((function(e){return new ye.Command.Path.Label.Above(new ye.Pos.Place(e.head.head.tail),e.head.tail,e.tail)})),Me("_",je.anchor,je.it,je.alias).to((function(e){return new ye.Command.Path.Label.Below(new ye.Pos.Place(e.head.head.tail),e.head.tail,e.tail)})),Me("|",je.anchor,je.it,je.alias).to((function(e){return new ye.Command.Path.Label.At(new ye.Pos.Place(e.head.head.tail),e.head.tail,e.tail)})))})),anchor:Le((function(){return Pe(Se("-").andr(je.anchor).to((function(e){return new ye.Place(1,1,new ye.Place.Factor(.5),void 0).compound(e)})),je.place)})),it:Le((function(){return Be(Se("[").andr(je.shape).andl(ke("]")).to((function(e){return e}))).and(je.it2).to((function(e){return new ye.Object(e.head.concat(e.tail.modifiers),e.tail.object)}))})),it2:Le((function(){return Pe(be(/^[0-9a-zA-Z]/).and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail;return new ye.Object(A.empty,je.toMath("\\labelstyle "+t,n))})),be(/^(\\[a-zA-Z][a-zA-Z0-9]*)/).and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail;return new ye.Object(A.empty,je.toMath("\\labelstyle "+t,n))})),Se("{").andr(je.text).andl(we("}")).and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail;return new ye.Object(A.empty,je.toMath("\\labelstyle "+t,n))})),Se("*").andr(je.object),Se("@").andr(je.dir).to((function(e){return new ye.Object(A.empty,e)})))})),alias:Le((function(){return Me("=",'"',je.id,'"').opt().to((function(e){return e.map((function(e){return e.head.tail}))}))})),xymatrix:Le((function(){return je.setup().andl(ke("{")).and(je.rows).andl(ke("}")).to((function(e){return new ye.Command.Xymatrix(e.head,e.tail)}))})),setup:Le((function(){return Be(xe(Pe(Se('"').andr(xe(Ce(/^[^"]+/))).andl(we('"')).to((function(e){return new ye.Command.Xymatrix.Setup.Prefix(e)})),Se("@!").andr(xe(Ce(/^[RC]/).opt().to((function(e){return e.getOrElse("")})))).and(xe(Pe(ge("0").to((function(){return"0em"})),ge("=").andr(je.dimen)))).to((function(e){var t=e.tail;switch(e.head){case"R":return new ye.Command.Xymatrix.Setup.PretendEntrySize.Height(t);case"C":return new ye.Command.Xymatrix.Setup.PretendEntrySize.Width(t);default:return new ye.Command.Xymatrix.Setup.PretendEntrySize.HeightAndWidth(t)}})),Se("@!").andr(xe(Pe(ge("R").to((function(){return new ye.Command.Xymatrix.Setup.FixGrid.Row})),ge("C").to((function(){return new ye.Command.Xymatrix.Setup.FixGrid.Column}))).opt().to((function(e){return e.getOrElse(new ye.Command.Xymatrix.Setup.FixGrid.RowAndColumn)})))),Se("@").andr(xe(Ce(/^[MWHL]/))).and(je.addOp).and(je.dimen).to((function(e){var t=e.head.tail,n=e.tail;switch(e.head.head){case"M":return new ye.Command.Xymatrix.Setup.AdjustEntrySize.Margin(t,n);case"W":return new ye.Command.Xymatrix.Setup.AdjustEntrySize.Width(t,n);case"H":return new ye.Command.Xymatrix.Setup.AdjustEntrySize.Height(t,n);case"L":return new ye.Command.Xymatrix.Setup.AdjustLabelSep(t,n)}})),Se("@").andr(je.nonemptyDirection).to((function(e){return new ye.Command.Xymatrix.Setup.SetOrientation(e)})),Se("@*[").andr(je.shape).andl(ke("]")).to((function(e){return new ye.Command.Xymatrix.Setup.AddModifier(e)})),Se("@*").andr(je.addOp).and(je.size).to((function(e){return new ye.Command.Xymatrix.Setup.AddModifier(new ye.Modifier.AddOp(e.head,e.tail))})),Se("@").andr(xe(Ce(/^[RC]/).opt().to((function(e){return e.getOrElse("")})))).and(je.addOp).and(je.dimen).to((function(e){var t=e.head.tail,n=e.tail;switch(e.head.head){case"R":return new ye.Command.Xymatrix.Setup.ChangeSpacing.Row(t,n);case"C":return new ye.Command.Xymatrix.Setup.ChangeSpacing.Column(t,n);default:return new ye.Command.Xymatrix.Setup.ChangeSpacing.RowAndColumn(t,n)}})),Se("@1").to((function(){return new ye.Command.Xymatrix.Setup.AdjustEntrySize.Margin(new ye.Modifier.AddOp.Set,"1pc")})))))})),rows:Le((function(){return je.row().and(xe(Be(Se("\\\\").andr(je.row)))).to((function(e){var t=e.tail.prepend(e.head);if(!t.isEmpty){var n=t.at(t.length()-1);1===n.entries.length()&&n.entries.at(0).isEmpty&&(t=t.reverse().tail.reverse())}return t}))})),row:Le((function(){return je.entry().and(xe(Be(Se("&").andr(je.entry)))).to((function(e){return new ye.Command.Xymatrix.Row(e.tail.prepend(e.head))}))})),entry:Le((function(){return Pe(Se("*").andr(je.object).and(je.pos).and(je.decor).to((function(e){var t=e.head.head,n=e.head.tail,r=e.tail;return new ye.Command.Xymatrix.Entry.ObjectEntry(t,n,r)})),je.entryModifier().rep().and(je.looseObjectbox).and(je.decor).to((function(e){var t=e.head.head.foldLeft(A.empty,(function(e,t){return t.concat(e)})),n=e.head.tail.isEmpty,r=e.head.tail.object,i=e.tail;return n&&t.isEmpty?new ye.Command.Xymatrix.Entry.EmptyEntry(i):new ye.Command.Xymatrix.Entry.SimpleEntry(t,r,i)})))})),entryModifier:Le((function(){return Pe(Se("**").andr(ke("[")).andr(je.shape).andl(ke("]")).to((function(e){return A.empty.append(e)})),Se("**").andr(ke("{")).andr(xe(Be(je.modifier))).andl(ke("}")))})),looseObjectbox:Le((function(){return Pe(je.objectbox().to((function(e){return{isEmpty:!1,object:e}})),Ce(/^[^\\{}%&]+/).opt().to((function(e){return e.getOrElse("")})).and(xe(Be(Pe(ge("{").andr(je.text).andl(we("}")).to((function(e){return"{"+e+"}"})),ge("\\").andr(xe((e=Ce(/^(\\|ar|xymatrix|PATH|afterPATH|save|restore|POS|afterPOS|drop|connect|xyignore|([lrud]+(twocell|uppertwocell|lowertwocell|compositemap))|xtwocell|xuppertwocell|xlowertwocell|xcompositemap)/),Y.not(Y.lazyParser(e))))).andr(xe(Ce(/^[{}%&]/).opt().to((function(e){return e.getOrElse("")})))).to((function(e){return"\\"+e})),Ce(/^%[^\r\n]*(\r\n|\r|\n)?/).to((function(e){return" "}))).and(xe(Ce(/^[^\\{}%&]+/).opt().to((function(e){return e.getOrElse("")})))).to((function(e){return e.head+e.tail}))).to((function(e){return e.mkString("")})))).and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail,r=t.head+t.tail;return{isEmpty:0===r.trim().length,object:je.toMath("\\hbox{$\\objectstyle{"+r+"}$}",n)}})));var e})),twocellCommand:Le((function(){return je.twocell().and(xe(Be(je.twocellSwitch))).and(je.twocellArrow).to((function(e){return new ye.Command.Twocell(e.head.head,e.head.tail,e.tail)}))})),twocell:Le((function(){return Pe(be(/^\\[lrud]+twocell/).to((function(e){var t=e.substring(1,e.length-"twocell".length);return new ye.Command.Twocell.Twocell(t,x.empty)})),be(/^\\[lrud]+uppertwocell/).to((function(e){var t=e.substring(1,e.length-"uppertwocell".length);return new ye.Command.Twocell.UpperTwocell(t,x.empty)})),be(/^\\[lrud]+lowertwocell/).to((function(e){var t=e.substring(1,e.length-"lowertwocell".length);return new ye.Command.Twocell.LowerTwocell(t,x.empty)})),be(/^\\[lrud]+compositemap/).to((function(e){var t=e.substring(1,e.length-"compositemap".length);return new ye.Command.Twocell.CompositeMap(t,x.empty)})),Pe(Se("\\xtwocell").to((function(){return ye.Command.Twocell.Twocell})),Se("\\xuppertwocell").to((function(){return ye.Command.Twocell.UpperTwocell})),Se("\\xlowertwocell").to((function(){return ye.Command.Twocell.LowerTwocell})),Se("\\xcompositemap").to((function(){return ye.Command.Twocell.CompositeMap}))).andl(ke("[")).and(xe(Ce(/^[lrud]+/))).andl(ke("]")).andl(ke("{")).and(je.text).andl(ke("}")).and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail,r=new ye.Object(A.empty,je.toMath("\\labelstyle "+t.tail,n));return new t.head.head(t.head.tail,new x.Some(r))})))})),twocellSwitch:Le((function(){return Pe(Se("^").andr(je.twocellLabel).to((function(e){return new ye.Command.Twocell.Switch.UpperLabel(e)})),Se("_").andr(je.twocellLabel).to((function(e){return new ye.Command.Twocell.Switch.LowerLabel(e)})),Se("\\omit").to((function(){return new ye.Command.Twocell.Switch.DoNotSetCurvedArrows})),Se("~!").to((function(){return new ye.Command.Twocell.Switch.PlaceModMapObject})),be(/^(~[`'])/).andl(ke("{")).and(je.object).andl(ke("}")).to((function(e){var t=e.head.substring(1);return new ye.Command.Twocell.Switch.ChangeHeadTailObject(t,e.tail)})),be(/^(~[\^_]?)/).andl(ke("{")).and(je.object).and(xe(Ee(Se("~**").andr(je.object)))).andl(ke("}")).to((function(e){var t=e.head.head.substring(1),n=e.head.tail,r=e.tail;return new ye.Command.Twocell.Switch.ChangeCurveObject(t,n,r)})),je.nudge().to((function(e){return new ye.Command.Twocell.Switch.SetCurvature(e)})))})),twocellLabel:Le((function(){return Pe(be(/^[0-9a-zA-Z]/).and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail,r=new ye.Object(A.empty,je.toMath("\\twocellstyle "+t,n));return new ye.Command.Twocell.Label(x.empty,r)})),be(/^(\\[a-zA-Z][a-zA-Z0-9]*)/).and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail,r=new ye.Object(A.empty,je.toMath("\\twocellstyle "+t,n));return new ye.Command.Twocell.Label(x.empty,r)})),Se("{").andr(xe(Ee(je.nudge))).andl(ke("*")).and(je.object).andl(ke("}")).to((function(e){return new ye.Command.Twocell.Label(e.head,e.tail)})),Se("{").andr(xe(Ee(je.nudge))).and(je.text).andl(we("}")).and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail,r=new ye.Object(A.empty,je.toMath("\\twocellstyle "+t.tail,n));return new ye.Command.Twocell.Label(t.head,r)})))})),nudge:Le((function(){return Pe(Se("<\\omit>").to((function(){return new ye.Command.Twocell.Nudge.Omit})),Se("<").andr(je.factor).andl(ke(">")).to((function(e){return new ye.Command.Twocell.Nudge.Number(e)})))})),twocellArrow:Le((function(){return Pe(Se("{").andr(xe(be(/^([\^_=`'"!]|\\omit)/))).and(je.twocellLabelEntry).andl(ke("}")).to((function(e){return new ye.Command.Twocell.Arrow.WithOrientation(e.head,e.tail)})),Se("{").andr(je.nudge).and(je.twocellLabelEntry).andl(ke("}")).to((function(e){return new ye.Command.Twocell.Arrow.WithPosition(e.head,e.tail)})),Se("{").andr(je.twocellLabelEntry).andl(ke("}")).to((function(e){return new ye.Command.Twocell.Arrow.WithOrientation("",e)})),Ae("no arrow label").andr(je.textNodeCreator).to((function(e){return new ye.Command.Twocell.Arrow.WithOrientation("",new ye.Object(A.empty,je.toMath("\\twocellstyle{}",e)))})))})),twocellLabelEntry:Le((function(){return Pe(Se("*").andr(je.object),je.text().and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail;return new ye.Object(A.empty,je.toMath("\\twocellstyle "+t,n))})))})),newdir:Le((function(){return Se("{").andr(je.dirMain).andl(we("}")).andl(ke("{")).and(je.compositeObject).andl(ke("}")).to((function(e){return new ye.Command.Newdir(e.head,new ye.ObjectBox.CompositeObject(e.tail))}))})),xyimport:Le((function(){return Se("\\xyimport").andr(ke("(")).andr(je.factor).andl(ke(",")).and(je.factor).andl(ke(")")).and(xe(Ee(Se("(").andr(je.factor).andl(ke(",")).and(je.factor).andl(ke(")"))))).andl(ke("{")).and(xe(Pe(Se("\\includegraphics").andr(je.includegraphics),je.text().and(je.textNodeCreator).to((function(e){var t=e.head,n=e.tail;return je.toMath("\\hbox{$\\objectstyle{"+t+"}$}",n)}))))).andl(ke("}")).to((function(e){var t,n,r=e.head.head.head,i=e.head.head.tail;e.head.tail.isDefined?(t=e.head.tail.get.head,n=e.head.tail.get.tail):(t=0,n=0);var a=e.tail;return void 0!==a.isIncludegraphics?new ye.Pos.Xyimport.Graphics(r,i,t,n,a):new ye.Pos.Xyimport.TeXCommand(r,i,t,n,a)}))})),includegraphics:Le((function(){return Se("[").andr(xe(Ee(je.includegraphicsAttrList))).andl(ke("]")).andl(ke("{")).and(xe(be(/^[^\s{}]+/))).andl(ke("}")).to((function(e){var t=e.head.getOrElse(A.empty),n=e.tail;return new ye.Command.Includegraphics(!1,t,n)}))})),includegraphicsAttrList:Le((function(){return je.includegraphicsAttr().and(xe(Be(Se(",").andr(je.includegraphicsAttr)))).to((function(e){return e.tail.prepend(e.head)}))})),includegraphicsAttr:Le((function(){return Pe(Se("width").andr(ke("=")).andr(je.dimen).to((function(e){return new ye.Command.Includegraphics.Attr.Width(e)})),Se("height").andr(ke("=")).andr(je.dimen).to((function(e){return new ye.Command.Includegraphics.Attr.Height(e)})))}))};for(var Te in De)je[Te]=De[Te];var Re=je;function Fe(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ge(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ve(e,t,n){return t&&Ge(e.prototype,t),n&&Ge(e,n),e}var _e=function(){function e(){Fe(this,e),this.userDirMap={}}return Ve(e,[{key:"get",value:function(e){return this.userDirMap[e]}},{key:"put",value:function(e,t){this.userDirMap[e]=t}}]),e}(),Ie=function(){function e(){Fe(this,e),this.userModifierMap={}}return Ve(e,[{key:"get",value:function(t){var n=e.embeddedModifierMap[t];return void 0!==n?n:this.userModifierMap[t]}},{key:"put",value:function(t,n){void 0===e.embeddedModifierMap[t]&&(this.userModifierMap[t]=n)}}]),e}();Ie.embeddedModifierMap={o:new ye.Modifier.Shape.Circle,l:new ye.Modifier.Shape.L,r:new ye.Modifier.Shape.R,u:new ye.Modifier.Shape.U,d:new ye.Modifier.Shape.D,c:new ye.Modifier.Shape.C,aliceblue:new ye.Modifier.Shape.ChangeColor("aliceblue"),antiquewhite:new ye.Modifier.Shape.ChangeColor("antiquewhite"),aqua:new ye.Modifier.Shape.ChangeColor("aqua"),aquamarine:new ye.Modifier.Shape.ChangeColor("aquamarine"),azure:new ye.Modifier.Shape.ChangeColor("azure"),beige:new ye.Modifier.Shape.ChangeColor("beige"),bisque:new ye.Modifier.Shape.ChangeColor("bisque"),black:new ye.Modifier.Shape.ChangeColor("black"),blanchedalmond:new ye.Modifier.Shape.ChangeColor("blanchedalmond"),blue:new ye.Modifier.Shape.ChangeColor("blue"),blueviolet:new ye.Modifier.Shape.ChangeColor("blueviolet"),brown:new ye.Modifier.Shape.ChangeColor("brown"),burlywood:new ye.Modifier.Shape.ChangeColor("burlywood"),cadetblue:new ye.Modifier.Shape.ChangeColor("cadetblue"),chartreuse:new ye.Modifier.Shape.ChangeColor("chartreuse"),chocolate:new ye.Modifier.Shape.ChangeColor("chocolate"),coral:new ye.Modifier.Shape.ChangeColor("coral"),cornflowerblue:new ye.Modifier.Shape.ChangeColor("cornflowerblue"),cornsilk:new ye.Modifier.Shape.ChangeColor("cornsilk"),crimson:new ye.Modifier.Shape.ChangeColor("crimson"),cyan:new ye.Modifier.Shape.ChangeColor("cyan"),darkblue:new ye.Modifier.Shape.ChangeColor("darkblue"),darkcyan:new ye.Modifier.Shape.ChangeColor("darkcyan"),darkgoldenrod:new ye.Modifier.Shape.ChangeColor("darkgoldenrod"),darkgray:new ye.Modifier.Shape.ChangeColor("darkgray"),darkgreen:new ye.Modifier.Shape.ChangeColor("darkgreen"),darkgrey:new ye.Modifier.Shape.ChangeColor("darkgrey"),darkkhaki:new ye.Modifier.Shape.ChangeColor("darkkhaki"),darkmagenta:new ye.Modifier.Shape.ChangeColor("darkmagenta"),darkolivegreen:new ye.Modifier.Shape.ChangeColor("darkolivegreen"),darkorange:new ye.Modifier.Shape.ChangeColor("darkorange"),darkorchid:new ye.Modifier.Shape.ChangeColor("darkorchid"),darkred:new ye.Modifier.Shape.ChangeColor("darkred"),darksalmon:new ye.Modifier.Shape.ChangeColor("darksalmon"),darkseagreen:new ye.Modifier.Shape.ChangeColor("darkseagreen"),darkslateblue:new ye.Modifier.Shape.ChangeColor("darkslateblue"),darkslategray:new ye.Modifier.Shape.ChangeColor("darkslategray"),darkslategrey:new ye.Modifier.Shape.ChangeColor("darkslategrey"),darkturquoise:new ye.Modifier.Shape.ChangeColor("darkturquoise"),darkviolet:new ye.Modifier.Shape.ChangeColor("darkviolet"),deeppink:new ye.Modifier.Shape.ChangeColor("deeppink"),deepskyblue:new ye.Modifier.Shape.ChangeColor("deepskyblue"),dimgray:new ye.Modifier.Shape.ChangeColor("dimgray"),dimgrey:new ye.Modifier.Shape.ChangeColor("dimgrey"),dodgerblue:new ye.Modifier.Shape.ChangeColor("dodgerblue"),firebrick:new ye.Modifier.Shape.ChangeColor("firebrick"),floralwhite:new ye.Modifier.Shape.ChangeColor("floralwhite"),forestgreen:new ye.Modifier.Shape.ChangeColor("forestgreen"),fuchsia:new ye.Modifier.Shape.ChangeColor("fuchsia"),gainsboro:new ye.Modifier.Shape.ChangeColor("gainsboro"),ghostwhite:new ye.Modifier.Shape.ChangeColor("ghostwhite"),gold:new ye.Modifier.Shape.ChangeColor("gold"),goldenrod:new ye.Modifier.Shape.ChangeColor("goldenrod"),gray:new ye.Modifier.Shape.ChangeColor("gray"),grey:new ye.Modifier.Shape.ChangeColor("grey"),green:new ye.Modifier.Shape.ChangeColor("green"),greenyellow:new ye.Modifier.Shape.ChangeColor("greenyellow"),honeydew:new ye.Modifier.Shape.ChangeColor("honeydew"),hotpink:new ye.Modifier.Shape.ChangeColor("hotpink"),indianred:new ye.Modifier.Shape.ChangeColor("indianred"),indigo:new ye.Modifier.Shape.ChangeColor("indigo"),ivory:new ye.Modifier.Shape.ChangeColor("ivory"),khaki:new ye.Modifier.Shape.ChangeColor("khaki"),lavender:new ye.Modifier.Shape.ChangeColor("lavender"),lavenderblush:new ye.Modifier.Shape.ChangeColor("lavenderblush"),lawngreen:new ye.Modifier.Shape.ChangeColor("lawngreen"),lemonchiffon:new ye.Modifier.Shape.ChangeColor("lemonchiffon"),lightblue:new ye.Modifier.Shape.ChangeColor("lightblue"),lightcoral:new ye.Modifier.Shape.ChangeColor("lightcoral"),lightcyan:new ye.Modifier.Shape.ChangeColor("lightcyan"),lightgoldenrodyellow:new ye.Modifier.Shape.ChangeColor("lightgoldenrodyellow"),lightgray:new ye.Modifier.Shape.ChangeColor("lightgray"),lightgreen:new ye.Modifier.Shape.ChangeColor("lightgreen"),lightgrey:new ye.Modifier.Shape.ChangeColor("lightgrey"),lightpink:new ye.Modifier.Shape.ChangeColor("lightpink"),lightsalmon:new ye.Modifier.Shape.ChangeColor("lightsalmon"),lightseagreen:new ye.Modifier.Shape.ChangeColor("lightseagreen"),lightskyblue:new ye.Modifier.Shape.ChangeColor("lightskyblue"),lightslategray:new ye.Modifier.Shape.ChangeColor("lightslategray"),lightslategrey:new ye.Modifier.Shape.ChangeColor("lightslategrey"),lightsteelblue:new ye.Modifier.Shape.ChangeColor("lightsteelblue"),lightyellow:new ye.Modifier.Shape.ChangeColor("lightyellow"),lime:new ye.Modifier.Shape.ChangeColor("lime"),limegreen:new ye.Modifier.Shape.ChangeColor("limegreen"),linen:new ye.Modifier.Shape.ChangeColor("linen"),magenta:new ye.Modifier.Shape.ChangeColor("magenta"),maroon:new ye.Modifier.Shape.ChangeColor("maroon"),mediumaquamarine:new ye.Modifier.Shape.ChangeColor("mediumaquamarine"),mediumblue:new ye.Modifier.Shape.ChangeColor("mediumblue"),mediumorchid:new ye.Modifier.Shape.ChangeColor("mediumorchid"),mediumpurple:new ye.Modifier.Shape.ChangeColor("mediumpurple"),mediumseagreen:new ye.Modifier.Shape.ChangeColor("mediumseagreen"),mediumslateblue:new ye.Modifier.Shape.ChangeColor("mediumslateblue"),mediumspringgreen:new ye.Modifier.Shape.ChangeColor("mediumspringgreen"),mediumturquoise:new ye.Modifier.Shape.ChangeColor("mediumturquoise"),mediumvioletred:new ye.Modifier.Shape.ChangeColor("mediumvioletred"),midnightblue:new ye.Modifier.Shape.ChangeColor("midnightblue"),mintcream:new ye.Modifier.Shape.ChangeColor("mintcream"),mistyrose:new ye.Modifier.Shape.ChangeColor("mistyrose"),moccasin:new ye.Modifier.Shape.ChangeColor("moccasin"),navajowhite:new ye.Modifier.Shape.ChangeColor("navajowhite"),navy:new ye.Modifier.Shape.ChangeColor("navy"),oldlace:new ye.Modifier.Shape.ChangeColor("oldlace"),olive:new ye.Modifier.Shape.ChangeColor("olive"),olivedrab:new ye.Modifier.Shape.ChangeColor("olivedrab"),orange:new ye.Modifier.Shape.ChangeColor("orange"),orangered:new ye.Modifier.Shape.ChangeColor("orangered"),orchid:new ye.Modifier.Shape.ChangeColor("orchid"),palegoldenrod:new ye.Modifier.Shape.ChangeColor("palegoldenrod"),palegreen:new ye.Modifier.Shape.ChangeColor("palegreen"),paleturquoise:new ye.Modifier.Shape.ChangeColor("paleturquoise"),palevioletred:new ye.Modifier.Shape.ChangeColor("palevioletred"),papayawhip:new ye.Modifier.Shape.ChangeColor("papayawhip"),peachpuff:new ye.Modifier.Shape.ChangeColor("peachpuff"),peru:new ye.Modifier.Shape.ChangeColor("peru"),pink:new ye.Modifier.Shape.ChangeColor("pink"),plum:new ye.Modifier.Shape.ChangeColor("plum"),powderblue:new ye.Modifier.Shape.ChangeColor("powderblue"),purple:new ye.Modifier.Shape.ChangeColor("purple"),red:new ye.Modifier.Shape.ChangeColor("red"),rosybrown:new ye.Modifier.Shape.ChangeColor("rosybrown"),royalblue:new ye.Modifier.Shape.ChangeColor("royalblue"),saddlebrown:new ye.Modifier.Shape.ChangeColor("saddlebrown"),salmon:new ye.Modifier.Shape.ChangeColor("salmon"),sandybrown:new ye.Modifier.Shape.ChangeColor("sandybrown"),seagreen:new ye.Modifier.Shape.ChangeColor("seagreen"),seashell:new ye.Modifier.Shape.ChangeColor("seashell"),sienna:new ye.Modifier.Shape.ChangeColor("sienna"),silver:new ye.Modifier.Shape.ChangeColor("silver"),skyblue:new ye.Modifier.Shape.ChangeColor("skyblue"),slateblue:new ye.Modifier.Shape.ChangeColor("slateblue"),slategray:new ye.Modifier.Shape.ChangeColor("slategray"),slategrey:new ye.Modifier.Shape.ChangeColor("slategrey"),snow:new ye.Modifier.Shape.ChangeColor("snow"),springgreen:new ye.Modifier.Shape.ChangeColor("springgreen"),steelblue:new ye.Modifier.Shape.ChangeColor("steelblue"),tan:new ye.Modifier.Shape.ChangeColor("tan"),teal:new ye.Modifier.Shape.ChangeColor("teal"),thistle:new ye.Modifier.Shape.ChangeColor("thistle"),tomato:new ye.Modifier.Shape.ChangeColor("tomato"),turquoise:new ye.Modifier.Shape.ChangeColor("turquoise"),violet:new ye.Modifier.Shape.ChangeColor("violet"),wheat:new ye.Modifier.Shape.ChangeColor("wheat"),white:new ye.Modifier.Shape.ChangeColor("white"),whitesmoke:new ye.Modifier.Shape.ChangeColor("whitesmoke"),yellow:new ye.Modifier.Shape.ChangeColor("yellow"),yellowgreen:new ye.Modifier.Shape.ChangeColor("yellowgreen")};var ze={repositories:{modifierRepository:new Ie,dirRepository:new _e},textObjectIdCounter:0,wrapperOfTextObjectMap:{}},Qe=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},Ne=function(e){return e<0?-1:e>0?1:0},Xe=function(e){return Math.abs(e)<s.machinePrecision?0:e},We=function(e,t){var n=e[t],r=function(){var r=n.call(this),a=function(){return r};return a.reset=i,e[t]=a,r},i=function(){e[t]=r};r.reset=i,i()},Ue=function(e){return Math.round(100*e)/100};function He(e){return(He="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function qe(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Je(e,t)}function Je(e,t){return(Je=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Ze(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=$e(e);if(t){var i=$e(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ye(this,n)}}function Ye(e,t){return!t||"object"!==He(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function $e(e){return($e=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ke(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function et(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function tt(e,t,n){return t&&et(e.prototype,t),n&&et(e,n),e}var nt=function(){function e(){Ke(this,e)}return tt(e,[{key:"toRect",value:function(t){return new e.Rect(this.x,this.y,t)}},{key:"toPoint",value:function(){return new e.Point(this.x,this.y)}},{key:"combineRect",value:function(t){return e.combineRect(this,t)}}],[{key:"combineRect",value:function(e,t){if(void 0===e)return t;if(void 0===t)return e;var n=-(Math.min(e.x-e.l,t.x-t.l)-e.x),r=Math.max(e.x+e.r,t.x+t.r)-e.x,i=-(Math.min(e.y-e.d,t.y-t.d)-e.y),a=Math.max(e.y+e.u,t.y+t.u)-e.y;return e.toRect({l:n,r:r,d:i,u:a})}}]),e}();function rt(e){return(rt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function it(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&at(e,t)}function at(e,t){return(at=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function ot(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=ct(e);if(t){var i=ct(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return ut(this,n)}}function ut(e,t){return!t||"object"!==rt(t)&&"function"!=typeof t?st(e):t}function st(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ct(e){return(ct=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ht(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function lt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function mt(e,t,n){return t&&lt(e.prototype,t),n&&lt(e,n),e}nt.Point=function(e){qe(n,e);var t=Ze(n);function n(e,r){var i;return Ke(this,n),(i=t.call(this)).x=e,i.y=r,i}return tt(n,[{key:"l",get:function(){return 0}},{key:"r",get:function(){return 0}},{key:"u",get:function(){return 0}},{key:"d",get:function(){return 0}},{key:"isPoint",value:function(){return!0}},{key:"isRect",value:function(){return!1}},{key:"isCircle",value:function(){return!1}},{key:"edgePoint",value:function(e,t){return this}},{key:"proportionalEdgePoint",value:function(e,t){return this}},{key:"grow",value:function(e,t){var n=Math.max(0,e),r=Math.max(0,t);return this.toRect({l:n,r:n,u:r,d:r})}},{key:"toSize",value:function(e,t){return this.toRect({l:e/2,r:e/2,u:t/2,d:t/2})}},{key:"growTo",value:function(e,t){var n=Math.max(0,e),r=Math.max(0,t);return this.toRect({l:n/2,r:n/2,u:r/2,d:r/2})}},{key:"shrinkTo",value:function(e,t){return this}},{key:"move",value:function(e,t){return new nt.Point(e,t)}},{key:"shiftFrame",value:function(e,t){return this}},{key:"rotate",value:function(e){return this}},{key:"contains",value:function(e){return!1}},{key:"toString",value:function(){return"{x:"+this.x+", y:"+this.y+"}"}}]),n}(nt),nt.Rect=function(e){qe(n,e);var t=Ze(n);function n(e,r,i){var a;return Ke(this,n),(a=t.call(this)).x=e,a.y=r,a.l=i.l||0,a.r=i.r||0,a.u=i.u||0,a.d=i.d||0,a}return tt(n,[{key:"isPoint",value:function(){return 0===this.l&&0===this.r&&0===this.u&&0===this.d}},{key:"isRect",value:function(){return!this.isPoint()}},{key:"isCircle",value:function(){return!1}},{key:"edgePoint",value:function(e,t){if(this.isPoint())return this;var n,r=e-this.x,i=t-this.y;return r>0?(n=i*this.r/r)>this.u?new nt.Point(this.x+this.u*r/i,this.y+this.u):n<-this.d?new nt.Point(this.x-this.d*r/i,this.y-this.d):new nt.Point(this.x+this.r,this.y+n):r<0?(n=-i*this.l/r)>this.u?new nt.Point(this.x+this.u*r/i,this.y+this.u):n<-this.d?new nt.Point(this.x-this.d*r/i,this.y-this.d):new nt.Point(this.x-this.l,this.y+n):i>0?new nt.Point(this.x,this.y+this.u):new nt.Point(this.x,this.y-this.d)}},{key:"proportionalEdgePoint",value:function(e,t){if(this.isPoint())return this;var n=e-this.x,r=t-this.y;if(Math.abs(n)<s.machinePrecision&&Math.abs(r)<s.machinePrecision)return new nt.Point(this.x-this.l,this.y+this.u);var i,a=this.l+this.r,o=this.u+this.d,u=Math.PI,c=Math.atan2(r,n);return-3*u/4<c&&c<=-u/4?(i=(c+3*u/4)/(u/2),new nt.Point(this.x+this.r-i*a,this.y+this.u)):-u/4<c&&c<=u/4?(i=(c+u/4)/(u/2),new nt.Point(this.x-this.l,this.y+this.u-i*o)):u/4<c&&c<=3*u/4?(i=(c-u/4)/(u/2),new nt.Point(this.x-this.l+i*a,this.y-this.d)):(i=(c-(c>0?3*u/4:-5*u/4))/(u/2),new nt.Point(this.x+this.r,this.y-this.d+i*o))}},{key:"grow",value:function(e,t){return this.toRect({l:Math.max(0,this.l+e),r:Math.max(0,this.r+e),u:Math.max(0,this.u+t),d:Math.max(0,this.d+t)})}},{key:"toSize",value:function(e,t){var n,r,i,a,o=this.l+this.r,u=this.u+this.d;return 0===o?(a=e/2,i=e/2):(a=e*this.l/o,i=e*this.r/o),0===u?(n=t/2,r=t/2):(n=t*this.u/u,r=t*this.d/u),this.toRect({l:a,r:i,u:n,d:r})}},{key:"growTo",value:function(e,t){var n=this.u,r=this.d,i=this.r,a=this.l,o=a+i,u=n+r;return e>o&&(0===o?(a=e/2,i=e/2):(a=e*this.l/o,i=e*this.r/o)),t>u&&(0===u?(n=t/2,r=t/2):(n=t*this.u/u,r=t*this.d/u)),this.toRect({l:a,r:i,u:n,d:r})}},{key:"shrinkTo",value:function(e,t){var n=this.u,r=this.d,i=this.r,a=this.l,o=a+i,u=n+r;return e<o&&(0===o?(a=e/2,i=e/2):(a=e*this.l/o,i=e*this.r/o)),t<u&&(0===u?(n=t/2,r=t/2):(n=t*this.u/u,r=t*this.d/u)),this.toRect({l:a,r:i,u:n,d:r})}},{key:"move",value:function(e,t){return new nt.Rect(e,t,{l:this.l,r:this.r,u:this.u,d:this.d})}},{key:"shiftFrame",value:function(e,t){return new nt.Rect(this.x,this.y,{l:Math.max(0,this.l-e),r:Math.max(0,this.r+e),u:Math.max(0,this.u+t),d:Math.max(0,this.d-t)})}},{key:"rotate",value:function(e){var t=Math.cos(e),n=Math.sin(e),r=-this.l,i=this.r,a=this.u,o=-this.d,u={x:r*t-a*n,y:r*n+a*t},s={x:r*t-o*n,y:r*n+o*t},c={x:i*t-a*n,y:i*n+a*t},h={x:i*t-o*n,y:i*n+o*t};return this.toRect({l:-Math.min(u.x,s.x,c.x,h.x),r:Math.max(u.x,s.x,c.x,h.x),u:Math.max(u.y,s.y,c.y,h.y),d:-Math.min(u.y,s.y,c.y,h.y)})}},{key:"contains",value:function(e){var t=e.x,n=e.y;return t>=this.x-this.l&&t<=this.x+this.r&&n>=this.y-this.d&&n<=this.y+this.u}},{key:"toString",value:function(){return"{x:"+this.x+", y:"+this.y+", l:"+this.l+", r:"+this.r+", u:"+this.u+", d:"+this.d+"}"}}]),n}(nt),nt.Ellipse=function(e){qe(n,e);var t=Ze(n);function n(e,r,i,a,o,u){var s;return Ke(this,n),(s=t.call(this)).x=e,s.y=r,s.l=i,s.r=a,s.u=o,s.d=u,s}return tt(n,[{key:"isPoint",value:function(){return 0===this.r&&0===this.l||0===this.u&&0===this.d}},{key:"isRect",value:function(){return!1}},{key:"isCircle",value:function(){return!this.isPoint()}},{key:"isPerfectCircle",value:function(){return this.l===this.r&&this.l===this.u&&this.l===this.d}},{key:"edgePoint",value:function(e,t){if(this.isPoint())return this;if(this.isPerfectCircle()){var n,r=e-this.x,i=t-this.y;return n=Math.abs(r)<s.machinePrecision&&Math.abs(i)<s.machinePrecision?-Math.PI/2:Math.atan2(i,r),new nt.Point(this.x+this.r*Math.cos(n),this.y+this.r*Math.sin(n))}Math.PI;var a=this.l,o=this.r,u=this.u,c=this.d,h=this.x,l=this.y,m=h+(o-a)/2,p=l+(u-c)/2,f=(a+o)/2,d=(u+c)/2,y=-(r=e-h),v=(i=t-l)*f,x=y*d,g=v*v+x*x,w=-(c=v*m+x*p+((r*l-i*h)*f+(f-d)*y*p))/g,S=g*f*f-c*c;if(S<0)return new nt.Point(this.x,this.y-this.d);var C=Math.sqrt(S)/g,b=d/f,k=v*w+x*C+m,M=b*(x*w-v*C+p-p)+p,P=v*w-x*C+m,B=b*(x*w+v*C+p-p)+p,O=Ne;return O(k-m)===O(e-m)&&O(M-p)===O(t-p)?new nt.Point(k,M):new nt.Point(P,B)}},{key:"proportionalEdgePoint",value:function(e,t){if(this.isPoint())return this;if(this.isPerfectCircle()){var n,r=e-this.x,i=t-this.y;return n=Math.abs(r)<s.machinePrecision&&Math.abs(i)<s.machinePrecision?-Math.PI/2:Math.atan2(i,r),new nt.Point(this.x-this.r*Math.cos(n),this.y-this.r*Math.sin(n))}Math.PI;var a=this.l,o=this.r,u=this.u,c=this.d,h=this.x,l=this.y,m=h+(o-a)/2,p=l+(u-c)/2,f=(a+o)/2,d=(u+c)/2,y=-(r=e-h),v=(i=t-l)*f,x=y*d,g=v*v+x*x,w=-(c=v*m+x*p+((r*l-i*h)*f+(f-d)*y*p))/g,S=g*f*f-c*c;if(S<0)return new nt.Point(this.x,this.y-this.d);var C=Math.sqrt(S)/g,b=d/f,k=v*w+x*C+m,M=b*(x*w-v*C+p-p)+p,P=v*w-x*C+m,B=b*(x*w+v*C+p-p)+p;return sign(k-m)===sign(e-m)&&sign(M-p)===sign(t-p)?new nt.Point(P,B):new nt.Point(k,M)}},{key:"grow",value:function(e,t){return new nt.Ellipse(this.x,this.y,Math.max(0,this.l+e),Math.max(0,this.r+e),Math.max(0,this.u+t),Math.max(0,this.d+t))}},{key:"toSize",value:function(e,t){var n,r,i,a,o=this.l+this.r,u=this.u+this.d;return 0===o?(a=e/2,i=e/2):(a=e*this.l/o,i=e*this.r/o),0===u?(n=t/2,r=t/2):(n=t*this.u/u,r=t*this.d/u),new nt.Ellipse(this.x,this.y,a,i,n,r)}},{key:"growTo",value:function(e,t){var n=this.u,r=this.d,i=this.r,a=this.l,o=a+i,u=n+r;return e>o&&(0===o?(a=e/2,i=e/2):(a=e*this.l/o,i=e*this.r/o)),t>u&&(0===u?(n=t/2,r=t/2):(n=t*this.u/u,r=t*this.d/u)),new nt.Ellipse(this.x,this.y,a,i,n,r)}},{key:"shrinkTo",value:function(e,t){var n=this.u,r=this.d,i=this.r,a=this.l,o=a+i,u=n+r;return e<o&&(0===o?(a=e/2,i=e/2):(a=e*this.l/o,i=e*this.r/o)),t<u&&(0===u?(n=t/2,r=t/2):(n=t*this.u/u,r=t*this.d/u)),new nt.Ellipse(this.x,this.y,a,i,n,r)}},{key:"move",value:function(e,t){return new nt.Ellipse(e,t,this.l,this.r,this.u,this.d)}},{key:"shiftFrame",value:function(e,t){return new nt.Ellipse(this.x,this.y,Math.max(0,this.l-e),Math.max(0,this.r+e),Math.max(0,this.u+t),Math.max(0,this.d-t))}},{key:"rotate",value:function(e){return this}},{key:"contains",value:function(e){var t=e.x,n=e.y;if(this.isPoint())return!1;var r=this.l,i=this.r,a=this.u,o=this.d,u=(r+i)/2,s=t-(this.x+(i-r)/2),c=(n-(this.y+(a-o)/2))/((a+o)/2/u);return s*s+c*c<=u*u}},{key:"toString",value:function(){return"{x:"+this.x+", y:"+this.y+", l:"+this.l+", r:"+this.r+", u:"+this.u+", d:"+this.d+"}"}}]),n}(nt);var pt=function(){function e(){ht(this,e)}return mt(e,[{key:"isNone",get:function(){return!1}}]),e}();function ft(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}pt.NoneShape=function(e){it(n,e);var t=ot(n);function n(){return ht(this,n),t.call(this)}return mt(n,[{key:"draw",value:function(e){}},{key:"getBoundingBox",value:function(){}},{key:"toString",value:function(){return"NoneShape"}},{key:"isNone",get:function(){return!0}}]),n}(pt),pt.none=new pt.NoneShape,pt.InvisibleBoxShape=function(e){it(n,e);var t=ot(n);function n(e){var r;return ht(this,n),(r=t.call(this)).bbox=e,r}return mt(n,[{key:"draw",value:function(e){}},{key:"getBoundingBox",value:function(){return this.bbox}},{key:"toString",value:function(){return"InvisibleBoxShape[bbox:"+this.bbox.toString()+"]"}}]),n}(pt),pt.TranslateShape=function(e){it(n,e);var t=ot(n);function n(e,r,i){var a;return ht(this,n),(a=t.call(this)).dx=e,a.dy=r,a.shape=i,We(st(a),"getBoundingBox"),a}return mt(n,[{key:"draw",value:function(e){var t=e.createGroup(e.transformBuilder().translate(this.dx,this.dy));this.shape.draw(t)}},{key:"getBoundingBox",value:function(){var e=this.shape.getBoundingBox();if(void 0!==e)return new nt.Rect(e.x+this.dx,e.y+this.dy,e)}},{key:"toString",value:function(){return"TranslateShape[dx:"+this.dx+", dy:"+this.dy+", shape:"+this.shape.toString()+"]"}}]),n}(pt),pt.CompositeShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).foregroundShape=e,i.backgroundShape=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"draw",value:function(e){this.backgroundShape.draw(e),this.foregroundShape.draw(e)}},{key:"getBoundingBox",value:function(){return nt.combineRect(this.foregroundShape.getBoundingBox(),this.backgroundShape.getBoundingBox())}},{key:"toString",value:function(){return"("+this.foregroundShape.toString()+", "+this.backgroundShape.toString()+")"}}]),n}(pt),pt.ChangeColorShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).color=e,i.shape=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"draw",value:function(e){var t=e.createChangeColorGroup(this.color);this.shape.draw(t)}},{key:"getBoundingBox",value:function(){return this.shape.getBoundingBox()}},{key:"toString",value:function(){return this.shape+", color:"+this.color}}]),n}(pt),pt.CircleSegmentShape=function(e){it(n,e);var t=ot(n);function n(e,r,i,a,o,u,s,c,h){var l;return ht(this,n),(l=t.call(this)).x=e,l.y=r,l.sx=i,l.sy=a,l.r=o,l.large=u,l.flip=s,l.ex=c,l.ey=h,We(st(l),"getBoundingBox"),l}return mt(n,[{key:"draw",value:function(e){e.createSVGElement("path",{d:"M"+ze.measure.em2px(this.sx)+","+ze.measure.em2px(-this.sy)+" A"+ze.measure.em2px(this.r)+","+ze.measure.em2px(this.r)+" 0 "+this.large+","+this.flip+" "+ze.measure.em2px(this.ex)+","+ze.measure.em2px(-this.ey)})}},{key:"getBoundingBox",value:function(){return new nt.Ellipse(this.x,this.y,this.r,this.r,this.r,this.r)}},{key:"toString",value:function(){return"CircleSegmentShape[x:"+this.x+", y:"+this.y+", sx:"+this.sx+", sy:"+this.sy+", r:"+this.r+", large:"+this.large+", flip:"+this.flip+", ex:"+this.ex+", ey:"+this.ey+"]"}}]),n}(pt),pt.FullCircleShape=function(e){it(n,e);var t=ot(n);function n(e,r,i){var a;return ht(this,n),(a=t.call(this)).x=e,a.y=r,a.r=i,We(st(a),"getBoundingBox"),a}return mt(n,[{key:"draw",value:function(e){e.createSVGElement("circle",{cx:ze.measure.em2px(this.x),cy:ze.measure.em2px(-this.y),r:ze.measure.em2px(this.r)})}},{key:"getBoundingBox",value:function(){return new nt.Ellipse(this.x,this.y,this.r,this.r,this.r,this.r)}},{key:"toString",value:function(){return"FullCircleShape[x:"+this.x+", y:"+this.y+", r:"+this.r+"]"}}]),n}(pt),pt.RectangleShape=function(e){it(n,e);var t=ot(n);function n(e,r,i,a,o,u,s,c,h,l,m,p){var f;return ht(this,n),(f=t.call(this)).x=e,f.y=r,f.left=i,f.right=a,f.up=o,f.down=u,f.r=s,f.isDoubled=c,f.color=h,f.dasharray=l,f.fillColor=m,f.hideLine=p||!1,We(st(f),"getBoundingBox"),f}return mt(n,[{key:"draw",value:function(e){var t;t={x:ze.measure.em2px(this.x-this.left),y:-ze.measure.em2px(this.y+this.up),width:ze.measure.em2px(this.left+this.right),height:ze.measure.em2px(this.up+this.down),rx:ze.measure.em2px(this.r)},void 0!==this.dasharray&&(t["stroke-dasharray"]=this.dasharray),this.hideLine?t.stroke="none":void 0!==this.color&&(t.stroke=this.color),void 0!==this.fillColor&&(t.fill=this.fillColor),e.createSVGElement("rect",t),this.isDoubled&&(t={x:ze.measure.em2px(this.x-this.left+ze.measure.thickness),y:-ze.measure.em2px(this.y+this.up-ze.measure.thickness),width:ze.measure.em2px(this.left+this.right-2*ze.measure.thickness),height:ze.measure.em2px(this.up+this.down-2*ze.measure.thickness),rx:ze.measure.em2px(Math.max(this.r-ze.measure.thickness,0))},void 0!==this.dasharray&&(t["stroke-dasharray"]=this.dasharray),this.hideLine?t.stroke="none":void 0!==this.color&&(t.stroke=this.color),void 0!==this.fillColor&&(t.fill=this.fillColor),e.createSVGElement("rect",t))}},{key:"getBoundingBox",value:function(){return new nt.Rect(this.x,this.y,{l:this.left,r:this.right,u:this.up,d:this.down})}},{key:"toString",value:function(){return"RectangleShape[x:"+this.x+", y:"+this.y+", left:"+this.left+", right:"+this.right+", up:"+this.up+", down:"+this.down+", r:"+this.r+", isDouble:"+this.isDouble+", dasharray:"+this.dasharray+"]"}}]),n}(pt),pt.EllipseShape=function(e){it(n,e);var t=ot(n);function n(e,r,i,a,o,u,s,c,h){var l;return ht(this,n),(l=t.call(this)).x=e,l.y=r,l.rx=i,l.ry=a,l.isDoubled=o,l.color=u,l.dasharray=s,l.fillColor=c,l.hideLine=h||!1,We(st(l),"getBoundingBox"),l}return mt(n,[{key:"draw",value:function(e){var t;t={cx:ze.measure.em2px(this.x),cy:-ze.measure.em2px(this.y),rx:ze.measure.em2px(this.rx),ry:ze.measure.em2px(this.ry)},void 0!==this.dasharray&&(t["stroke-dasharray"]=this.dasharray),this.hideLine?t.stroke="none":void 0!==this.color&&(t.stroke=this.color),void 0!==this.fillColor&&(t.fill=this.fillColor),e.createSVGElement("ellipse",t),this.isDoubled&&(t={cx:ze.measure.em2px(this.x),cy:-ze.measure.em2px(this.y),rx:ze.measure.em2px(Math.max(this.rx-ze.measure.thickness)),ry:ze.measure.em2px(Math.max(this.ry-ze.measure.thickness))},void 0!==this.dasharray&&(t["stroke-dasharray"]=this.dasharray),this.hideLine?t.stroke="none":void 0!==this.color&&(t.stroke=this.color),void 0!==this.fillColor&&(t.fill=this.fillColor),e.createSVGElement("ellipse",t))}},{key:"getBoundingBox",value:function(){return new nt.Rect(this.x,this.y,{l:this.rx,r:this.rx,u:this.ry,d:this.ry})}},{key:"toString",value:function(){return"EllipseShape[x:"+this.x+", y:"+this.y+", rx:"+this.rx+", ry:"+this.ry+", isDoubled:"+this.isDoubled+", dasharray:"+this.dasharray+"]"}}]),n}(pt),pt.BoxShadeShape=function(e){it(n,e);var t=ot(n);function n(e,r,i,a,o,u,s,c){var h;return ht(this,n),(h=t.call(this)).x=e,h.y=r,h.left=i,h.right=a,h.up=o,h.down=u,h.depth=s,h.color=c||"currentColor",We(st(h),"getBoundingBox"),h}return mt(n,[{key:"draw",value:function(e){var t=ze.measure.em2px(this.x),n=ze.measure.em2px(this.y),r=ze.measure.em2px(this.left),i=ze.measure.em2px(this.right),a=ze.measure.em2px(this.up),o=ze.measure.em2px(this.down),u=ze.measure.em2px(this.depth);e.createSVGElement("path",{d:"M"+(t-r+u)+","+(-n+o)+"L"+(t+i)+","+(-n+o)+"L"+(t+i)+","+(-n-a+u)+"L"+(t+i+u)+","+(-n-a+u)+"L"+(t+i+u)+","+(-n+o+u)+"L"+(t-r+u)+","+(-n+o+u)+"Z",stroke:this.color,fill:this.color})}},{key:"getBoundingBox",value:function(){return new nt.Rect(this.x,this.y,{l:this.left,r:this.right+this.depth,u:this.up,d:this.down+this.depth})}},{key:"toString",value:function(){return"RectangleShape[x:"+this.x+", y:"+this.y+", left:"+this.left+", right:"+this.right+", up:"+this.up+", down:"+this.down+", depth:"+this.depth+"]"}}]),n}(pt),pt.LeftBrace=function(e){it(n,e);var t=ot(n);function n(e,r,i,a,o,u){var s;return ht(this,n),(s=t.call(this)).x=e,s.y=r,s.up=i,s.down=a,s.degree=o,s.color=u||"currentColor",We(st(s),"getBoundingBox"),s}return mt(n,[{key:"draw",value:function(e){var t,n=ze.measure.oneem,r=Math.max(1.41975,this.down/n*1.125)-.660375,i=.660375-Math.max(1.41975,this.up/n*1.125);t="M"+ze.measure.em2px(-.0675)+" "+ze.measure.em2px(r)+"T"+ze.measure.em2px(-.068625)+" "+ze.measure.em2px(.07875+r)+"Q"+ze.measure.em2px(-.068625)+" "+ze.measure.em2px(.190125+r)+" "+ze.measure.em2px(-.0585)+" "+ze.measure.em2px(.250875+r)+"T"+ze.measure.em2px(-.01125)+" "+ze.measure.em2px(.387+r)+"Q"+ze.measure.em2px(.07425)+" "+ze.measure.em2px(.55575+r)+" "+ze.measure.em2px(.2475)+" "+ze.measure.em2px(.6525+r)+"L"+ze.measure.em2px(.262125)+" "+ze.measure.em2px(.660375+r)+"L"+ze.measure.em2px(.3015)+" "+ze.measure.em2px(.660375+r)+"L"+ze.measure.em2px(.30825)+" "+ze.measure.em2px(.653625+r)+"V"+ze.measure.em2px(.622125+r)+"Q"+ze.measure.em2px(.30825)+" "+ze.measure.em2px(.60975+r)+" "+ze.measure.em2px(.2925)+" "+ze.measure.em2px(.60075+r)+"Q"+ze.measure.em2px(.205875)+" "+ze.measure.em2px(.541125+r)+" "+ze.measure.em2px(.149625)+" "+ze.measure.em2px(.44775+r)+"T"+ze.measure.em2px(.07425)+" "+ze.measure.em2px(.239625+r)+"Q"+ze.measure.em2px(.07425)+" "+ze.measure.em2px(.2385+r)+" "+ze.measure.em2px(.073125)+" "+ze.measure.em2px(.235125+r)+"Q"+ze.measure.em2px(.068625)+" "+ze.measure.em2px(.203625+r)+" "+ze.measure.em2px(.0675)+" "+ze.measure.em2px(.041625+r)+"L"+ze.measure.em2px(.0675)+" "+ze.measure.em2px(.75825)+"Q"+ze.measure.em2px(.0675)+" "+ze.measure.em2px(.496125)+" "+ze.measure.em2px(.066375)+" "+ze.measure.em2px(.486)+"Q"+ze.measure.em2px(.05625)+" "+ze.measure.em2px(.336375)+" "+ze.measure.em2px(-.021375)+" "+ze.measure.em2px(.212625)+"T"+ze.measure.em2px(-.226125)+" "+ze.measure.em2px(.010125)+"L"+ze.measure.em2px(-.241875)+" 0L"+ze.measure.em2px(-.226125)+" "+ze.measure.em2px(-.010125)+"Q"+ze.measure.em2px(-.106875)+" "+ze.measure.em2px(-.084375)+" "+ze.measure.em2px(-.025875)+" "+ze.measure.em2px(-.207)+"T"+ze.measure.em2px(.066375)+" "+ze.measure.em2px(-.486)+"Q"+ze.measure.em2px(.0675)+" "+ze.measure.em2px(-.496125)+" "+ze.measure.em2px(.0675)+" "+ze.measure.em2px(-.75825)+"L"+ze.measure.em2px(.0675)+" "+ze.measure.em2px(-.041625+i)+"Q"+ze.measure.em2px(.068625)+" "+ze.measure.em2px(-.203625+i)+" "+ze.measure.em2px(.073125)+" "+ze.measure.em2px(-.235125+i)+"Q"+ze.measure.em2px(.07425)+" "+ze.measure.em2px(-.2385+i)+" "+ze.measure.em2px(.07425)+" "+ze.measure.em2px(-.239625+i)+"Q"+ze.measure.em2px(.093375)+" "+ze.measure.em2px(-.354375+i)+" "+ze.measure.em2px(.149625)+" "+ze.measure.em2px(-.44775+i)+"T"+ze.measure.em2px(.2925)+" "+ze.measure.em2px(-.60075+i)+"Q"+ze.measure.em2px(.30825)+" "+ze.measure.em2px(-.60975+i)+" "+ze.measure.em2px(.30825)+" "+ze.measure.em2px(-.622125+i)+"L"+ze.measure.em2px(.30825)+" "+ze.measure.em2px(-.653625+i)+"L"+ze.measure.em2px(.3015)+" "+ze.measure.em2px(-.660375+i)+"L"+ze.measure.em2px(.262125)+" "+ze.measure.em2px(-.660375+i)+"L"+ze.measure.em2px(.2475)+" "+ze.measure.em2px(-.6525+i)+"Q"+ze.measure.em2px(.07425)+" "+ze.measure.em2px(-.55575+i)+" "+ze.measure.em2px(-.01125)+" "+ze.measure.em2px(-.387+i)+"Q"+ze.measure.em2px(-.048375)+" "+ze.measure.em2px(-.311625+i)+" "+ze.measure.em2px(-.0585)+" "+ze.measure.em2px(-.250875+i)+"T"+ze.measure.em2px(-.068625)+" "+ze.measure.em2px(-.07875+i)+"Q"+ze.measure.em2px(-.0675)+" "+ze.measure.em2px(i)+" "+ze.measure.em2px(-.0675)+" "+ze.measure.em2px(i)+"L"+ze.measure.em2px(-.0675)+" "+ze.measure.em2px(-.759375)+"V"+ze.measure.em2px(-.5985)+"Q"+ze.measure.em2px(-.0675)+" "+ze.measure.em2px(-.47925)+" "+ze.measure.em2px(-.075375)+" "+ze.measure.em2px(-.41175)+"T"+ze.measure.em2px(-.11475)+" "+ze.measure.em2px(-.27)+"Q"+ze.measure.em2px(-.133875)+" "+ze.measure.em2px(-.2205)+" "+ze.measure.em2px(-.160875)+" "+ze.measure.em2px(-.17775)+"T"+ze.measure.em2px(-.212625)+" "+ze.measure.em2px(-.106875)+"T"+ze.measure.em2px(-.25875)+" "+ze.measure.em2px(-.06075)+"T"+ze.measure.em2px(-.293625)+" "+ze.measure.em2px(-.0315)+"T"+ze.measure.em2px(-.307125)+" "+ze.measure.em2px(-.02025)+"Q"+ze.measure.em2px(-.30825)+" "+ze.measure.em2px(-.019125)+" "+ze.measure.em2px(-.30825)+" 0T"+ze.measure.em2px(-.307125)+" "+ze.measure.em2px(.02025)+"Q"+ze.measure.em2px(-.307125)+" "+ze.measure.em2px(.021375)+" "+ze.measure.em2px(-.284625)+" "+ze.measure.em2px(.03825)+"T"+ze.measure.em2px(-.2295)+" "+ze.measure.em2px(.091125)+"T"+ze.measure.em2px(-.162)+" "+ze.measure.em2px(.176625)+"T"+ze.measure.em2px(-.10125)+" "+ze.measure.em2px(.30825)+"T"+ze.measure.em2px(-.068625)+" "+ze.measure.em2px(.482625)+"Q"+ze.measure.em2px(-.0675)+" "+ze.measure.em2px(.496125)+" "+ze.measure.em2px(-.0675)+" "+ze.measure.em2px(.759375)+"Z",e.createSVGElement("path",{d:t,fill:this.color,stroke:this.color,"stroke-width":"0pt",transform:"translate("+ze.measure.em2px(this.x)+","+ze.measure.em2px(-this.y)+") rotate("+-this.degree+") scale("+n/1.125+")"})}},{key:"getBoundingBox",value:function(){var e=ze.measure.oneem;return new nt.Rect(this.x,this.y,{l:.274*e,r:.274*e,u:Math.max(1.41975*e/1.125,this.up),d:Math.max(1.41975*e/1.125,this.down)}).rotate(this.degree*Math.PI/180)}},{key:"toString",value:function(){return"LeftBrace[x:"+this.x+", y:"+this.y+", up:"+this.up+", down:"+this.down+"]"}}]),n}(pt),pt.LeftParenthesis=function(e){it(n,e);var t=ot(n);function n(e,r,i,a,o){var u;return ht(this,n),(u=t.call(this)).x=e,u.y=r,u.height=i,u.degree=a,u.color=o||"currentColor",We(st(u),"getBoundingBox"),u}return mt(n,[{key:"draw",value:function(e){var t,n=ze.measure.oneem,r=Math.max(.660375,this.height/2/n*1.125)-.660375,i=-r;t="M"+ze.measure.em2px(-.0675)+" "+ze.measure.em2px(r)+"T"+ze.measure.em2px(-.068625)+" "+ze.measure.em2px(.07875+r)+"Q"+ze.measure.em2px(-.068625)+" "+ze.measure.em2px(.190125+r)+" "+ze.measure.em2px(-.0585)+" "+ze.measure.em2px(.250875+r)+"T"+ze.measure.em2px(-.01125)+" "+ze.measure.em2px(.387+r)+"Q"+ze.measure.em2px(.07425)+" "+ze.measure.em2px(.55575+r)+" "+ze.measure.em2px(.2475)+" "+ze.measure.em2px(.6525+r)+"L"+ze.measure.em2px(.262125)+" "+ze.measure.em2px(.660375+r)+"L"+ze.measure.em2px(.3015)+" "+ze.measure.em2px(.660375+r)+"L"+ze.measure.em2px(.30825)+" "+ze.measure.em2px(.653625+r)+"V"+ze.measure.em2px(.622125+r)+"Q"+ze.measure.em2px(.30825)+" "+ze.measure.em2px(.60975+r)+" "+ze.measure.em2px(.2925)+" "+ze.measure.em2px(.60075+r)+"Q"+ze.measure.em2px(.205875)+" "+ze.measure.em2px(.541125+r)+" "+ze.measure.em2px(.149625)+" "+ze.measure.em2px(.44775+r)+"T"+ze.measure.em2px(.07425)+" "+ze.measure.em2px(.239625+r)+"Q"+ze.measure.em2px(.07425)+" "+ze.measure.em2px(.2385+r)+" "+ze.measure.em2px(.073125)+" "+ze.measure.em2px(.235125+r)+"Q"+ze.measure.em2px(.068625)+" "+ze.measure.em2px(.203625+r)+" "+ze.measure.em2px(.0675)+" "+ze.measure.em2px(.041625+r)+"L"+ze.measure.em2px(.0675)+" "+ze.measure.em2px(-.041625+i)+"Q"+ze.measure.em2px(.068625)+" "+ze.measure.em2px(-.203625+i)+" "+ze.measure.em2px(.073125)+" "+ze.measure.em2px(-.235125+i)+"Q"+ze.measure.em2px(.07425)+" "+ze.measure.em2px(-.2385+i)+" "+ze.measure.em2px(.07425)+" "+ze.measure.em2px(-.239625+i)+"Q"+ze.measure.em2px(.093375)+" "+ze.measure.em2px(-.354375+i)+" "+ze.measure.em2px(.149625)+" "+ze.measure.em2px(-.44775+i)+"T"+ze.measure.em2px(.2925)+" "+ze.measure.em2px(-.60075+i)+"Q"+ze.measure.em2px(.30825)+" "+ze.measure.em2px(-.60975+i)+" "+ze.measure.em2px(.30825)+" "+ze.measure.em2px(-.622125+i)+"L"+ze.measure.em2px(.30825)+" "+ze.measure.em2px(-.653625+i)+"L"+ze.measure.em2px(.3015)+" "+ze.measure.em2px(-.660375+i)+"L"+ze.measure.em2px(.262125)+" "+ze.measure.em2px(-.660375+i)+"L"+ze.measure.em2px(.2475)+" "+ze.measure.em2px(-.6525+i)+"Q"+ze.measure.em2px(.07425)+" "+ze.measure.em2px(-.55575+i)+" "+ze.measure.em2px(-.01125)+" "+ze.measure.em2px(-.387+i)+"Q"+ze.measure.em2px(-.048375)+" "+ze.measure.em2px(-.311625+i)+" "+ze.measure.em2px(-.0585)+" "+ze.measure.em2px(-.250875+i)+"T"+ze.measure.em2px(-.068625)+" "+ze.measure.em2px(-.07875+i)+"Q"+ze.measure.em2px(-.0675)+" "+ze.measure.em2px(i)+" "+ze.measure.em2px(-.0675)+" "+ze.measure.em2px(i)+"Z",e.createSVGElement("path",{d:t,fill:this.color,stroke:this.color,"stroke-width":"0pt",transform:"translate("+ze.measure.em2px(this.x)+","+ze.measure.em2px(-this.y)+") rotate("+-this.degree+") scale("+n/1.125+")"})}},{key:"getBoundingBox",value:function(){var e=ze.measure.oneem;return new nt.Rect(this.x,this.y,{l:.06*e,r:.274*e,u:Math.max(.660375*e/1.125,this.height/2),d:Math.max(.660375*e/1.125,this.height/2)}).rotate(this.degree*Math.PI/180)}},{key:"toString",value:function(){return"LeftBrace[x:"+this.x+", y:"+this.y+", up:"+this.up+", down:"+this.down+"]"}}]),n}(pt),pt.TextShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.math=r,i.originalBBox=void 0,We(st(i),"getBoundingBox"),We(st(i),"getOriginalReferencePoint"),i}return mt(n,[{key:"draw",value:function(e){this._draw(e,!1)}},{key:"getBoundingBox",value:function(){return this._draw(ze.svgForTestLayout,!0)}},{key:"_draw",value:function(e,t){return e.xypicWrapper.drawTextObject(this,e,t)}},{key:"getOriginalReferencePoint",value:function(){this.getBoundingBox();var e=this.originalBBox,t=this.c,n=e.H,r=e.D;return new nt.Point(t.x,t.y-(n-r)/2)}},{key:"toString",value:function(){return"TextShape[c:"+this.c.toString()+", math:"+this.math.toString()+"]"}}]),n}(pt),pt.ImageShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.url=r,We(st(i),"getBoundingBox"),We(st(i),"getOriginalReferencePoint"),i}return mt(n,[{key:"draw",value:function(e){var t=this.c;e.createSVGElement("image",{x:ze.measure.em2px(t.x-t.l),y:ze.measure.em2px(-t.y-t.u),width:ze.measure.em2px(t.l+t.r),height:ze.measure.em2px(t.u+t.d),preserveAspectRatio:"none","xlink:href":this.url})}},{key:"getBoundingBox",value:function(){return this.c}},{key:"getOriginalReferencePoint",value:function(){return this.c}},{key:"toString",value:function(){return"ImageShape[c:"+this.c.toString()+", height:"+this.height+", width:"+this.width+", url:"+this.url+"]"}}]),n}(pt),pt.ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(){return ht(this,n),t.call(this)}return mt(n,[{key:"draw",value:function(e){var t=e.createGroup(e.transformBuilder().translate(this.c.x,this.c.y).rotateRadian(this.angle));this.drawDelegate(t)}},{key:"getBoundingBox",value:function(){return this.c.toRect(this.getBox()).rotate(this.angle)}},{key:"toString",value:function(){return"ArrowheadShape[c:"+this.c.toString()+", angle:"+this.angle+"]"}}]),n}(pt),pt.GT2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:.456*e,r:0,d:.229*e,u:.229*e}}},{key:"getRadius",value:function(){return.213*ze.measure.oneem}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=e.createGroup(e.transformBuilder().rotateDegree(-10)),r=e.createGroup(e.transformBuilder().rotateDegree(10));n.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)}),r.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.GT3ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:.507*e,r:0,d:.268*e,u:.268*e}}},{key:"getRadius",value:function(){return.325*ze.measure.oneem}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=e.createGroup(e.transformBuilder().rotateDegree(-15)),r=e.createGroup(e.transformBuilder().rotateDegree(15));n.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("line",{x1:0,y1:0,x2:ze.measure.em2px(-.507*t),y2:0}),r.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.UpperGTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:.489*e,r:0,d:0,u:.147*e}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem;e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)})}}]),n}(pt.ArrowheadShape),pt.LowerGTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:.489*e,r:0,d:.147*e,u:0}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem;e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.GTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:.489*e,r:0,d:.147*e,u:.147*e}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem;e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)})}}]),n}(pt.ArrowheadShape),pt.LT2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:0,r:.456*e,d:.229*e,u:.229*e}}},{key:"getRadius",value:function(){return.213*ze.measure.oneem}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=e.createGroup(e.transformBuilder().rotateDegree(10)),r=e.createGroup(e.transformBuilder().rotateDegree(-10));n.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)}),r.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.LT3ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:0,r:.507*e,d:.268*e,u:.268*e}}},{key:"getRadius",value:function(){return.325*ze.measure.oneem}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=e.createGroup(e.transformBuilder().rotateDegree(15)),r=e.createGroup(e.transformBuilder().rotateDegree(-15));n.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("line",{x1:0,y1:0,x2:ze.measure.em2px(.507*t),y2:0}),r.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.UpperLTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:0,r:.489*e,d:0,u:.147*e}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem;e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)})}}]),n}(pt.ArrowheadShape),pt.LowerLTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:0,r:.489*e,d:.147*e,u:0}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem;e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.LTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:0,r:.489*e,d:.147*e,u:.147*e}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem;e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.UpperColumnArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:0,u:ze.measure.lineElementLength,d:0}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:0,x2:0,y2:-t})}}]),n}(pt.ArrowheadShape),pt.LowerColumnArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:0,u:0,d:ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:0,x2:0,y2:t})}}]),n}(pt.ArrowheadShape),pt.Column2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:0,u:.5*(ze.measure.lineElementLength+ze.measure.thickness),d:.5*(ze.measure.lineElementLength+ze.measure.thickness)}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(.5*(ze.measure.lineElementLength+ze.measure.thickness));e.createSVGElement("line",{x1:0,y1:t,x2:0,y2:-t})}}]),n}(pt.ArrowheadShape),pt.Column3ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:0,u:.5*ze.measure.lineElementLength+ze.measure.thickness,d:.5*ze.measure.lineElementLength+ze.measure.thickness}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(.5*ze.measure.lineElementLength+ze.measure.thickness);e.createSVGElement("line",{x1:0,y1:t,x2:0,y2:-t})}}]),n}(pt.ArrowheadShape),pt.ColumnArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:0,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:t,x2:0,y2:-t})}}]),n}(pt.ArrowheadShape),pt.UpperLParenArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:.5*ze.measure.lineElementLength,r:0,u:ze.measure.lineElementLength,d:0}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("path",{d:"M0,0 A "+t+","+t+" 0 0,1 0,"+-2*t})}}]),n}(pt.ArrowheadShape),pt.LowerLParenArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:.5*ze.measure.lineElementLength,r:0,u:0,d:ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("path",{d:"M0,0 A "+t+","+t+" 0 0,0 0,"+2*t})}}]),n}(pt.ArrowheadShape),pt.LParenArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:.5*ze.measure.lineElementLength,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("path",{d:"M"+t+","+-t+" A "+t+","+t+" 0 0,0 "+t+","+t})}}]),n}(pt.ArrowheadShape),pt.UpperRParenArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:.5*ze.measure.lineElementLength,u:ze.measure.lineElementLength,d:0}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("path",{d:"M0,0 A "+t+","+t+" 0 0,0 0,"+-2*t})}}]),n}(pt.ArrowheadShape),pt.LowerRParenArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:.5*ze.measure.lineElementLength,u:0,d:ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("path",{d:"M0,0 A "+t+","+t+" 0 0,1 0,"+2*t})}}]),n}(pt.ArrowheadShape),pt.RParenArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:.5*ze.measure.lineElementLength,r:0,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("path",{d:"M"+-t+","+-t+" A "+t+","+t+" 0 0,1 "+-t+","+t})}}]),n}(pt.ArrowheadShape),pt.LowerBackquoteArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:.5*ze.measure.lineElementLength,r:0,u:0,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("path",{d:"M0,0 A "+t+","+t+" 0 0,0 "+-t+","+t})}}]),n}(pt.ArrowheadShape),pt.UpperBackquoteArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:.5*ze.measure.lineElementLength,r:0,u:.5*ze.measure.lineElementLength,d:0}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("path",{d:"M0,0 A "+t+","+t+" 0 0,1 "+-t+","+-t})}}]),n}(pt.ArrowheadShape),pt.LowerQuoteArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:.5*ze.measure.lineElementLength,u:0,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("path",{d:"M0,0 A "+t+","+t+" 0 0,1 "+t+","+t})}}]),n}(pt.ArrowheadShape),pt.UpperQuoteArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:.5*ze.measure.lineElementLength,u:.5*ze.measure.lineElementLength,d:0}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("path",{d:"M0,0 A "+t+","+t+" 0 0,0 "+t+","+-t})}}]),n}(pt.ArrowheadShape),pt.AsteriskArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=0,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:ze.measure.thickness,r:ze.measure.thickness,u:ze.measure.thickness,d:ze.measure.thickness}}},{key:"drawDelegate",value:function(e){e.createSVGElement("circle",{cx:0,cy:0,r:ze.measure.em2px(ze.measure.thickness),fill:"currentColor"})}}]),n}(pt.ArrowheadShape),pt.OArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=0,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:ze.measure.thickness,r:ze.measure.thickness,u:ze.measure.thickness,d:ze.measure.thickness}}},{key:"drawDelegate",value:function(e){e.createSVGElement("circle",{cx:0,cy:0,r:ze.measure.em2px(ze.measure.thickness)})}}]),n}(pt.ArrowheadShape),pt.PlusArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:.5*ze.measure.lineElementLength,r:.5*ze.measure.lineElementLength,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.lineElementLength/2,n=ze.measure.em2px(t);e.createSVGElement("line",{x1:-n,y1:0,x2:n,y2:0}),e.createSVGElement("line",{x1:0,y1:n,x2:0,y2:-n})}}]),n}(pt.ArrowheadShape),pt.XArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r+Math.PI/4,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:.5*ze.measure.lineElementLength,r:.5*ze.measure.lineElementLength,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.lineElementLength/2,n=ze.measure.em2px(t);e.createSVGElement("line",{x1:-n,y1:0,x2:n,y2:0}),e.createSVGElement("line",{x1:0,y1:n,x2:0,y2:-n})}}]),n}(pt.ArrowheadShape),pt.SlashArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r-Math.PI/10,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:0,u:ze.measure.lineElementLength/2,d:ze.measure.lineElementLength/2}}},{key:"drawDelegate",value:function(e){var t=ze.measure.lineElementLength/2,n=ze.measure.em2px(t);e.createSVGElement("line",{x1:0,y1:n,x2:0,y2:-n})}}]),n}(pt.ArrowheadShape),pt.Line3ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:ze.measure.lineElementLength,u:ze.measure.thickness,d:ze.measure.thickness}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(ze.measure.lineElementLength),n=ze.measure.em2px(ze.measure.thickness);e.createSVGElement("line",{x1:0,y1:n,x2:t,y2:n}),e.createSVGElement("line",{x1:0,y1:0,x2:t,y2:0}),e.createSVGElement("line",{x1:0,y1:-n,x2:t,y2:-n})}}]),n}(pt.ArrowheadShape),pt.Line2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:ze.measure.lineElementLength,u:.5*ze.measure.thickness,d:.5*ze.measure.thickness}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(.5*ze.measure.thickness),n=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:t,x2:n,y2:t}),e.createSVGElement("line",{x1:0,y1:-t,x2:n,y2:-t})}}]),n}(pt.ArrowheadShape),pt.LineArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:ze.measure.lineElementLength,u:0,d:0}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:0,x2:t,y2:0})}}]),n}(pt.ArrowheadShape),pt.Dot3ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:0,u:ze.measure.thickness,d:ze.measure.thickness}}},{key:"drawDelegate",value:function(e){ze.measure.oneem;var t=ze.measure.em2px(ze.measure.thickness),n=ze.measure.em2px(ze.measure.thickness),r=ze.measure.dottedDasharray;e.createSVGElement("line",{x1:0,y1:t,x2:n,y2:t,"stroke-dasharray":r}),e.createSVGElement("line",{x1:0,y1:0,x2:n,y2:0,"stroke-dasharray":r}),e.createSVGElement("line",{x1:0,y1:-t,x2:n,y2:-t,"stroke-dasharray":r})}}]),n}(pt.ArrowheadShape),pt.Dot2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:0,u:.5*ze.measure.thickness,d:.5*ze.measure.thickness}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(.5*ze.measure.thickness),n=ze.measure.em2px(ze.measure.thickness),r=ze.measure.dottedDasharray;e.createSVGElement("line",{x1:0,y1:t,x2:n,y2:t,"stroke-dasharray":r}),e.createSVGElement("line",{x1:0,y1:-t,x2:n,y2:-t,"stroke-dasharray":r})}}]),n}(pt.ArrowheadShape),pt.DotArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:0,u:0,d:0}}},{key:"drawDelegate",value:function(e){ze.measure.oneem;var t=ze.measure.em2px(ze.measure.thickness),n=ze.measure.dottedDasharray;e.createSVGElement("line",{x1:0,y1:0,x2:t,y2:0,"stroke-dasharray":n})}}]),n}(pt.ArrowheadShape),pt.Tilde3ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:-2*ze.measure.thickness,r:2*ze.measure.thickness,u:2*ze.measure.thickness,d:2*ze.measure.thickness}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(ze.measure.thickness);e.createSVGElement("path",{d:"M"+-2*t+","+t+" Q"+-t+",0 0,"+t+" T"+2*t+","+t+"M"+-2*t+",0 Q"+-t+","+-t+" 0,0 T"+2*t+",0M"+-2*t+","+-t+" Q"+-t+","+-2*t+" 0,"+-t+" T"+2*t+","+-t})}}]),n}(pt.ArrowheadShape),pt.Tilde2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:-2*ze.measure.thickness,r:2*ze.measure.thickness,u:1.5*ze.measure.thickness,d:1.5*ze.measure.thickness}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(ze.measure.thickness);e.createSVGElement("path",{d:"M"+-2*t+","+.5*t+" Q"+-t+","+-.5*t+" 0,"+.5*t+" T"+2*t+","+.5*t+"M"+-2*t+","+-.5*t+" Q"+-t+","+-1.5*t+" 0,"+-.5*t+" T"+2*t+","+-.5*t})}}]),n}(pt.ArrowheadShape),pt.TildeArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:-2*ze.measure.thickness,r:2*ze.measure.thickness,u:ze.measure.thickness,d:ze.measure.thickness}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(ze.measure.thickness);e.createSVGElement("path",{d:"M"+-2*t+",0 Q"+-t+","+-t+" 0,0 T"+2*t+",0"})}}]),n}(pt.ArrowheadShape),pt.TildeArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:-2*ze.measure.thickness,r:2*ze.measure.thickness,u:ze.measure.thickness,d:ze.measure.thickness}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(ze.measure.thickness);e.createSVGElement("path",{d:"M"+-2*t+",0 Q"+-t+","+-t+" 0,0 T"+2*t+",0"})}}]),n}(pt.ArrowheadShape),pt.GTGTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:.489*e+2*ze.measure.thickness,r:0,d:.147*e,u:.147*e}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=ze.measure.em2px(2*n);e.createSVGElement("path",{d:"M"+-r+",0 Q"+(ze.measure.em2px(-.222*t)-r)+","+ze.measure.em2px(.02*t)+" "+(ze.measure.em2px(-.489*t)-r)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M"+-r+",0 Q"+(ze.measure.em2px(-.222*t)-r)+","+ze.measure.em2px(-.02*t)+" "+(ze.measure.em2px(-.489*t)-r)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)})}}]),n}(pt.ArrowheadShape),pt.UpperGTGTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:.489*e+2*ze.measure.thickness,r:0,d:0,u:.147*e}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=ze.measure.em2px(2*n);e.createSVGElement("path",{d:"M"+-r+",0 Q"+(ze.measure.em2px(-.222*t)-r)+","+ze.measure.em2px(-.02*t)+" "+(ze.measure.em2px(-.489*t)-r)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)})}}]),n}(pt.ArrowheadShape),pt.LowerGTGTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:.489*e+2*ze.measure.thickness,r:0,d:.147*e,u:0}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=ze.measure.em2px(2*n);e.createSVGElement("path",{d:"M"+-r+",0 Q"+(ze.measure.em2px(-.222*t)-r)+","+ze.measure.em2px(.02*t)+" "+(ze.measure.em2px(-.489*t)-r)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.GTGT2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:.456*e+2*ze.measure.thickness,r:0,d:.229*e,u:.229*e}}},{key:"getRadius",value:function(){return.213*ze.measure.oneem}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=e.createGroup(e.transformBuilder().rotateDegree(-10)),i=e.createGroup(e.transformBuilder().rotateDegree(10));r.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)}),i.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)});var a=e.createGroup(e.transformBuilder().translate(-2*n,0).rotateDegree(-10)),o=e.createGroup(e.transformBuilder().translate(-2*n,0).rotateDegree(10));a.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)}),o.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.GTGT3ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:.507*e+2*ze.measure.thickness,r:0,d:.268*e,u:.268*e}}},{key:"getRadius",value:function(){return.325*ze.measure.oneem}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=e.createGroup(e.transformBuilder().rotateDegree(-15)),i=e.createGroup(e.transformBuilder().rotateDegree(15));r.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)}),i.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)});var a=e.createGroup(e.transformBuilder().translate(-2*n,0).rotateDegree(-15)),o=e.createGroup(e.transformBuilder().translate(-2*n,0).rotateDegree(15));a.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)}),o.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("line",{x1:0,y1:0,x2:ze.measure.em2px(-.507*t-2*n),y2:0})}}]),n}(pt.ArrowheadShape),pt.LTLTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:0,r:.489*e+2*ze.measure.thickness,d:.147*e,u:.147*e}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=ze.measure.em2px(2*n);e.createSVGElement("path",{d:"M"+r+",0 Q"+(ze.measure.em2px(.222*t)+r)+","+ze.measure.em2px(-.02*t)+" "+(ze.measure.em2px(.489*t)+r)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("path",{d:"M"+r+",0 Q"+(ze.measure.em2px(.222*t)+r)+","+ze.measure.em2px(.02*t)+" "+(ze.measure.em2px(.489*t)+r)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.UpperLTLTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:0,r:.489*e+2*ze.measure.thickness,d:0,u:.147*e}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=ze.measure.em2px(2*n);e.createSVGElement("path",{d:"M"+r+",0 Q"+(ze.measure.em2px(.222*t)+r)+","+ze.measure.em2px(-.02*t)+" "+(ze.measure.em2px(.489*t)+r)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)})}}]),n}(pt.ArrowheadShape),pt.LowerLTLTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:0,r:.489*e+2*ze.measure.thickness,d:.147*e,u:0}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=ze.measure.em2px(2*n);e.createSVGElement("path",{d:"M"+r+",0 Q"+(ze.measure.em2px(.222*t)+r)+","+ze.measure.em2px(.02*t)+" "+(ze.measure.em2px(.489*t)+r)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.LTLT2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:0,r:.456+e+2*ze.measure.thickness,d:.229*e,u:.229*e}}},{key:"getRadius",value:function(){return.213*ze.measure.oneem}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=e.createGroup(e.transformBuilder().translate(2*n,0).rotateDegree(10)),i=e.createGroup(e.transformBuilder().translate(2*n,0).rotateDegree(-10));r.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)}),i.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)});var a=e.createGroup(e.transformBuilder().rotateDegree(10)),o=e.createGroup(e.transformBuilder().rotateDegree(-10));a.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)}),o.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.LTLT3ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:0,r:.507*e+2*ze.measure.thickness,d:.268*e,u:.268*e}}},{key:"getRadius",value:function(){return.325*ze.measure.oneem}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=e.createGroup(e.transformBuilder().translate(2*n,0).rotateDegree(15)),i=e.createGroup(e.transformBuilder().translate(2*n,0).rotateDegree(-15));r.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)}),i.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)});var a=e.createGroup(e.transformBuilder().rotateDegree(15)),o=e.createGroup(e.transformBuilder().rotateDegree(-15));a.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)}),o.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("line",{x1:0,y1:0,x2:ze.measure.em2px(.507*t+2*n),y2:0})}}]),n}(pt.ArrowheadShape),pt.ColumnColumnArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:ze.measure.thickness,r:0,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.thickness,n=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:n,x2:0,y2:-n}),e.createSVGElement("line",{x1:-ze.measure.em2px(t),y1:n,x2:-ze.measure.em2px(t),y2:-n})}}]),n}(pt.ArrowheadShape),pt.UpperColumnColumnArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:ze.measure.thickness,r:0,u:ze.measure.lineElementLength,d:0}}},{key:"drawDelegate",value:function(e){var t=ze.measure.thickness,n=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:0,x2:0,y2:-n}),e.createSVGElement("line",{x1:-ze.measure.em2px(t),y1:0,x2:-ze.measure.em2px(t),y2:-n})}}]),n}(pt.ArrowheadShape),pt.LowerColumnColumnArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:ze.measure.thickness,r:0,u:0,d:ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.thickness,n=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:0,x2:0,y2:n}),e.createSVGElement("line",{x1:-ze.measure.em2px(t),y1:0,x2:-ze.measure.em2px(t),y2:n})}}]),n}(pt.ArrowheadShape),pt.ColumnColumn2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:ze.measure.thickness,r:0,u:.5*(ze.measure.lineElementLength+ze.measure.thickness),d:.5*(ze.measure.lineElementLength+ze.measure.thickness)}}},{key:"drawDelegate",value:function(e){var t=ze.measure.thickness,n=ze.measure.em2px(.5*(ze.measure.lineElementLength+ze.measure.thickness));e.createSVGElement("line",{x1:0,y1:n,x2:0,y2:-n}),e.createSVGElement("line",{x1:-ze.measure.em2px(t),y1:n,x2:-ze.measure.em2px(t),y2:-n})}}]),n}(pt.ArrowheadShape),pt.ColumnColumn3ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:ze.measure.thickness,r:0,u:.5*ze.measure.lineElementLength+ze.measure.thickness,d:.5*ze.measure.lineElementLength+ze.measure.thickness}}},{key:"drawDelegate",value:function(e){var t=ze.measure.thickness,n=(t=ze.measure.thickness,ze.measure.em2px(.5*ze.measure.lineElementLength+ze.measure.thickness));e.createSVGElement("line",{x1:0,y1:n,x2:0,y2:-n}),e.createSVGElement("line",{x1:-ze.measure.em2px(t),y1:n,x2:-ze.measure.em2px(t),y2:-n})}}]),n}(pt.ArrowheadShape),pt.ColumnLineArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:ze.measure.lineElementLength,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:t,x2:0,y2:-t});var n=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:0,x2:n,y2:0})}}]),n}(pt.ArrowheadShape),pt.UpperColumnLineArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:ze.measure.lineElementLength,u:ze.measure.lineElementLength,d:0}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:0,x2:0,y2:-t});var n=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:0,x2:n,y2:0})}}]),n}(pt.ArrowheadShape),pt.LowerColumnLineArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:ze.measure.lineElementLength,u:0,d:ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){ze.measure.thickness;var t=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:0,x2:0,y2:t});var n=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:0,x2:n,y2:0})}}]),n}(pt.ArrowheadShape),pt.ColumnLine2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:ze.measure.lineElementLength,u:.5*(ze.measure.lineElementLength+ze.measure.thickness),d:.5*(ze.measure.lineElementLength+ze.measure.thickness)}}},{key:"drawDelegate",value:function(e){var t=ze.measure.thickness,n=ze.measure.em2px(.5*(ze.measure.lineElementLength+ze.measure.thickness));e.createSVGElement("line",{x1:0,y1:-n,x2:0,y2:n});var r=ze.measure.em2px(.5*t),i=ze.measure.em2px(ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:r,x2:i,y2:r}),e.createSVGElement("line",{x1:0,y1:-r,x2:i,y2:-r})}}]),n}(pt.ArrowheadShape),pt.ColumnLine3ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:ze.measure.lineElementLength,u:.5*ze.measure.lineElementLength+ze.measure.thickness,d:.5*ze.measure.lineElementLength+ze.measure.thickness}}},{key:"drawDelegate",value:function(e){var t=ze.measure.thickness,n=ze.measure.em2px(.5*ze.measure.lineElementLength+ze.measure.thickness);e.createSVGElement("line",{x1:0,y1:-n,x2:0,y2:n});var r=ze.measure.em2px(ze.measure.lineElementLength),i=ze.measure.em2px(t);e.createSVGElement("line",{x1:0,y1:i,x2:r,y2:i}),e.createSVGElement("line",{x1:0,y1:0,x2:r,y2:0}),e.createSVGElement("line",{x1:0,y1:-i,x2:r,y2:-i})}}]),n}(pt.ArrowheadShape),pt.GTColumnArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:.489*ze.measure.oneem,r:0,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:n,x2:0,y2:-n}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)})}}]),n}(pt.ArrowheadShape),pt.GTGTColumnArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:.489*ze.measure.oneem+2*ze.measure.thickness,r:0,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:r,x2:0,y2:-r});var i=ze.measure.em2px(2*n);e.createSVGElement("path",{d:"M"+-i+",0 Q"+(ze.measure.em2px(-.222*t)-i)+","+ze.measure.em2px(.02*t)+" "+(ze.measure.em2px(-.489*t)-i)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M"+-i+",0 Q"+(ze.measure.em2px(-.222*t)-i)+","+ze.measure.em2px(-.02*t)+" "+(ze.measure.em2px(-.489*t)-i)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)})}}]),n}(pt.ArrowheadShape),pt.ColumnLTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:.489*ze.measure.oneem,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=(ze.measure.thickness,ze.measure.em2px(.5*ze.measure.lineElementLength));e.createSVGElement("line",{x1:0,y1:n,x2:0,y2:-n}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.ColumnLTLTArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:0,r:.489*ze.measure.oneem+2*ze.measure.thickness,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.thickness,r=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:r,x2:0,y2:-r});var i=ze.measure.em2px(2*n);e.createSVGElement("path",{d:"M"+i+",0 Q"+(ze.measure.em2px(.222*t)+i)+","+ze.measure.em2px(-.02*t)+" "+(ze.measure.em2px(.489*t)+i)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("path",{d:"M"+i+",0 Q"+(ze.measure.em2px(.222*t)+i)+","+ze.measure.em2px(.02*t)+" "+(ze.measure.em2px(.489*t)+i)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(-.147*t)}),e.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(.489*t)+","+ze.measure.em2px(.147*t)})}}]),n}(pt.ArrowheadShape),pt.SlashSlashArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r-Math.PI/10,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){return{l:ze.measure.thickness,r:0,u:.5*ze.measure.lineElementLength,d:.5*ze.measure.lineElementLength}}},{key:"drawDelegate",value:function(e){var t=ze.measure.em2px(ze.measure.thickness),n=ze.measure.em2px(.5*ze.measure.lineElementLength);e.createSVGElement("line",{x1:0,y1:n,x2:0,y2:-n}),e.createSVGElement("line",{x1:-t,y1:n,x2:-t,y2:-n})}}]),n}(pt.ArrowheadShape),pt.LineGT2ArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){var e=ze.measure.oneem;return{l:ze.measure.lineElementLength,r:ze.measure.lineElementLength,d:.229*e,u:.229*e}}},{key:"getRadius",value:function(){return.213*ze.measure.oneem}},{key:"drawDelegate",value:function(e){var t=ze.measure.oneem,n=ze.measure.lineElementLength,r=ze.measure.em2px(n),i=.5*ze.measure.thickness,a=ze.measure.em2px(i),o=this.getRadius(),u=ze.measure.em2px(Math.sqrt(o*o-i*i)),s=e.createGroup(e.transformBuilder().translate(n,0).rotateDegree(-10)),c=e.createGroup(e.transformBuilder().translate(n,0).rotateDegree(10));s.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(-.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(-.147*t)}),c.createSVGElement("path",{d:"M0,0 Q"+ze.measure.em2px(-.222*t)+","+ze.measure.em2px(.02*t)+" "+ze.measure.em2px(-.489*t)+","+ze.measure.em2px(.147*t)}),e.createSVGElement("path",{d:"M"+-r+","+a+" L"+(r-u)+","+a+" M"+-r+","+-a+" L"+(r-u)+","+-a})}}]),n}(pt.ArrowheadShape),pt.TwocellEqualityArrowheadShape=function(e){it(n,e);var t=ot(n);function n(e,r){var i;return ht(this,n),(i=t.call(this)).c=e,i.angle=r,We(st(i),"getBoundingBox"),i}return mt(n,[{key:"getBox",value:function(){ze.measure.oneem;return{l:ze.measure.lineElementLength,r:ze.measure.lineElementLength,d:.5*ze.measure.thickness,u:.5*ze.measure.thickness}}},{key:"drawDelegate",value:function(e){ze.measure.oneem;var t=ze.measure.em2px(ze.measure.lineElementLength),n=ze.measure.em2px(.5*ze.measure.thickness);e.createSVGElement("path",{d:"M"+-t+","+n+" L"+t+","+n+" M"+-t+","+-n+" L"+t+","+-n})}}]),n}(pt.ArrowheadShape),pt.LineShape=function(e){it(n,e);var t=ot(n);function n(e,r,i,a,o){var u;return ht(this,n),(u=t.call(this)).line=e,u.object=r,u.main=i,u.variant=a,u.bbox=o,u.holeRanges=A.empty,u}return mt(n,[{key:"sliceHole",value:function(e){this.holeRanges=this.holeRanges.prepend(e)}},{key:"draw",value:function(e){this.line.drawLine(e,this.object,this.main,this.variant,this.holeRanges)}},{key:"getBoundingBox",value:function(){return this.bbox}},{key:"toString",value:function(){return"LineShape[line:"+this.line+", object:"+this.object+", main:"+this.main+", variant:"+this.variant+"]"}}]),n}(pt),pt.CurveShape=function(e){it(n,e);var t=ot(n);function n(e,r,i,a){var o;return ht(this,n),(o=t.call(this)).curve=e,o.objectForDrop=r,o.objectForConnect=i,o.bbox=a,o.holeRanges=A.empty,o}return mt(n,[{key:"sliceHole",value:function(e){this.holeRanges=this.holeRanges.prepend(e)}},{key:"draw",value:function(e){this.curve.drawCurve(e,this.objectForDrop,this.objectForConnect,this.holeRanges)}},{key:"getBoundingBox",value:function(){return this.bbox}},{key:"toString",value:function(){return"CurveShape[curve"+this.curve+", objectForDrop:"+(void 0!==this.objectForDrop?this.objectForDrop.toString():"null")+", objectForConnect:"+(void 0!==this.objectForConnect?this.objectForConnect.toString():"null")+"]"}}]),n}(pt);var dt=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),t>n?(this.start=n,this.end=t):(this.start=t,this.end=n)}var t,n,r;return t=e,(n=[{key:"difference",value:function(t){var n=A.empty,r=this.start,i=this.end,a=t.start,o=t.end;return i<=a||o<=r?n=n.prepend(this):r<a?n=i<=o?n.prepend(new e(r,a)):(n=n.prepend(new e(r,a))).prepend(new e(o,i)):o<i&&(n=n.prepend(new e(o,i))),n}},{key:"differenceRanges",value:function(e){var t=A.empty.prepend(this);return e.foreach((function(e){t=t.flatMap((function(t){return t.difference(e)}))})),t}},{key:"toString",value:function(){return"["+this.start+", "+this.end+"]"}}])&&ft(t.prototype,n),r&&ft(t,r),e}();function yt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var vt=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.shape=t,this.env=n}var t,n,r;return t=e,(n=[{key:"duplicateEnv",value:function(){var t=this.env.duplicate();return new e(this.shape,t)}},{key:"appendShapeToFront",value:function(e){e.isNone||(this.shape.isNone?this.shape=e:this.shape=new pt.CompositeShape(e,this.shape))}},{key:"appendShapeToBack",value:function(e){e.isNone||(this.shape.isNone?this.shape=e:this.shape=new pt.CompositeShape(this.shape,e))}}])&&yt(t.prototype,n),r&&yt(t,r),e}();function xt(e){return(xt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function gt(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&wt(e,t)}function wt(e,t){return(wt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function St(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=bt(e);if(t){var i=bt(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ct(this,n)}}function Ct(e,t){return!t||"object"!==xt(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function bt(e){return(bt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function kt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Mt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Pt(e,t,n){return t&&Mt(e.prototype,t),n&&Mt(e,n),e}var Bt=function(){function e(){kt(this,e);var t=ze.measure.length2em("1mm");this.origin={x:0,y:0},this.xBase={x:t,y:0},this.yBase={x:0,y:t},this.savedPosition={},this.stateStack=A.empty,this.stackFrames=A.empty,this.stack=A.empty,this.angle=0,this.lastCurve=At.none,this.p=this.c=e.originPosition,this.shouldCapturePos=!1,this.capturedPositions=A.empty,this.objectmargin=ze.measure.objectmargin,this.objectheight=ze.measure.objectheight,this.objectwidth=ze.measure.objectwidth,this.labelmargin=ze.measure.labelmargin}return Pt(e,[{key:"duplicate",value:function(){var t=new e;return e.copyFields(this,t),t}},{key:"saveState",value:function(){var e=this.duplicate();this.stateStack=this.stateStack.prepend(e)}},{key:"restoreState",value:function(){if(!this.stateStack.isEmpty){var t=this.stateStack.head;this.stateStack=this.stateStack.tail,e.copyFields(t,this)}}},{key:"absVector",value:function(e,t){return{x:this.origin.x+e*this.xBase.x+t*this.yBase.x,y:this.origin.y+e*this.xBase.y+t*this.yBase.y}}},{key:"inverseAbsVector",value:function(e,t){var n=this.xBase.x,r=this.xBase.y,i=this.yBase.x,a=this.yBase.y,o=n*a-r*i,u=e-this.origin.x,s=t-this.origin.y;return{x:(a*u-i*s)/o,y:(-r*u+n*s)/o}}},{key:"setOrigin",value:function(e,t){this.origin={x:e,y:t}}},{key:"setXBase",value:function(e,t){this.xBase={x:e,y:t}}},{key:"setYBase",value:function(e,t){this.yBase={x:e,y:t}}},{key:"swapPAndC",value:function(){var e=this.p;this.p=this.c,this.c=e}},{key:"enterStackFrame",value:function(){this.stackFrames=this.stackFrames.prepend(this.stack),this.initStack()}},{key:"leaveStackFrame",value:function(){this.stackFrames.isEmpty?this.initStack():(this.stack=this.stackFrames.head,this.stackFrames=this.stackFrames.tail)}},{key:"savePos",value:function(e,t){this.savedPosition[e]=t}},{key:"startCapturePositions",value:function(){this.shouldCapturePos=!0,this.capturedPositions=A.empty}},{key:"endCapturePositions",value:function(){this.shouldCapturePos=!1;var e=this.capturedPositions;return this.capturedPositions=A.empty,e}},{key:"capturePosition",value:function(e){this.shouldCapturePos&&void 0!==e&&(this.capturedPositions=this.capturedPositions.prepend(e))}},{key:"pushPos",value:function(e){void 0!==e&&(this.stack=this.stack.prepend(e))}},{key:"popPos",value:function(){if(this.stack.isEmpty)throw new u.Z("ExecutionError","cannot pop from the empty stack");var e=this.stack.head;return this.stack=this.stack.tail,e}},{key:"initStack",value:function(){this.stack=A.empty}},{key:"setStack",value:function(e){this.stack=e}},{key:"stackAt",value:function(e){return this.stack.at(e)}},{key:"lookupPos",value:function(e,t){var n=this.savedPosition[e];if(void 0===n)throw void 0!==t?new u.Z("ExecutionError",t):new u.Z("ExecutionError",'<pos> "'+e+'" not defined.');return n}},{key:"toString",value:function(){var e="";for(var t in this.savedPosition)this.savedPosition.hasOwnProperty(t)&&(e.length>0&&(e+=", "),e+=t.toString()+":"+this.savedPosition[t]);return"Env\n  p:"+this.p+"\n  c:"+this.c+"\n  angle:"+this.angle+"\n  lastCurve:"+this.lastCurve+"\n  savedPosition:{"+e+"}\n  origin:{x:"+this.origin.x+", y:"+this.origin.y+"}\n  xBase:{x:"+this.xBase.x+", y:"+this.xBase.y+"}\n  yBase:{x:"+this.yBase.x+", y:"+this.yBase.y+"}\n  stackFrames:"+this.stackFrames+"\n  stack:"+this.stack+"\n  shouldCapturePos:"+this.shouldCapturePos+"\n  capturedPositions:"+this.capturedPositions}}],[{key:"copyFields",value:function(e,t){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);for(var r in t.savedPosition={},e.savedPosition)e.savedPosition.hasOwnProperty(r)&&(t.savedPosition[r]=e.savedPosition[r])}}]),e}();Bt.originPosition=new nt.Point(0,0);var Ot=function(){function e(){kt(this,e)}return Pt(e,[{key:"velocity",value:function(e){var t=this.dpx(e),n=this.dpy(e);return Math.sqrt(t*t+n*n)}},{key:"length",value:function(e){if(e<0||e>1)throw new u.Z("ExecutionError","illegal cubic Bezier parameter t:"+e);this.buildLengthArray();var t=e*s.lengthResolution,n=Math.floor(t),r=Math.ceil(t);if(n===r)return this.lengthArray[n];var i=this.lengthArray[n];return i+(this.lengthArray[r]-i)/(r-n)*(t-n)}},{key:"tOfLength",value:function(e){this.buildLengthArray();var t,n,r,i=this.lengthArray;if(e<i[0])return 0;if(e>i[i.length-1])return 1;for(var a=0,o=i.length-2;a<=o&&(n=i[t=a+o>>1],r=i[t+1],!(e>=n&&e<=r));)e<n?o=t-1:a=t+1;var u=s.lengthResolution;return n===r?t/u:(t+(e-n)/(r-n))/u}},{key:"tOfShavedStart",value:function(e){if(e.isPoint())return 0;var t=this.tOfIntersections(e);return 0!=t.length?Math.min.apply(Math,t):void 0}},{key:"tOfShavedEnd",value:function(e){if(e.isPoint())return 1;var t=this.tOfIntersections(e);return 0!=t.length?Math.max.apply(Math,t):void 0}},{key:"shaveStart",value:function(e){if(e.isPoint())return this;var t=this.tOfIntersections(e);if(0!=t.length){var n=Math.min.apply(Math,t);return this.divide(n)[1]}}},{key:"shaveEnd",value:function(e){if(e.isPoint())return this;var t=this.tOfIntersections(e);if(0!=t.length){var n=Math.max.apply(Math,t);return this.divide(n)[0]}}},{key:"buildLengthArray",value:function(){if(void 0===this.lengthArray){var e=s.lengthResolution,t=new Array(e+1),n=0,r=.5/e,i=0,a=r/3;t[0]=0,n=this.velocity(0)+4*this.velocity(r);var o=this.velocity(2*r);for(t[1]=a*(n+o),i=2;i<=e;i++)n+=2*o+4*this.velocity((2*i-1)*r),o=this.velocity(2*i*r),t[i]=a*(n+o);this.lengthArray=t}}},{key:"drawParallelCurve",value:function(t,n){var r,i,a,o,u,c,h,l,m=this.countOfSegments()*s.interpolationResolution,p=new Array(m+1),f=new Array(m+1),d=new Array(m+1),y=new Array(m+1),v=new Array(m+1),x=Math.PI/2,g=n;for(r=0;r<=m;r++)i=r/m,p[r]=i,a=this.angle(i),u=(o=this.position(i)).x,c=o.y,h=g*Math.cos(a+x),l=g*Math.sin(a+x),f[r]=u+h,d[r]=c+l,y[r]=u-h,v[r]=c-l;e.CubicBeziers.interpolation(p,f,d).drawPrimitive(t,"none"),e.CubicBeziers.interpolation(p,y,v).drawPrimitive(t,"none")}},{key:"drawParallelDottedCurve",value:function(e,t,n){var r=1/ze.measure.em,i=r/2,a=r+t,o=this.length(1),u=Math.floor((o-r)/a),s=n;if(u>=0){var c,h=Math.PI/2,l=this.startPosition();this.endPosition();for(c=0;c<=u;c++){l=i+c*a;var m=this.tOfLength(l),p=this.angle(m),f=this.position(m),d=f.x,y=f.y,v=s*Math.cos(p+h),x=s*Math.sin(p+h);e.createSVGElement("circle",{cx:ze.measure.em2px(d+v),cy:-ze.measure.em2px(y+x),r:.12,fill:"currentColor"}),e.createSVGElement("circle",{cx:ze.measure.em2px(d-v),cy:-ze.measure.em2px(y-x),r:.12,fill:"currentColor"})}}}},{key:"drawParallelDashedCurve",value:function(t,n,r){var i,a,o,u,s,c,h,l,m=this.length(1),p=Math.floor((m-n)/(2*n)),f=2*p+1,d=(m-n)/2-p*n,y=new Array(p+1),v=new Array(p+1),x=new Array(p+1),g=new Array(p+1),w=new Array(p+1),S=Math.PI/2,C=r;for(i=0;i<=f;i++)a=this.tOfLength(d+i*n),y[i]=a,o=this.angle(a),s=(u=this.position(a)).x,c=u.y,h=C*Math.cos(o+S),l=C*Math.sin(o+S),v[i]=s+h,x[i]=c+l,g[i]=s-h,w[i]=c-l;e.CubicBeziers.interpolation(y,v,x).drawSkipped(t),e.CubicBeziers.interpolation(y,g,w).drawSkipped(t)}},{key:"drawSquigCurve",value:function(e,t){var n=ze.measure.length2em("0.15em"),r=this.length(1),i=4*n,a=n;if(r>=i){var o,u,s,c,h,l,m,p,f,d=Math.floor(r/i),y=(r-d*i)/2,v=Math.PI/2;switch(t){case"3":o=y,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m="M"+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p="M"+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),f="M"+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l);for(var x=0;x<d;x++)o=y+i*x+n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" Q"+ze.measure.em2px(s.x+2*h)+","+ze.measure.em2px(-s.y-2*l),p+=" Q"+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),f+=" Q"+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),o=y+i*x+2*n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" "+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p+=" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),f+=" "+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),o=y+i*x+3*n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" Q"+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),p+=" Q"+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),f+=" "+ze.measure.em2px(s.x-2*h)+","+ze.measure.em2px(-s.y+2*l),o=y+i*(x+1),u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" "+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p+=" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),f+=" "+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l);e.createSVGElement("path",{d:m}),e.createSVGElement("path",{d:p}),e.createSVGElement("path",{d:f});break;case"2":o=y,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v)/2,l=a*Math.sin(c+v)/2,m="M"+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p="M"+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l);for(x=0;x<d;x++)o=y+i*x+n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v)/2,l=a*Math.sin(c+v)/2,m+=" Q"+ze.measure.em2px(s.x+3*h)+","+ze.measure.em2px(-s.y-3*l),p+=" Q"+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),o=y+i*x+2*n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v)/2,l=a*Math.sin(c+v)/2,m+=" "+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p+=" "+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),o=y+i*x+3*n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v)/2,l=a*Math.sin(c+v)/2,m+=" Q"+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),p+=" Q"+ze.measure.em2px(s.x-3*h)+","+ze.measure.em2px(-s.y+3*l),o=y+i*(x+1),u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v)/2,l=a*Math.sin(c+v)/2,m+=" "+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p+=" "+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l);e.createSVGElement("path",{d:m}),e.createSVGElement("path",{d:p});break;default:o=y,u=this.tOfLength(o),s=this.position(u),m="M"+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y);for(x=0;x<d;x++)o=y+i*x+n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" Q"+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),o=y+i*x+2*n,u=this.tOfLength(o),s=this.position(u),m+=" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),o=y+i*x+3*n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" Q"+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),o=y+i*(x+1),u=this.tOfLength(o),s=this.position(u),m+=" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y);e.createSVGElement("path",{d:m})}}}},{key:"drawDashSquigCurve",value:function(e,t){var n=ze.measure.thickness,r=this.length(1),i=4*n,a=n;if(r>=i){var o,u,s,c,h,l,m,p,f,d=Math.floor((r-i)/2/i),y=(r-i)/2-d*i,v=Math.PI/2;switch(t){case"3":m=p=f="";for(var x=0;x<=d;x++)o=y+i*x*2,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" M"+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p+=" M"+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),f+=" M"+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),o=y+i*x*2+n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" Q"+ze.measure.em2px(s.x+2*h)+","+ze.measure.em2px(-s.y-2*l),p+=" Q"+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),f+=" Q"+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),o=y+i*x*2+2*n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" "+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p+=" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),f+=" "+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),o=y+i*x*2+3*n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" Q"+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),p+=" Q"+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),f+=" "+ze.measure.em2px(s.x-2*h)+","+ze.measure.em2px(-s.y+2*l),o=y+i*(2*x+1),u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" "+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p+=" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),f+=" "+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l);e.createSVGElement("path",{d:m}),e.createSVGElement("path",{d:p}),e.createSVGElement("path",{d:f});break;case"2":m=p="";for(x=0;x<=d;x++)o=y+i*x*2,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v)/2,l=a*Math.sin(c+v)/2,m+=" M"+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p+=" M"+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),o=y+i*x*2+n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v)/2,l=a*Math.sin(c+v)/2,m+=" Q"+ze.measure.em2px(s.x+3*h)+","+ze.measure.em2px(-s.y-3*l),p+=" Q"+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),o=y+i*x*2+2*n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v)/2,l=a*Math.sin(c+v)/2,m+=" "+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p+=" "+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),o=y+i*x*2+3*n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v)/2,l=a*Math.sin(c+v)/2,m+=" Q"+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),p+=" Q"+ze.measure.em2px(s.x-3*h)+","+ze.measure.em2px(-s.y+3*l),o=y+i*(2*x+1),u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v)/2,l=a*Math.sin(c+v)/2,m+=" "+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),p+=" "+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l);e.createSVGElement("path",{d:m}),e.createSVGElement("path",{d:p});break;default:m="";for(x=0;x<=d;x++)o=y+i*x*2,u=this.tOfLength(o),s=this.position(u),m+=" M"+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),o=y+i*x*2+n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" Q"+ze.measure.em2px(s.x+h)+","+ze.measure.em2px(-s.y-l),o=y+i*x*2+2*n,u=this.tOfLength(o),s=this.position(u),m+=" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),o=y+i*x*2+3*n,u=this.tOfLength(o),s=this.position(u),c=this.angle(u),h=a*Math.cos(c+v),l=a*Math.sin(c+v),m+=" Q"+ze.measure.em2px(s.x-h)+","+ze.measure.em2px(-s.y+l),o=y+i*(2*x+1),u=this.tOfLength(o),s=this.position(u),m+=" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y);e.createSVGElement("path",{d:m})}}}},{key:"drawCurve",value:function(e,t,n,r){if(r.isEmpty)this._drawCurve(e,t,n);else{var i=new dt(0,1).differenceRanges(r),a=this;i.foreach((function(r){a.slice(r.start,r.end)._drawCurve(e,t,n)}))}}},{key:"_drawCurve",value:function(e,t,n){var r,i=ze.measure.length2em("0.15em");if(void 0!==n){var a=n.dirMain(),o=n.dirVariant();switch(a){case"=":a="-",o="2";break;case"==":a="--",o="2";break;case":":case"::":a=".",o="2"}switch(a){case"":break;case"-":switch(o){case"2":r=i/2,this.drawParallelCurve(e,r);break;case"3":r=i,this.drawParallelCurve(e,r),this.drawPrimitive(e,"none");break;default:r=0,this.drawPrimitive(e,"none")}break;case".":case"..":switch(o){case"2":r=i/2,this.drawParallelDottedCurve(e,i,r);break;case"3":r=i,this.drawParallelDottedCurve(e,i,r),this.drawPrimitive(e,ze.measure.dottedDasharray);break;default:r=0,this.drawPrimitive(e,ze.measure.dottedDasharray)}break;case"--":var u=3*i;if((x=this.length(1))>=u)switch(o){case"2":r=i/2,this.drawParallelDashedCurve(e,u,r);break;case"3":r=i,this.drawParallelDashedCurve(e,u,r);var s=(x-u)/2-Math.floor((x-u)/2/u)*u,c=this.tOfLength(s);this.divide(c)[1].drawPrimitive(e,ze.measure.em2px(u)+" "+ze.measure.em2px(u));break;default:r=0;s=(x-u)/2-Math.floor((x-u)/2/u)*u,c=this.tOfLength(s);this.divide(c)[1].drawPrimitive(e,ze.measure.em2px(u)+" "+ze.measure.em2px(u))}break;case"~":switch(this.drawSquigCurve(e,o),o){case"2":r=1.5*i;break;case"3":r=2*i;break;default:r=0}break;case"~~":switch(this.drawDashSquigCurve(e,o),o){case"2":r=1.5*i;break;case"3":r=2*i;break;default:r=0}break;default:(w=new Bt).c=Bt.originPosition;var h=new vt(pt.none,w),l=n.boundingBox(h);if(null==l)return;var m,p,f=l.l,d=f+l.r;if(void 0!==t){var y=t.boundingBox(h);void 0!==y&&(m=(p=y.l)+y.r)}else m=0;var v=d+m;0==v&&(v=ze.measure.strokeWidth);var x=this.length(1);if(0==(M=Math.floor(x/v)))return;s=(x-M*v)/2,h=new vt(pt.none,w);for(var g=0;g<M;g++){P=s+g*v,void 0!==t&&(B=this.tOfLength(P+p),w.c=this.position(B),w.angle=this.angle(B),t.toDropShape(h).draw(e)),B=this.tOfLength(P+m+f),w.c=this.position(B),w.angle=this.angle(B);n.toDropShape(h).draw(e)}}}else{var w;(w=new Bt).c=Bt.originPosition;h=new vt(pt.none,w);var S=t,C=S.boundingBox(h);if(void 0===C)return;var b=C.l+C.r,k=b;0==k&&(k=ze.measure.strokeWidth);var M;x=this.length(1);if(0==(M=Math.floor(x/k)))return;for(s=(x-M*k+k-b)/2+C.l,h=new vt(pt.none,w),g=0;g<M;g++){var P=s+g*k,B=this.tOfLength(P);w.c=this.position(B),w.angle=0,S.toDropShape(h).draw(e)}}}},{key:"toShape",value:function(e,t,n){var r,i=e.env,a=ze.measure.length2em("0.15em"),o=pt.none;if(void 0!==n){var u=n.dirMain(),s=n.dirVariant();switch(u){case"=":u="-",s="2";break;case"==":u="--",s="2";break;case":":case"::":u=".",s="2"}switch(u){case"":r=0;break;case"-":case".":case"..":switch(s){case"2":r=a/2;break;case"3":r=a;break;default:r=0}break;case"--":var c=3*a;if((d=this.length(1))>=c)switch(s){case"2":r=a/2;break;case"3":r=a;break;default:r=0}break;case"~":case"~~":switch(s){case"2":r=1.5*a;break;case"3":r=2*a;break;default:r=0}break;default:var h=n.boundingBox(e);if(null==h)return i.angle=0,i.lastCurve=At.none,pt.none;r=Math.max(h.u,h.d);var l,m=h.l+h.r;if(void 0!==t){var p=t.boundingBox(e);void 0!==p&&(l=p.l+p.r,r=Math.max(r,p.u,p.d))}else l=0;var f=m+l;0==f&&(f=ze.measure.strokeWidth);var d=this.length(1);return 0==Math.floor(d/f)?(i.angle=0,i.lastCurve=At.none,pt.none):(o=new pt.CurveShape(this,t,n,this.boundingBox(r)),e.appendShapeToFront(o),o)}return void 0===r?pt.none:(o=new pt.CurveShape(this,t,n,this.boundingBox(r)),e.appendShapeToFront(o),o)}if(void 0!==t){var y=t.boundingBox(e);if(null==y)return i.angle=0,i.lastCurve=At.none,pt.none;var v=y.l+y.r;0==v&&(v=ze.measure.strokeWidth);d=this.length(1);return 0==Math.floor(d/v)?(i.angle=0,i.lastCurve=At.none,pt.none):(r=Math.max(y.u,y.d),o=new pt.CurveShape(this,t,n,this.boundingBox(r)),e.appendShapeToFront(o),o)}return o}}],[{key:"sign",value:function(e){return e>0?1:0===e?0:-1}},{key:"solutionsOfCubicEq",value:function(t,n,r,i){if(0===t)return e.solutionsOfQuadEq(n,r,i);var a=n/3/t,o=r/t,u=a*a-o/3,s=-(i/t)/2+o*a/2-a*a*a,c=s*s-u*u*u;if(0===c){var h=2*(d=Math.pow(s,1/3))-a,l=-d-a;return e.filterByIn0to1([h,l])}if(c>0){var m=s+e.sign(s)*Math.sqrt(c),p=(f=e.sign(m)*Math.pow(Math.abs(m),1/3))+(d=u/f)-a;return e.filterByIn0to1([p])}var f=2*Math.sqrt(u),d=Math.acos(2*s/u/f),y=(h=f*Math.cos(d/3)-a,l=f*Math.cos((d+2*Math.PI)/3)-a,f*Math.cos((d+4*Math.PI)/3)-a);return e.filterByIn0to1([h,l,y])}},{key:"solutionsOfQuadEq",value:function(t,n,r){if(0===t)return e.solutionsOfLinearEq(n,r);var i=n*n-4*r*t;if(i>=0){var a=Math.sqrt(i),o=(-n+a)/2/t,u=(-n-a)/2/t;return e.filterByIn0to1([o,u])}return[]}},{key:"solutionsOfLinearEq",value:function(t,n){return 0===t?0===n?0:[]:e.filterByIn0to1([-n/t])}},{key:"filterByIn0to1",value:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];r>=0&&r<=1&&t.push(r)}return t}}]),e}();Ot.QuadBezier=function(e){gt(n,e);var t=St(n);function n(e,r,i){var a;kt(this,n),(a=t.call(this)).cp0=e,a.cp1=r,a.cp2=i;var o=e.x,u=2*(r.x-e.x),s=i.x-2*r.x+e.x;a.px=function(e){return o+e*u+e*e*s},a.dpx=function(e){return u+2*e*s};var c=e.y,h=2*(r.y-e.y),l=i.y-2*r.y+e.y;return a.py=function(e){return c+e*h+e*e*l},a.dpy=function(e){return h+2*e*l},a}return Pt(n,[{key:"startPosition",value:function(){return this.cp0}},{key:"endPosition",value:function(){return this.cp2}},{key:"position",value:function(e){return new nt.Point(this.px(e),this.py(e))}},{key:"derivative",value:function(e){return new nt.Point(this.dpx(e),this.dpy(e))}},{key:"angle",value:function(e){return Math.atan2(this.dpy(e),this.dpx(e))}},{key:"boundingBox",value:function(e){var t=this.maxMin(this.cp0.x,this.cp1.x,this.cp2.x,e),n=this.maxMin(this.cp0.y,this.cp1.y,this.cp2.y,e);if(0===e)return new nt.Rect(this.cp0.x,this.cp0.y,{l:this.cp0.x-t.min,r:t.max-this.cp0.x,u:n.max-this.cp0.y,d:this.cp0.y-n.min});var r=Math.PI/2,i=this.cp0.x,a=this.cp0.y,o=this.cp2.x,u=this.cp2.y,s=this.angle(0)+r,c=this.angle(1)+r,h=e*Math.cos(s),l=e*Math.sin(s),m=e*Math.cos(c),p=e*Math.sin(c),f=Math.min(t.min,i+h,i-h,o+m,o-m),d=Math.max(t.max,i+h,i-h,o+m,o-m),y=Math.min(n.min,a+l,a-l,u+p,u-p),v=Math.max(n.max,a+l,a-l,u+p,u-p);return new nt.Rect(i,a,{l:i-f,r:d-i,u:v-a,d:a-y})}},{key:"maxMin",value:function(e,t,n,r){var i,a;e>n?(i=e,a=n):(i=n,a=e);var o,u,s=Xe,c=s(e),h=s(t-e),l=s(n-2*t+e);return 0!=l&&(u=-h/l)>0&&u<1&&(o=function(e){return c+2*e*h+e*e*l}(u),i=Math.max(i,o+r,o-r),a=Math.min(a,o+r,o-r)),{min:a,max:i}}},{key:"divide",value:function(e){if(e<0||e>1)throw new u.Z("ExecutionError","illegal quadratic Bezier parameter t:"+e);var t=this.cp0.x,n=this.cp1.x,r=this.cp2.x,i=this.cp0.y,a=this.cp1.y,o=this.cp2.y,s=this.px(e),c=this.py(e),h=this.cp0,l=new nt.Point(t+e*(n-t),i+e*(a-i)),m=new nt.Point(s,c),p=m,f=new nt.Point(n+e*(r-n),a+e*(o-a)),d=this.cp2;return[new Ot.QuadBezier(h,l,m),new Ot.QuadBezier(p,f,d)]}},{key:"slice",value:function(e,t){if(!(e>=t)){if(e<0&&(e=0),t>1&&(t=1),0===e&&1===t)return this;this.cp0.x;var n=this.cp1.x,r=this.cp2.x,i=(this.cp0.y,this.cp1.y),a=this.cp2.y,o=this.px(e),u=this.py(e),s=n+e*(r-n),c=i+e*(a-i),h=new nt.Point(o,u),l=new nt.Point(o+t*(s-o),u+t*(c-u)),m=new nt.Point(this.px(t),this.py(t));return new Ot.QuadBezier(h,l,m)}}},{key:"tOfIntersections",value:function(e){if(e.isPoint())return[];if(e.isRect()){var t,n=e.x+e.r,r=e.x-e.l,i=e.y+e.u,a=e.y-e.d,o=Xe,u=this.cp0.x,s=this.cp1.x,c=this.cp2.x,h=o(u),l=o(2*(s-u)),m=o(c-2*s+u),p=function(e){return h+e*l+e*e*m},f=this.cp0.y,d=this.cp1.y,y=this.cp2.y,v=o(f),x=o(2*(d-f)),g=o(y-2*d+f),w=function(e){return v+e*x+e*e*g},S=[];t=(t=Ot.solutionsOfQuadEq(m,l,h-n)).concat(Ot.solutionsOfQuadEq(m,l,h-r));for(var C=0;C<t.length;C++){(M=w(I=t[C]))>=a&&M<=i&&S.push(I)}t=(t=Ot.solutionsOfQuadEq(g,x,v-i)).concat(Ot.solutionsOfQuadEq(g,x,v-a));for(C=0;C<t.length;C++){(k=p(I=t[C]))>=r&&k<=n&&S.push(I)}return S}if(e.isCircle()){var b=Math.PI,k=e.x,M=e.y,P=e.l,B=e.r,O=e.u,E=e.d,A=k+(B-P)/2,L=M+(O-E)/2,j=(n=(P+B)/2,(O+E)/2),D=b/180,T=new Et.Arc(A,L,n,j,-b-D,-b/2+D),R=new Et.Arc(A,L,n,j,-b/2-D,0+D),F=new Et.Arc(A,L,n,j,0-D,b/2+D),G=new Et.Arc(A,L,n,j,b/2-D,b+D),V=new Et.QuadBezier(this,0,1),_=[];_=(_=(_=(_=_.concat(Et.findIntersections(T,V))).concat(Et.findIntersections(R,V))).concat(Et.findIntersections(F,V))).concat(Et.findIntersections(G,V));for(S=[],C=0;C<_.length;C++){var I=(_[C][1].min+_[C][1].max)/2;S.push(I)}return S}}},{key:"countOfSegments",value:function(){return 1}},{key:"drawPrimitive",value:function(e,t){var n=this.cp0,r=this.cp1,i=this.cp2;e.createSVGElement("path",{d:"M"+ze.measure.em2px(n.x)+","+ze.measure.em2px(-n.y)+" Q"+ze.measure.em2px(r.x)+","+ze.measure.em2px(-r.y)+" "+ze.measure.em2px(i.x)+","+ze.measure.em2px(-i.y),"stroke-dasharray":t})}},{key:"toString",value:function(){return"QuadBezier("+this.cp0.x+", "+this.cp0.y+")-("+this.cp1.x+", "+this.cp1.y+")-("+this.cp2.x+", "+this.cp2.y+")"}}]),n}(Ot),Ot.CubicBezier=function(e){gt(n,e);var t=St(n);function n(e,r,i,a){var o;kt(this,n),(o=t.call(this)).cp0=e,o.cp1=r,o.cp2=i,o.cp3=a;var u=e.x,s=3*(r.x-e.x),c=3*(i.x-2*r.x+e.x),h=a.x-3*i.x+3*r.x-e.x;o.px=function(e){return u+e*s+e*e*c+e*e*e*h},o.dpx=function(e){return s+2*e*c+3*e*e*h};var l=e.y,m=3*(r.y-e.y),p=3*(i.y-2*r.y+e.y),f=a.y-3*i.y+3*r.y-e.y;return o.py=function(e){return l+e*m+e*e*p+e*e*e*f},o.dpy=function(e){return m+2*e*p+3*e*e*f},o}return Pt(n,[{key:"startPosition",value:function(){return this.cp0}},{key:"endPosition",value:function(){return this.cp3}},{key:"position",value:function(e){return new nt.Point(this.px(e),this.py(e))}},{key:"derivative",value:function(e){return new nt.Point(this.dpx(e),this.dpy(e))}},{key:"angle",value:function(e){return Math.atan2(this.dpy(e),this.dpx(e))}},{key:"boundingBox",value:function(e){var t=this.maxMin(this.cp0.x,this.cp1.x,this.cp2.x,this.cp3.x,e),n=this.maxMin(this.cp0.y,this.cp1.y,this.cp2.y,this.cp3.y,e);if(0===e)return new nt.Rect(this.cp0.x,this.cp0.y,{l:this.cp0.x-t.min,r:t.max-this.cp0.x,u:n.max-this.cp0.y,d:this.cp0.y-n.min});var r=Math.PI/2,i=this.cp0.x,a=this.cp0.y,o=this.cp3.x,u=this.cp3.y,s=this.angle(0)+r,c=this.angle(1)+r,h=e*Math.cos(s),l=e*Math.sin(s),m=e*Math.cos(c),p=e*Math.sin(c),f=Math.min(t.min,i+h,i-h,o+m,o-m),d=Math.max(t.max,i+h,i-h,o+m,o-m),y=Math.min(n.min,a+l,a-l,u+p,u-p),v=Math.max(n.max,a+l,a-l,u+p,u-p);return new nt.Rect(i,a,{l:i-f,r:d-i,u:v-a,d:a-y})}},{key:"maxMin",value:function(e,t,n,r,i){var a,o;e>r?(a=e,o=r):(a=r,o=e);var u,s=Xe,c=s(e),h=s(t-e),l=s(n-2*t+e),m=s(r-3*n+3*t-e),p=function(e){e>0&&e<1&&(u=function(e){return c+3*e*h+3*e*e*l+e*e*e*m}(e),a=Math.max(a,u+i,u-i),o=Math.min(o,u+i,u-i))};if(0==m)0!=l&&p(-h/l/2);else{var f=l*l-h*m;f>0?(p((-l+Math.sqrt(f))/m),p((-l-Math.sqrt(f))/m)):0==f&&p(-l/m)}return{min:o,max:a}}},{key:"divide",value:function(e){if(e<0||e>1)throw new u.Z("ExecutionError","illegal cubic Bezier parameter t:"+e);var t=this.cp0.x,n=this.cp1.x,r=this.cp2.x,i=this.cp3.x,a=this.cp0.y,o=this.cp1.y,s=this.cp2.y,c=this.cp3.y,h=this.px(e),l=this.py(e),m=this.cp0,p=new nt.Point(t+e*(n-t),a+e*(o-a)),f=new nt.Point(t+2*e*(n-t)+e*e*(r-2*n+t),a+2*e*(o-a)+e*e*(s-2*o+a)),d=new nt.Point(h,l),y=d,v=new nt.Point(n+2*e*(r-n)+e*e*(i-2*r+n),o+2*e*(s-o)+e*e*(c-2*s+o)),x=new nt.Point(r+e*(i-r),s+e*(c-s)),g=this.cp3;return[new Ot.CubicBezier(m,p,f,d),new Ot.CubicBezier(y,v,x,g)]}},{key:"slice",value:function(e,t){if(!(e>=t)){if(e<0&&(e=0),t>1&&(t=1),0===e&&1===t)return this;this.cp0.x;var n=this.cp1.x,r=this.cp2.x,i=this.cp3.x,a=(this.cp0.y,this.cp1.y),o=this.cp2.y,u=this.cp3.y,s=this.px(e),c=this.py(e),h=n+2*e*(r-n)+e*e*(i-2*r+n),l=a+2*e*(o-a)+e*e*(u-2*o+a),m=r+e*(i-r),p=o+e*(u-o),f=new nt.Point(s,c),d=new nt.Point(s+t*(h-s),c+t*(l-c)),y=new nt.Point(s+2*t*(h-s)+t*t*(m-2*h+s),c+2*t*(l-c)+t*t*(p-2*l+c)),v=new nt.Point(this.px(t),this.py(t));return new Ot.CubicBezier(f,d,y,v)}}},{key:"tOfIntersections",value:function(e){if(e.isPoint())return[];if(e.isRect()){var t,n=e.x+e.r,r=e.x-e.l,i=e.y+e.u,a=e.y-e.d,o=Xe,u=this.cp0.x,s=this.cp1.x,c=this.cp2.x,h=this.cp3.x,l=this.cp0.y,m=this.cp1.y,p=this.cp2.y,f=this.cp3.y,d=o(u),y=o(3*(s-u)),v=o(3*(c-2*s+u)),x=o(h-3*c+3*s-u),g=function(e){return d+e*y+e*e*v+e*e*e*x},w=o(l),S=o(3*(m-l)),C=o(3*(p-2*m+l)),b=o(f-3*p+3*m-l),k=function(e){return w+e*S+e*e*C+e*e*e*b},M=[];t=(t=Ot.solutionsOfCubicEq(x,v,y,d-n)).concat(Ot.solutionsOfCubicEq(x,v,y,d-r));for(var P=0;P<t.length;P++){(E=k(X=t[P]))>=a&&E<=i&&M.push(X)}t=(t=Ot.solutionsOfCubicEq(b,C,S,w-i)).concat(Ot.solutionsOfCubicEq(b,C,S,w-a));for(P=0;P<t.length;P++){(O=g(X=t[P]))>=r&&O<=n&&M.push(X)}return M}if(e.isCircle()){var B=Math.PI,O=e.x,E=e.y,A=e.l,L=e.r,j=e.u,D=e.d,T=O+(L-A)/2,R=E+(j-D)/2,F=(n=(A+L)/2,(j+D)/2),G=B/180,V=new Et.Arc(T,R,n,F,-B-G,-B/2+G),_=new Et.Arc(T,R,n,F,-B/2-G,0+G),I=new Et.Arc(T,R,n,F,0-G,B/2+G),z=new Et.Arc(T,R,n,F,B/2-G,B+G),Q=new Et.CubicBezier(this,0,1),N=[];N=(N=(N=(N=N.concat(Et.findIntersections(V,Q))).concat(Et.findIntersections(_,Q))).concat(Et.findIntersections(I,Q))).concat(Et.findIntersections(z,Q));for(M=[],P=0;P<N.length;P++){var X=(N[P][1].min+N[P][1].max)/2;M.push(X)}return M}}},{key:"countOfSegments",value:function(){return 1}},{key:"drawPrimitive",value:function(e,t){var n=this.cp0,r=this.cp1,i=this.cp2,a=this.cp3;e.createSVGElement("path",{d:"M"+ze.measure.em2px(n.x)+","+ze.measure.em2px(-n.y)+" C"+ze.measure.em2px(r.x)+","+ze.measure.em2px(-r.y)+" "+ze.measure.em2px(i.x)+","+ze.measure.em2px(-i.y)+" "+ze.measure.em2px(a.x)+","+ze.measure.em2px(-a.y),"stroke-dasharray":t})}},{key:"toString",value:function(){return"CubicBezier("+this.cp0.x+", "+this.cp0.y+")-("+this.cp1.x+", "+this.cp1.y+")-("+this.cp2.x+", "+this.cp2.y+")-("+this.cp3.x+", "+this.cp3.y+")"}}]),n}(Ot),Ot.CubicBeziers=function(e){gt(n,e);var t=St(n);function n(e){var r;kt(this,n),(r=t.call(this)).cbs=e;var i=r.cbs.length;return r.delegate=0==i?function(e,t,n){return n}:function(t,n,r){var a=t*i,o=Math.floor(a);o<0&&(o=0),o>=i&&(o=i-1);var u=a-o;return n(e[o],u)},r}return Pt(n,[{key:"startPosition",value:function(){return this.cbs[0].cp0}},{key:"endPosition",value:function(){return this.cbs[this.cbs.length-1].cp3}},{key:"position",value:function(e){return this.delegate(e,(function(e,t){return e.position(t)}),void 0)}},{key:"derivative",value:function(e){return this.delegate(e,(function(e,t){return e.derivative(t)}),void 0)}},{key:"angle",value:function(e){return this.delegate(e,(function(e,t){return e.angle(t)}),0)}},{key:"velocity",value:function(e){var t=this.cbs.length;return this.delegate(e,(function(e,n){return t*e.velocity(n)}),0)}},{key:"boundingBox",value:function(e){if(0!=this.cbs.length){var t,n=this.cbs[0].boundingBox(e),r=this.cbs.length;for(t=1;t<r;t++)n=n.combineRect(this.cbs[t].boundingBox(e));return n}}},{key:"tOfIntersections",value:function(e){var t=[],n=0,r=this.cbs.length;for(n=0;n<r;n++)for(var i=this.cbs[n].tOfIntersections(e),a=0;a<i.length;a++)t.push((i[a]+n)/r);return t}},{key:"divide",value:function(e){if(e<0||e>1)throw new u.Z("ExecutionError","illegal cubic Bezier parameter t:"+e);if(0===e)return[new Ot.CubicBeziers([]),this];if(1===e)return[this,new Ot.CubicBeziers([])];var t=this.cbs.length,n=e*t,r=Math.floor(n);r===t&&(r=t-1);var i=n-r,a=this.cbs.slice(0,r),o=this.cbs.slice(r+1),s=this.cbs[r].divide(i);return a.push(s[0]),o.unshift(s[1]),[new Ot.CubicBeziers(a),new Ot.CubicBeziers(o)]}},{key:"slice",value:function(e,t){if(!(e>=t)){if(e<0&&(e=0),t>1&&(t=1),0===e&&1===t)return this;var n=this.cbs.length,r=e*n,i=t*n,a=Math.floor(r),o=Math.floor(i);a===n&&(a=n-1),o===n&&(o=n-1);var u,s=r-a,c=i-o;return a===o?u=[this.cbs[a].slice(s,c)]:((u=this.cbs.slice(a+1,o)).push(this.cbs[o].slice(0,c)),u.unshift(this.cbs[a].slice(s,1))),new Ot.CubicBeziers(u)}}},{key:"countOfSegments",value:function(){return this.cbs.length}},{key:"drawPrimitive",value:function(e,t){for(var n=this.cbs.length,r=this.cbs,i=r[0],a=i.cp0,o=i.cp1,u=i.cp2,s=i.cp3,c="M"+ze.measure.em2px(a.x)+","+ze.measure.em2px(-a.y)+" C"+ze.measure.em2px(o.x)+","+ze.measure.em2px(-o.y)+" "+ze.measure.em2px(u.x)+","+ze.measure.em2px(-u.y)+" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y),h=1;h<n;h++)u=(i=r[h]).cp2,s=i.cp3,c+=" S"+ze.measure.em2px(u.x)+","+ze.measure.em2px(-u.y)+" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y);e.createSVGElement("path",{d:c,"stroke-dasharray":t})}},{key:"drawSkipped",value:function(e){for(var t=this.cbs.length,n=this.cbs,r="",i=0;i<t;i+=2){var a=n[i],o=a.cp0,u=a.cp1,s=a.cp2,c=a.cp3;r+="M"+ze.measure.em2px(o.x)+","+ze.measure.em2px(-o.y)+" C"+ze.measure.em2px(u.x)+","+ze.measure.em2px(-u.y)+" "+ze.measure.em2px(s.x)+","+ze.measure.em2px(-s.y)+" "+ze.measure.em2px(c.x)+","+ze.measure.em2px(-c.y)}e.createSVGElement("path",{d:r})}}],[{key:"interpolation",value:function(e,t,n){var r,i=Ot.CubicBeziers.cubicSplineInterpolation(e,t),a=i[0],o=i[1],u=Ot.CubicBeziers.cubicSplineInterpolation(e,n),s=u[0],c=u[1],h=e.length,l=new Array(h-1);for(r=0;r<h-1;r++)l[r]=new Ot.CubicBezier(new nt.Point(t[r],n[r]),new nt.Point(a[r],s[r]),new nt.Point(o[r],c[r]),new nt.Point(t[r+1],n[r+1]));return new Ot.CubicBeziers(l)}},{key:"cubicSplineInterpolation",value:function(e,t){var n,r=e.length-1,i=new Array(r);for(n=0;n<r;n++)i[n]=e[n+1]-e[n];var a=new Array(r);for(n=1;n<r;n++)a[n]=3*(t[n+1]-t[n])/i[n]-3*(t[n]-t[n-1])/i[n-1];var o=new Array(r+1),u=new Array(r+1),s=new Array(r+1);for(o[0]=1,u[0]=0,s[0]=0,n=1;n<r;n++)o[n]=2*(e[n+1]-e[n-1])-i[n-1]*u[n-1],u[n]=i[n]/o[n],s[n]=(a[n]-i[n-1]*s[n-1])/o[n];o[r]=1,s[r]=0;var c=new Array(r),h=new Array(r+1);for(h[r]=0,n=r-1;n>=0;n--){var l=i[n],m=h[n+1],p=l*l*s[n]-u[n]*m;h[n]=p,c[n]=t[n+1]-t[n]-(m+2*p)/3}var f=new Array(r),d=new Array(r);for(n=0;n<r;n++){var y=t[n],v=c[n],x=h[n];f[n]=y+v/3,d[n]=y+(2*v+x)/3}return[f,d]}}]),n}(Ot),Ot.CubicBSpline=function(){function e(t,n,r){if(kt(this,e),n.length<1)throw new u.Z("ExecutionError","the number of internal control points of cubic B-spline must be greater than or equal to 1");var i=[];i.push(t);for(var a=0,o=n.length;a<o;a++)i.push(n[a]);i.push(r),this.cps=i;var s=this.cps.length-1,c=function(e){return e<0?i[0]:e>s?i[s]:i[e]},h=function(e){var t=Math.abs(e);return t<=1?(3*t*t*t-6*t*t+4)/6:t<=2?-(t-2)*(t-2)*(t-2)/6:0};this.px=function(e){for(var t=(s+2)*e-1,n=Math.ceil(t-2),r=Math.floor(t+2),i=0,a=n;a<=r;a++)i+=h(t-a)*c(a).x;return i},this.py=function(e){for(var t=(s+2)*e-1,n=Math.ceil(t-2),r=Math.floor(t+2),i=0,a=n;a<=r;a++)i+=h(t-a)*c(a).y;return i};var l=function(e){var t=e>0?1:e<0?-1:0,n=Math.abs(e);return n<=1?t*(3*n*n-4*n)/2:n<=2?-t*(n-2)*(n-2)/2:0};this.dpx=function(e){for(var t=(s+2)*e-1,n=Math.ceil(t-2),r=Math.floor(t+2),i=0,a=n;a<=r;a++)i+=l(t-a)*c(a).x;return i},this.dpy=function(e){for(var t=(s+2)*e-1,n=Math.ceil(t-2),r=Math.floor(t+2),i=0,a=n;a<=r;a++)i+=l(t-a)*c(a).y;return i}}return Pt(e,[{key:"position",value:function(e){return new nt.Point(this.px(e),this.py(e))}},{key:"angle",value:function(e){return Math.atan2(this.dpy(e),this.dpx(e))}},{key:"toCubicBeziers",value:function(){var e=[],t=this.cps,n=t[0],r=t[1],i=t[2],a=n.x,o=n.y,u=a+(r.x-a)/3,s=o+(r.y-o)/3,c=a+2*(r.x-a)/3,h=o+2*(r.y-o)/3,l=r.x+(i.x-r.x)/3,m=r.y+(i.y-r.y)/3,p=(c+l)/2,f=(h+m)/2,d=n,y=new nt.Point(u,s),v=new nt.Point(c,h),x=new nt.Point(p,f),g=new Ot.CubicBezier(d,y,v,x);e.push(g);for(var w=this.cps.length-1,S=2;S<w;S++)n=r,r=i,i=t[S+1],a=p,o=f,u=2*p-c,s=2*f-h,c=n.x+2*(r.x-n.x)/3,h=n.y+2*(r.y-n.y)/3,p=(c+(l=r.x+(i.x-r.x)/3))/2,f=(h+(m=r.y+(i.y-r.y)/3))/2,d=x,y=new nt.Point(u,s),v=new nt.Point(c,h),x=new nt.Point(p,f),g=new Ot.CubicBezier(d,y,v,x),e.push(g);return n=r,r=i,a=p,o=f,u=2*p-c,s=2*f-h,c=n.x+2*(r.x-n.x)/3,h=n.y+2*(r.y-n.y)/3,p=r.x,f=r.y,d=x,y=new nt.Point(u,s),v=new nt.Point(c,h),x=new nt.Point(p,f),g=new Ot.CubicBezier(d,y,v,x),e.push(g),e}},{key:"countOfSegments",value:function(){return this.cps.length-1}}]),e}(),Ot.Line=function(){function e(t,n){kt(this,e),this.s=t,this.e=n}return Pt(e,[{key:"position",value:function(e){return new nt.Point(this.s.x+e*(this.e.x-this.s.x),this.s.y+e*(this.e.y-this.s.y))}},{key:"slice",value:function(e,t){if(!(e>=t)){if(e<0&&(e=0),t>1&&(t=1),0===e&&1===t)return this;var n=this.s,r=this.e,i=r.x-n.x,a=r.y-n.y,o=new nt.Point(n.x+e*i,n.y+e*a),u=new nt.Point(n.x+t*i,n.y+t*a);return new Ot.Line(o,u)}}},{key:"tOfIntersections",value:function(e){if(e.isPoint())return[];var t=this.s,n=this.e;if(e.isRect()){var r,i=e.x+e.r,a=e.x-e.l,o=e.y+e.u,u=e.y-e.d,s=t.x,c=t.y,h=n.x-s,l=n.y-c,m=function(e){return s+e*h},p=function(e){return c+e*l},f=[];r=(r=Ot.solutionsOfLinearEq(h,s-i)).concat(Ot.solutionsOfLinearEq(h,s-a));for(var d=0;d<r.length;d++){var y=p(v=r[d]);y>=u&&y<=o&&f.push(v)}r=(r=Ot.solutionsOfLinearEq(l,c-o)).concat(Ot.solutionsOfLinearEq(l,c-u));for(d=0;d<r.length;d++){var v,x=m(v=r[d]);x>=a&&x<=i&&f.push(v)}return f}if(e.isCircle()){Math.PI;var g=e.l,w=e.r,S=e.u,C=e.d,b=e.x+(w-g)/2,k=e.y+(S-C)/2,M=(i=(g+w)/2,(S+C)/2),P=t.x,B=t.y,O=n.x-P,E=-O,A=(u=n.y-B)*i,L=E*M,j=A*A+L*L,D=(n=-(C=A*b+L*k+((O*B-u*P)*i+(i-M)*E*k))/j,j*i*i-C*C);if(D<0)return[];var T,R,F=Math.sqrt(D)/j,G=M/i,V=A*n+L*F+b,_=G*(L*n-A*F+k-k)+k,I=A*n-L*F+b,z=G*(L*n+A*F+k-k)+k;Math.abs(O)>Math.abs(u)?(T=(V-P)/O,R=(I-P)/O):(T=(_-B)/u,R=(z-B)/u);f=[];return T>=0&&T<=1&&f.push(T),R>=0&&R<=1&&f.push(R),f}}},{key:"toShape",value:function(e,t,n,r){var i=e.env,a=ze.measure.thickness,o=this.s,u=this.e;if(o.x!==u.x||o.y!==u.y){var s,c=u.x-o.x,h=u.y-o.y,l=Math.atan2(h,c),m=pt.none;switch(n){case"=":n="-",r="2";break;case"==":n="--",r="2";break;case":":case"::":n=".",r="2"}switch(n){case"":return i.angle=l,i.lastCurve=new At.Line(o,u,i.p,i.c,void 0),m;case"-":case".":case"..":switch(r){case"2":s=a/2;break;case"3":s=a;break;default:s=0}break;case"--":var p=3*a;if((y=Math.sqrt(c*c+h*h))>=p)switch(r){case"2":s=a/2;break;case"3":s=a;break;default:s=0}break;case"~":case"~~":switch(r){case"2":s=1.5*a;break;case"3":s=2*a;break;default:s=0}break;default:var f=t.boundingBox(e);if(null==f)return i.angle=0,i.lastCurve=At.none,pt.none;var d=f.l+f.r;0==d&&(d=ze.measure.strokeWidth);var y=Math.sqrt(c*c+h*h);if(0==Math.floor(y/d))return i.angle=0,i.lastCurve=At.none,pt.none;s=Math.max(f.u,f.d)}if(void 0!==s){var v=this.boundingBox(s);return m=new pt.LineShape(this,t,n,r,v),e.appendShapeToFront(m),i.angle=l,i.lastCurve=new At.Line(o,u,i.p,i.c,m),m}}return i.angle=0,i.lastCurve=At.none,pt.none}},{key:"boundingBox",value:function(e){var t=this.s,n=this.e,r=n.x-t.x,i=n.y-t.y,a=Math.atan2(i,r),o=e*Math.cos(a+Math.PI/2),u=e*Math.sin(a+Math.PI/2);return new nt.Rect(t.x,t.y,{l:t.x-Math.min(t.x+o,t.x-o,n.x+o,n.x-o),r:Math.max(t.x+o,t.x-o,n.x+o,n.x-o)-t.x,u:Math.max(t.y+u,t.y-u,n.y+u,n.y-u)-t.y,d:t.y-Math.min(t.y+u,t.y-u,n.y+u,n.y-u)})}},{key:"drawLine",value:function(e,t,n,r,i){if(i.isEmpty)this._drawLine(e,t,n,r);else{var a=new dt(0,1).differenceRanges(i),o=this;a.foreach((function(i){o.slice(i.start,i.end)._drawLine(e,t,n,r)}))}}},{key:"_drawLine",value:function(e,t,n,r){var i=ze.measure.thickness,a=this.s,o=this.e;if(a.x!==o.x||a.y!==o.y){var u=o.x-a.x,s=o.y-a.y,c=Math.atan2(s,u),h={x:0,y:0};switch(n){case"":break;case"-":this.drawStraightLine(e,a,o,h,c,i,r,"");break;case"=":this.drawStraightLine(e,a,o,h,c,i,"2","");break;case".":case"..":this.drawStraightLine(e,a,o,h,c,i,r,ze.measure.dottedDasharray);break;case":":case"::":this.drawStraightLine(e,a,o,h,c,i,"2",ze.measure.dottedDasharray);break;case"--":case"==":var l=3*i;if((P=Math.sqrt(u*u+s*s))>=l)h={x:(B=(P-l)/2-Math.floor((P-l)/2/l)*l)*Math.cos(c),y:B*Math.sin(c)},this.drawStraightLine(e,a,o,h,c,i,"=="===n?"2":r,ze.measure.em2px(l)+" "+ze.measure.em2px(l));break;case"~":if((P=Math.sqrt(u*u+s*s))>=(w=4*i)){h={x:(B=(P-(M=Math.floor(P/w))*w)/2)*Math.cos(c),y:B*Math.sin(c)};for(var m=i*Math.cos(c+Math.PI/2),p=i*Math.sin(c+Math.PI/2),f=i*Math.cos(c),d=i*Math.sin(c),y=a.x+h.x,v=-a.y-h.y,x="M"+ze.measure.em2px(y)+","+ze.measure.em2px(v)+" Q"+ze.measure.em2px(y+f+m)+","+ze.measure.em2px(v-d-p)+" "+ze.measure.em2px(y+2*f)+","+ze.measure.em2px(v-2*d)+" T"+ze.measure.em2px(y+4*f)+","+ze.measure.em2px(v-4*d),g=1;g<M;g++)x+=" T"+ze.measure.em2px(y+(4*g+2)*f)+","+ze.measure.em2px(v-(4*g+2)*d)+" T"+ze.measure.em2px(y+(4*g+4)*f)+","+ze.measure.em2px(v-(4*g+4)*d);this.drawSquigglyLineShape(e,x,a,o,m,p,r)}break;case"~~":var w;if((P=Math.sqrt(u*u+s*s))>=(w=4*i)){h={x:(B=(P-w)/2-(M=Math.floor((P-w)/2/w))*w)*Math.cos(c),y:B*Math.sin(c)};for(m=i*Math.cos(c+Math.PI/2),p=i*Math.sin(c+Math.PI/2),f=i*Math.cos(c),d=i*Math.sin(c),y=a.x+h.x,v=-a.y-h.y,x="",g=0;g<=M;g++)x+=" M"+ze.measure.em2px(y+8*g*f)+","+ze.measure.em2px(v-8*g*d)+" Q"+ze.measure.em2px(y+(8*g+1)*f+m)+","+ze.measure.em2px(v-(8*g+1)*d-p)+" "+ze.measure.em2px(y+(8*g+2)*f)+","+ze.measure.em2px(v-(8*g+2)*d)+" T"+ze.measure.em2px(y+(8*g+4)*f)+","+ze.measure.em2px(v-(8*g+4)*d);this.drawSquigglyLineShape(e,x,a,o,m,p,r)}break;default:var S=new Bt;S.c=Bt.originPosition;var C=new vt(pt.none,S),b=t.boundingBox(C);if(null==b)return;var k=b.l+b.r;0==k&&(k=ze.measure.strokeWidth);var M,P=Math.sqrt(u*u+s*s);if(0==(M=Math.floor(P/k)))return;var B=(P-M*k)/2,O=Math.cos(c),E=Math.sin(c),A=k*O,L=k*E,j=a.x+(B+b.l)*O,D=a.y+(B+b.l)*E;for(C=new vt(pt.none,S),g=0;g<M;g++)S.c=new nt.Point(j+g*A,D+g*L),S.angle=c,t.toDropShape(C).draw(e)}}}},{key:"drawStraightLine",value:function(e,t,n,r,i,a,o,u){if("3"===o){var s=a*Math.cos(i+Math.PI/2),c=a*Math.sin(i+Math.PI/2);e.createSVGElement("line",{x1:ze.measure.em2px(t.x+r.x),y1:-ze.measure.em2px(t.y+r.y),x2:ze.measure.em2px(n.x),y2:-ze.measure.em2px(n.y),"stroke-dasharray":u}),e.createSVGElement("line",{x1:ze.measure.em2px(t.x+s+r.x),y1:-ze.measure.em2px(t.y+c+r.y),x2:ze.measure.em2px(n.x+s),y2:-ze.measure.em2px(n.y+c),"stroke-dasharray":u}),e.createSVGElement("line",{x1:ze.measure.em2px(t.x-s+r.x),y1:-ze.measure.em2px(t.y-c+r.y),x2:ze.measure.em2px(n.x-s),y2:-ze.measure.em2px(n.y-c),"stroke-dasharray":u})}else if("2"===o){s=a*Math.cos(i+Math.PI/2)/2,c=a*Math.sin(i+Math.PI/2)/2;e.createSVGElement("line",{x1:ze.measure.em2px(t.x+s+r.x),y1:-ze.measure.em2px(t.y+c+r.y),x2:ze.measure.em2px(n.x+s),y2:-ze.measure.em2px(n.y+c),"stroke-dasharray":u}),e.createSVGElement("line",{x1:ze.measure.em2px(t.x-s+r.x),y1:-ze.measure.em2px(t.y-c+r.y),x2:ze.measure.em2px(n.x-s),y2:-ze.measure.em2px(n.y-c),"stroke-dasharray":u})}else e.createSVGElement("line",{x1:ze.measure.em2px(t.x+r.x),y1:-ze.measure.em2px(t.y+r.y),x2:ze.measure.em2px(n.x),y2:-ze.measure.em2px(n.y),"stroke-dasharray":u})}},{key:"drawSquigglyLineShape",value:function(e,t,n,r,i,a,o){"3"===o?(e.createSVGElement("path",{d:t}),e.createGroup(e.transformBuilder().translate(i,a)).createSVGElement("path",{d:t}),e.createGroup(e.transformBuilder().translate(-i,-a)).createSVGElement("path",{d:t})):"2"===o?(e.createGroup(e.transformBuilder().translate(i/2,a/2)).createSVGElement("path",{d:t}),e.createGroup(e.transformBuilder().translate(-i/2,-a/2)).createSVGElement("path",{d:t})):e.createSVGElement("path",{d:t})}}]),e}();var Et=function(){function e(){kt(this,e)}return Pt(e,[{key:"bezierFatLine",value:function(e){var t,n,r,i,a=this.cps[0],o=this.cps[e];if(a.x!==o.x||a.y!==o.y)t=a.y-o.y,n=o.x-a.x,t/=i=Math.sqrt(t*t+n*n),n/=i,r=(a.x*o.y-a.y*o.x)/i;else{var u=this.bezier.angle(this.tmin);t=-Math.sin(u),n=Math.cos(u),r=-t*this.cp0.x-n*this.cp0.y}for(var s=r,c=r,h=1;h<e;h++){var l=-t*this.cps[h].x-n*this.cps[h].y;l>c?c=l:l<s&&(s=l)}return{min:[t,n,s],max:[t,n,c]}}},{key:"clippedLineRange",value:function(e,t,n){for(var r,i,a,o,u,s=e.length-1,c=new Array(s+1),h=Qe,l=0;l<=s;l++)c[l]=[l/s,-t[0]*e[l].x-t[1]*e[l].y-t[2],1];if(c[0][1]<0){var m=!0;for(l=1;l<=s;l++){(r=-(f=h(c[0],c[l]))[2]/f[0])>0&&r<1&&(void 0===i||r<i)&&(i=r),c[l][1]>=0&&(m=!1)}if(m)return}else i=0;if(c[s][1]<0)for(l=0;l<s;l++){(r=-(d=h(c[s],c[l]))[2]/d[0])>0&&r<1&&(void 0===a||r>a)&&(a=r)}else a=1;for(l=0;l<=s;l++)c[l]=[l/s,n[0]*e[l].x+n[1]*e[l].y+n[2],1];if(c[0][1]<0){var p=!0;for(l=1;l<=s;l++){var f;(r=-(f=h(c[0],c[l]))[2]/f[0])>0&&r<1&&(void 0===o||r<o)&&(o=r),c[l][1]>=0&&(p=!1)}if(p)return}else o=0;if(c[s][1]<0)for(l=0;l<s;l++){var d;(r=-(d=h(c[s],c[l]))[2]/d[0])>0&&r<1&&(void 0===u||r>u)&&(u=r)}else u=1;var y=Math.max(i,o),v=Math.min(a,u);return{min:this.tmin+y*(this.tmax-this.tmin),max:this.tmin+v*(this.tmax-this.tmin)}}}],[{key:"findIntersections",value:function(t,n){for(var r=e.maxIterations,i=e.goalAccuracy,a=[[t,n,!1]],o=0,u=[];o<r&&a.length>0;){o++;var s=a.shift(),c=(t=s[0],n=s[1],s[2]),h=t.fatLine(),l=n.clippedRange(h.min,h.max);if(null!=l){var m=l.min,p=l.max,f=p-m;if(f<i&&t.paramLength()<i)c?u.push([n.clip(m,p).paramRange(),t.paramRange()]):u.push([t.paramRange(),n.clip(m,p).paramRange()]);else if(f<=.8*n.paramLength())a.push([n.clip(m,p),t,!c]);else if(f>t.paramLength()){var d=(p+m)/2;a.push([n.clip(m,d),t,!c]),a.push([n.clip(d,p),t,!c])}else{var y=n.clip(m,p),v=t.paramRange(),x=(v.min+v.max)/2;a.push([y,t.clip(v.min,x),!c]),a.push([y,t.clip(x,v.max),!c])}}}return u}},{key:"maxIterations",get:function(){return 30}},{key:"goalAccuracy",get:function(){return 1e-4}}]),e}();Et.Line=function(e){gt(n,e);var t=St(n);function n(e,r,i,a){var o;return kt(this,n),(o=t.call(this)).p0=e,o.p1=r,o.tmin=i,o.tmax=a,o}return Pt(n,[{key:"paramRange",value:function(){return{min:this.tmin,max:this.tmax}}},{key:"paramLength",value:function(){return this.tmax-this.tmin}},{key:"containsParam",value:function(e){return e>=this.tmin&&e<=this.tmax}},{key:"position",value:function(e){return{x:this.p0.x+e*(this.p1.x-this.p0.x),y:this.p0.y+e*(this.p1.y-this.p0.y)}}},{key:"fatLine",value:function(){var e=this.p1.y-this.p0.y,t=this.p0.x-this.p1.x,n=this.p1.x*this.p0.y-this.p0.x*this.p1.y,r=Math.sqrt(e*e+t*t);return 0===r?(e=1,t=0):(e/=r,t/=r,n/=r),{min:[e,t,n],max:[e,t,n]}}},{key:"clip",value:function(e,t){return new Et.Line(this.p0,this.p1,e,t)}},{key:"clippedRange",value:function(e,t){var n=new Array(2);return n[0]=this.position(this.tmin),n[1]=this.position(this.tmax),this.clippedLineRange(n,e,t)}},{key:"drawFatLine",value:function(){this.fatLine().min;var e=function(e,t){return-(e*t[0]+t[2])/t[1]},t=this.p0.x,n=this.p1.x;ze.svgForDebug.createSVGElement("line",{x1:ze.measure.em2px(t),y1:-ze.measure.em2px(e(t,lmax)),x2:ze.measure.em2px(n),y2:-ze.measure.em2px(e(n,lmax)),"stroke-width":ze.measure.em2px(.02*ze.measure.oneem),stroke:"red"})}}]),n}(Et),Et.QuadBezier=function(e){gt(n,e);var t=St(n);function n(e,r,i){var a;return kt(this,n),(a=t.call(this)).bezier=e,a.tmin=r,a.tmax=i,a.cp0=e.position(r),a.cp1=new nt.Point((1-i)*(1-r)*e.cp0.x+(r+i-2*r*i)*e.cp1.x+r*i*e.cp2.x,(1-i)*(1-r)*e.cp0.y+(r+i-2*r*i)*e.cp1.y+r*i*e.cp2.y),a.cp2=e.position(i),a.cps=[a.cp0,a.cp1,a.cp2],a}return Pt(n,[{key:"paramRange",value:function(){return{min:this.tmin,max:this.tmax}}},{key:"paramLength",value:function(){return this.tmax-this.tmin}},{key:"fatLine",value:function(){return this.bezierFatLine(2)}},{key:"clip",value:function(e,t){return new Et.QuadBezier(this.bezier,e,t)}},{key:"clippedRange",value:function(e,t){return this.clippedLineRange(this.cps,e,t)}},{key:"drawFatLine",value:function(){var e=this.fatLine(),t=e.min,n=e.max,r=function(e,t){return-(e*t[0]+t[2])/t[1]},i=this.cp0.x,a=this.cp2.x;ze.svgForDebug.createSVGElement("line",{x1:ze.measure.em2px(i),y1:-ze.measure.em2px(r(i,t)),x2:ze.measure.em2px(a),y2:-ze.measure.em2px(r(a,t)),"stroke-width":ze.measure.em2px(.02*ze.measure.oneem),stroke:"blue"}),ze.svgForDebug.createSVGElement("line",{x1:ze.measure.em2px(i),y1:-ze.measure.em2px(r(i,n)),x2:ze.measure.em2px(a),y2:-ze.measure.em2px(r(a,n)),"stroke-width":ze.measure.em2px(.02*ze.measure.oneem),stroke:"red"})}}]),n}(Et),Et.CubicBezier=function(e){gt(n,e);var t=St(n);function n(e,r,i){var a;return kt(this,n),(a=t.call(this)).bezier=e,a.tmin=r,a.tmax=i,a.cp0=e.position(r),a.cp1=new nt.Point((1-i)*(1-r)*(1-r)*e.cp0.x+(1-r)*(2*r+i-3*r*i)*e.cp1.x+r*(2*i+r-3*r*i)*e.cp2.x+r*r*i*e.cp3.x,(1-i)*(1-r)*(1-r)*e.cp0.y+(1-r)*(2*r+i-3*r*i)*e.cp1.y+r*(2*i+r-3*r*i)*e.cp2.y+r*r*i*e.cp3.y),a.cp2=new nt.Point((1-r)*(1-i)*(1-i)*e.cp0.x+(1-i)*(2*i+r-3*r*i)*e.cp1.x+i*(2*r+i-3*r*i)*e.cp2.x+r*i*i*e.cp3.x,(1-r)*(1-i)*(1-i)*e.cp0.y+(1-i)*(2*i+r-3*r*i)*e.cp1.y+i*(2*r+i-3*r*i)*e.cp2.y+r*i*i*e.cp3.y),a.cp3=e.position(i),a.cps=[a.cp0,a.cp1,a.cp2,a.cp3],a}return Pt(n,[{key:"paramRange",value:function(){return{min:this.tmin,max:this.tmax}}},{key:"paramLength",value:function(){return this.tmax-this.tmin}},{key:"fatLine",value:function(){return this.bezierFatLine(3)}},{key:"clip",value:function(e,t){return new Et.CubicBezier(this.bezier,e,t)}},{key:"clippedRange",value:function(e,t){return this.clippedLineRange(this.cps,e,t)}},{key:"drawFatLine",value:function(){var e=this.fatLine(),t=e.min,n=e.max,r=function(e,t){return-(e*t[0]+t[2])/t[1]},i=this.cp0.x,a=this.cp3.x;ze.svgForDebug.createSVGElement("line",{x1:ze.measure.em2px(i),y1:-ze.measure.em2px(r(i,t)),x2:ze.measure.em2px(a),y2:-ze.measure.em2px(r(a,t)),"stroke-width":ze.measure.em2px(.02*ze.measure.oneem),stroke:"blue"}),ze.svgForDebug.createSVGElement("line",{x1:ze.measure.em2px(i),y1:-ze.measure.em2px(r(i,n)),x2:ze.measure.em2px(a),y2:-ze.measure.em2px(r(a,n)),"stroke-width":ze.measure.em2px(.02*ze.measure.oneem),stroke:"red"})}}]),n}(Et),Et.Arc=function(e){gt(n,e);var t=St(n);function n(e,r,i,a,o,u){var s;return kt(this,n),(s=t.call(this)).x=e,s.y=r,s.rx=i,s.ry=a,s.angleMin=o,s.angleMax=u,s}return Pt(n,[{key:"paramRange",value:function(){return{min:this.angleMin,max:this.angleMax}}},{key:"paramLength",value:function(){return this.angleMax-this.angleMin}},{key:"normalizeAngle",value:function(e){return(e=e%2*Math.PI)>Math.PI?e-2*Math.PI:e<-Math.PI?e+2*Math.PI:e}},{key:"containsParam",value:function(e){return e>=this.angleMin&&e<=this.angleMax}},{key:"fatLine",value:function(){var e=this.rx,t=this.ry,n=(this.angleMax+this.angleMin)/2,r=(this.angleMax-this.angleMin)/2,i=Math.cos(n),a=Math.sin(n),o=Math.sqrt(e*e*a*a+t*t*i*i);if(o<s.machinePrecision)var u=[1,0,this.x*t*i+this.y*e*a+e*t*Math.cos(r)],c=[1,0,this.x*t*i+this.y*e*a+e*t];else{var h=e/o,l=t/o;u=[-l*i,-h*a,this.x*l*i+this.y*h*a+e*t/o*Math.cos(r)],c=[-l*i,-h*a,this.x*l*i+this.y*h*a+e*t/o]}return{min:u,max:c}}},{key:"clip",value:function(e,t){return new Et.Arc(this.x,this.y,this.rx,this.ry,e,t)}},{key:"toCircleLine",value:function(e,t,n,r,i){var a=e[0],o=e[1],u=a*r,c=o*i,h=e[2]*r+(r-i)*o*n,l=Math.sqrt(u*u+c*c);return l<s.machinePrecision?(u=1,c=0):(u/=l,c/=l,h/=l),[u,c,h]}},{key:"clippedRange",value:function(e,t){var n=this.x,r=this.y,i=this.rx,a=this.ry,o=this.toCircleLine(e,n,r,i,a),u=this.toCircleLine(t,n,r,i,a),s=i,c=this.angleMin,h=this.angleMax,l=-(o[0]*n+o[1]*r+o[2]),m=[];if(s*s-l*l>=0){var p=o[0]*l-o[1]*Math.sqrt(s*s-l*l),f=o[1]*l+o[0]*Math.sqrt(s*s-l*l),d=o[0]*l+o[1]*Math.sqrt(s*s-l*l),y=o[1]*l-o[0]*Math.sqrt(s*s-l*l),v=Math.atan2(f,p),x=Math.atan2(y,d);this.containsParam(v)&&m.push(v),this.containsParam(x)&&m.push(x)}var g,w,S=-(o[0]*(n+s*Math.cos(c))+o[1]*(r+s*Math.sin(c))+o[2]),C=-(o[0]*(n+s*Math.cos(h))+o[1]*(r+s*Math.sin(h))+o[2]);if(S<0){if(0==m.length)return;g=Math.min.apply(Math,m)}else g=this.angleMin;if(C<0){if(0==m.length)return;w=Math.max.apply(Math,m)}else w=this.angleMax;m=[];if(s*s-(l=u[0]*n+u[1]*r+u[2])*l>=0){p=-o[0]*l+o[1]*Math.sqrt(s*s-l*l),f=-o[1]*l-o[0]*Math.sqrt(s*s-l*l),d=-o[0]*l-o[1]*Math.sqrt(s*s-l*l),y=-o[1]*l+o[0]*Math.sqrt(s*s-l*l),v=Math.atan2(f,p),x=Math.atan2(y,d);this.containsParam(v)&&m.push(v),this.containsParam(x)&&m.push(x)}var b,k;S=u[0]*(n+s*Math.cos(c))+u[1]*(r+s*Math.sin(c))+u[2],C=u[0]*(n+s*Math.cos(h))+u[1]*(r+s*Math.sin(h))+u[2];if(S<0){if(0==m.length)return;b=Math.min.apply(Math,m)}else b=this.angleMin;if(C<0){if(0==m.length)return;k=Math.max.apply(Math,m)}else k=this.angleMax;return{min:Math.max(g,b),max:Math.min(w,k)}}},{key:"drawFatLine",value:function(){var e=this.fatLine(),t=e.min,n=e.max,r=function(e,t){return-(e*t[0]+t[2])/t[1]},i=this.x+this.r*Math.cos(this.angleMin),a=this.x+this.r*Math.cos(this.angleMax);ze.svgForDebug.createSVGElement("line",{x1:ze.measure.em2px(i),y1:-ze.measure.em2px(r(i,t)),x2:ze.measure.em2px(a),y2:-ze.measure.em2px(r(a,t)),"stroke-width":ze.measure.em2px(.02*ze.measure.oneem),stroke:"blue"}),ze.svgForDebug.createSVGElement("line",{x1:ze.measure.em2px(i),y1:-ze.measure.em2px(r(i,n)),x2:ze.measure.em2px(a),y2:-ze.measure.em2px(r(a,n)),"stroke-width":ze.measure.em2px(.02*ze.measure.oneem),stroke:"red"})}}]),n}(Et);var At=function e(){kt(this,e)};function Lt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function jt(e,t,n){return t&&Lt(e.prototype,t),n&&Lt(e,n),e}function Dt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}At.None=function(e){gt(n,e);var t=St(n);function n(){return kt(this,n),t.call(this)}return Pt(n,[{key:"isDefined",get:function(){return!1}},{key:"segments",value:function(){return[]}},{key:"angle",value:function(){return 0}}]),n}(At),At.none=new At.None,At.Line=function(e){gt(n,e);var t=St(n);function n(e,r,i,a,o){var u;return kt(this,n),(u=t.call(this)).start=e,u.end=r,u.p=i,u.c=a,u.lineShape=o,u}return Pt(n,[{key:"isDefined",get:function(){return!0}},{key:"position",value:function(e){return new nt.Point(this.p.x+e*(this.c.x-this.p.x),this.p.y+e*(this.c.y-this.p.y))}},{key:"derivative",value:function(e){return new nt.Point(this.c.x-this.p.x,this.c.y-this.p.y)}},{key:"angle",value:function(e){var t=this.c.x-this.p.x,n=this.c.y-this.p.y;return 0===t&&0===n?0:Math.atan2(n,t)}},{key:"tOfPlace",value:function(e,t,n,r){var i=e?this.start:this.p,a=t?this.end:this.c;if(i.x===a.x&&i.y===a.y)return 0;var o,u,s=a.x-i.x,c=a.y-i.y,h=Math.sqrt(s*s+c*c);n>.5?(o=a.x-(1-n)*s+r*s/h,u=a.y-(1-n)*c+r*c/h):(o=i.x+n*s+r*s/h,u=i.y+n*c+r*c/h);var l=this.c.x-this.p.x,m=this.c.y-this.p.y;return 0===l&&0===m?0:Math.abs(l)>Math.abs(m)?(o-this.p.x)/l:(u-this.p.y)/m}},{key:"sliceHole",value:function(e,t){if(void 0!==this.lineShape&&!e.isPoint()){var n=this.lineShape,r=n.line,i=r.tOfIntersections(e);i.push(0),i.push(1),i.sort();for(var a=i[0],o=1;o<i.length;o++){var u=i[o],s=r.position((u+a)/2);if(e.contains(s)){var c=new dt(a,u);n.sliceHole(c)}a=u}}}},{key:"segments",value:function(){return[new Et.Line(this.p,this.c,0,1)]}}]),n}(At),At.QuadBezier=function(e){gt(n,e);var t=St(n);function n(e,r,i,a){var o;return kt(this,n),(o=t.call(this)).origBezier=e,o.tOfShavedStart=r,o.tOfShavedEnd=i,a.isNone||(o.curveShape=a,r>0&&a.sliceHole(new dt(0,r)),i<1&&a.sliceHole(new dt(i,1))),o}return Pt(n,[{key:"isDefined",get:function(){return!0}},{key:"position",value:function(e){return this.origBezier.position(e)}},{key:"derivative",value:function(e){return this.origBezier.derivative(e)}},{key:"angle",value:function(e){return this.origBezier.angle(e)}},{key:"tOfPlace",value:function(e,t,n,r){var i,a;e?(i=this.tOfShavedStart,a=t?this.tOfShavedEnd-this.tOfShavedStart:1-this.tOfShavedStart):(i=0,a=t?this.tOfShavedEnd:1);var o=this.origBezier,u=i+a*n;if(0!==r){var s=o.length(u);u=o.tOfLength(s+r)}return u}},{key:"sliceHole",value:function(e,t){var n=this.curveShape;if(void 0!==n&&!e.isPoint()){var r=n.curve,i=r.tOfIntersections(e);i.push(0),i.push(1),i.sort();for(var a=i[0],o=1;o<i.length;o++){var u=i[o];if(a<=t&&t<=u){var s=r.position((u+a)/2);if(e.contains(s)){var c=new dt(a,u);n.sliceHole(c)}}a=u}}}},{key:"segments",value:function(){return[new Et.QuadBezier(this.origBezier,0,1)]}}]),n}(At),At.CubicBezier=function(e){gt(n,e);var t=St(n);function n(e,r,i,a){var o;return kt(this,n),(o=t.call(this)).origBezier=e,o.tOfShavedStart=r,o.tOfShavedEnd=i,a.isNone||(o.curveShape=a,r>0&&a.sliceHole(new dt(0,r)),i<1&&a.sliceHole(new dt(i,1))),o}return Pt(n,[{key:"originalLine",value:function(){return this.originalLine}},{key:"isDefined",get:function(){return!0}},{key:"position",value:function(e){return this.origBezier.position(e)}},{key:"derivative",value:function(e){return this.origBezier.derivative(e)}},{key:"angle",value:function(e){return this.origBezier.angle(e)}},{key:"tOfPlace",value:function(e,t,n,r){var i,a;e?(i=this.tOfShavedStart,a=t?this.tOfShavedEnd-this.tOfShavedStart:1-this.tOfShavedStart):(i=0,a=t?this.tOfShavedEnd:1);var o=this.origBezier,u=i+a*n;if(0!==r){var s=o.length(u);u=o.tOfLength(s+r)}return u}},{key:"sliceHole",value:function(e,t){var n=this.curveShape;if(void 0!==n&&!e.isPoint()){var r=n.curve,i=r.tOfIntersections(e);i.push(0),i.push(1),i.sort();for(var a=i[0],o=1;o<i.length;o++){var u=i[o];if(a<=t&&t<=u){var s=r.position((u+a)/2);if(e.contains(s)){var c=new dt(a,u);n.sliceHole(c)}}a=u}}}},{key:"segments",value:function(){return[new Et.CubicBezier(this.origBezier,0,1)]}}]),n}(At),At.CubicBSpline=function(e){gt(n,e);var t=St(n);function n(e,r,i,a,o,u){var s;return kt(this,n),(s=t.call(this)).s=e,s.e=r,s.origBeziers=i,s.tOfShavedStart=a,s.tOfShavedEnd=o,u.isNone||(s.curveShape=u,a>0&&u.sliceHole(new dt(0,a)),o<1&&u.sliceHole(new dt(o,1))),s}return Pt(n,[{key:"isDefined",get:function(){return!0}},{key:"position",value:function(e){return this.origBeziers.position(e)}},{key:"derivative",value:function(e){return this.origBeziers.derivative(e)}},{key:"angle",value:function(e){return this.origBeziers.angle(e)}},{key:"tOfPlace",value:function(e,t,n,r){var i,a;e?(i=this.tOfShavedStart,a=t?this.tOfShavedEnd-this.tOfShavedStart:1-this.tOfShavedStart):(i=0,a=t?this.tOfShavedEnd:1);var o=this.origBeziers,u=i+a*n;if(0!==r){var s=o.length(u);u=o.tOfLength(s+r)}return u}},{key:"sliceHole",value:function(e,t){var n=this.curveShape;if(void 0!==n&&!e.isPoint()){var r=n.curve,i=r.tOfIntersections(e);i.push(0),i.push(1),i.sort();for(var a=i[0],o=1;o<i.length;o++){var u=i[o];if(a<=t&&t<=u){var s=r.position((u+a)/2);if(e.contains(s)){var c=new dt(a,u);n.sliceHole(c)}}a=u}}}},{key:"segments",value:function(){for(var e=new Array(this.origBeziers.length),t=e.length,n=0;n<t;n++)e[n]=new Et.CubicBezier(this.origBezier,n/t,(n+1)/t);return e}}]),n}(At);var Tt=function e(){Dt(this,e)};function Rt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ft(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Gt(e,t,n){return t&&Ft(e.prototype,t),n&&Ft(e,n),e}function Vt(e,t){for(var n in t)e.prototype.hasOwnProperty(n)?console.log("WARN","method "+n+" is already exists in class "+e.name):e.prototype[n]=t[n]}Tt.Position=function(){function e(t){Dt(this,e),this.pos=t}return jt(e,[{key:"position",value:function(e){return this.pos}},{key:"toString",value:function(){return this.pos.toString()}}]),e}(),Tt.Macro=function(){function e(t){Dt(this,e),this.macro=t}return jt(e,[{key:"position",value:function(e){return env.c=this.macro.position(e),env.c}},{key:"toString",value:function(){return this.macro.toString()}}]),e}(),Tt.Base=function(){function e(t,n,r){Dt(this,e),this.origin=t,this.xBase=n,this.yBase=r}return jt(e,[{key:"position",value:function(e){var t=e.env;return t.origin=this.origin,t.xBase=this.xBase,t.yBase=this.yBase,t.c}},{key:"toString",value:function(){return"origin:"+this.origin+", xBase:"+this.xBase+", yBase:"+this.yBase}}]),e}(),Tt.Stack=function(){function e(t){Dt(this,e),this.stack=t}return jt(e,[{key:"position",value:function(e){var t=e.env;return this.stack.isEmpty||(this.stack.tail.reverse().foreach((function(e){t.capturePosition(e)})),t.c=this.stack.head),t.c}},{key:"toString",value:function(){return this.stack.toString()}}]),e}(),Vt(ye.PosDecor,{toShape:function(e){this.pos.toShape(e),this.decor.toShape(e)}}),Vt(ye.Pos.Coord,{toShape:function(e){e.env.c=this.coord.position(e),this.pos2s.foreach((function(t){t.toShape(e)}))}}),Vt(ye.Pos.Plus,{toShape:function(e){var t=e.env,n=this.coord.position(e);t.c=n.move(t.c.x+n.x,t.c.y+n.y)}}),Vt(ye.Pos.Minus,{toShape:function(e){var t=e.env,n=this.coord.position(e);t.c=n.move(t.c.x-n.x,t.c.y-n.y)}}),Vt(ye.Pos.Skew,{toShape:function(e){var t=e.env,n=this.coord.position(e),r=new nt.Point(n.x+t.c.x,n.y+t.c.y);t.c=r.combineRect(t.c)}}),Vt(ye.Pos.Cover,{toShape:function(e){var t=e.env,n=this.coord.position(e);t.c=t.c.combineRect(n)}}),Vt(ye.Pos.Then,{toShape:function(e){var t=e.env;t.capturePosition(t.c),t.c=this.coord.position(e)}}),Vt(ye.Pos.SwapPAndC,{toShape:function(e){var t=e.env;t.swapPAndC(),t.c=this.coord.position(e)}}),Vt(ye.Pos.SetBase,{toShape:function(e){var t=e.env,n=t.p,r=t.c.x-n.x,i=t.c.y-n.y;t.setOrigin(n.x,n.y),t.setXBase(r,i),t.setYBase(-i,r),t.c=this.coord.position(e)}}),Vt(ye.Pos.SetYBase,{toShape:function(e){var t=e.env;t.setYBase(t.c.x-t.origin.x,t.c.y-t.origin.y),t.c=this.coord.position(e)}}),Vt(ye.Pos.ConnectObject,{toShape:function(e){this.object.toConnectShape(e)}}),Vt(ye.Pos.DropObject,{toShape:function(e){this.object.toDropShape(e)}}),Vt(ye.Pos.Place,{toShape:function(e){var t=e.env;if(t.lastCurve.isDefined){var n,r=this.place,i=r.shaveP>0,a=r.shaveC>0,o=i?r.shaveP-1:0,u=a?r.shaveC-1:0;if(i&&(n=0),a&&(n=1),i==a&&(n=.5),void 0!==r.factor)if(r.factor.isIntercept){if(a=i=!1,void 0===(n=r.factor.value(e)))return}else n=r.factor.value(e);var s=ze.measure.length2em(r.slide.dimen.getOrElse("0"))+(o-u)*ze.measure.jot,c=t.lastCurve.tOfPlace(i,a,n,s),h=t.lastCurve.position(c),l=t.lastCurve.angle(c);return t.c=h,t.angle=l,c}}}),Vt(ye.Pos.PushCoord,{toShape:function(e){var t=e.env,n=this.coord.position(e);t.pushPos(n)}}),Vt(ye.Pos.EvalCoordThenPop,{toShape:function(e){var t=e.env;t.c=this.coord.position(e),t.popPos()}}),Vt(ye.Pos.LoadStack,{toShape:function(e){var t=e.env;t.startCapturePositions(),this.coord.position(e);var n=t.endCapturePositions();t.setStack(n),t.pushPos(t.c)}}),Vt(ye.Pos.DoCoord,{toShape:function(e){var t=e.env,n=this.coord;t.stack.reverse().foreach((function(r){t.c=r,n.position(e)}))}}),Vt(ye.Pos.InitStack,{toShape:function(e){e.env.initStack()}}),Vt(ye.Pos.EnterFrame,{toShape:function(e){e.env.enterStackFrame()}}),Vt(ye.Pos.LeaveFrame,{toShape:function(e){e.env.leaveStackFrame()}}),Vt(ye.Place.Factor,{value:function(e){return this.factor}}),Vt(ye.Place.Intercept,{value:function(e){var t=e.env;if(t.lastCurve.isDefined){var n=t.duplicate();n.angle=0,n.lastCurve=At.none,n.p=n.c=Bt.originPosition;var r=new vt(pt.none,n);this.pos.toShape(r);e.appendShapeToFront(r.shape),n.lastCurve.isDefined||(n.lastCurve=new At.Line(n.p,n.c,n.p,n.c,void 0));for(var i=[],a=t.lastCurve.segments(),o=n.lastCurve.segments(),u=0;u<a.length;u++)for(var s=0;s<o.length;s++)i=i.concat(Et.findIntersections(a[u],o[s]));if(0===i.length){console.log("perhaps no curve intersection.");for(var c=t.lastCurve,h=n.lastCurve,l=1e-5,m=0,p=2,f=0,d=0,y=function(e){return 1/(1+Math.exp(-e))},v=function(e){var t=Math.exp(-e);return t/(1+t)/(1+t)},x=y(f),g=y(d),w=v(f),S=v(d),C=c.derivative(x),b=h.derivative(g),k=C.x*w,M=-b.x*S,P=C.y*w,B=-b.y*S,O=k*k+P*P,E=k*M+P*B,A=M*k+B*P,L=M*M+B*B,j=c.position(x),D=h.position(g),T=j.x-D.x,R=j.y-D.y,F=k*T+P*R,G=M*T+B*R,V=Math.sqrt(F*F+G*G)<l,_=.001*Math.max(O,L);!V&&m<100;){m++;do{var I=L+_,z=(O+_)*I-E*A,Q=(I*F-E*G)/z,N=(-A*F+O*G)/z;if(Q*Q+N*N<1.0000000000000002e-10*(f*f+d*d))V=!0;else{var X=f-Q,W=d-N,U=y(X),H=y(W),q=c.position(U),J=h.position(H),Z=q.x-J.x,Y=q.y-J.y,$=(T*T+R*R-(Z*Z+Y*Y))/(Q*(_*Q+F)+N*(_*N+G));if($>0){d=W,x=U,g=H,w=v(f=X),S=v(d),C=c.derivative(x),b=h.derivative(g),k=C.x*w,M=-b.x*S,O=k*k+(P=C.y*w)*P,E=k*M+P*(B=-b.y*S),A=M*k+B*P,L=M*M+B*B,F=k*(T=Z)+P*(R=Y),G=M*T+B*R,V=Math.sqrt(F*F+G*G)<l;var K=2*$-1;_+=Math.max(1/3,1-K*K*K),p=2}else _*=p,p*=2}}while(!(V||void 0!==$&&$>0))}return y(f)}var ee=(i[0][0].min+i[0][0].max)/2;for(u=1;u<i.length;u++){var te=(i[u][0].min+i[u][0].max)/2;ee>te&&(ee=te)}return ee}}}),Vt(ye.Pos.SavePos,{toShape:function(e){var t=e.env;t.savePos(this.id,new Tt.Position(t.c))}}),Vt(ye.Pos.SaveMacro,{toShape:function(e){e.env.savePos(this.id,new Tt.Macro(this.macro))}}),Vt(ye.Pos.SaveBase,{toShape:function(e){var t=e.env;t.savePos(this.id,new Tt.Base(t.origin,t.xBase,t.yBase))}}),Vt(ye.Pos.SaveStack,{toShape:function(e){var t=e.env;t.savePos(this.id,new Tt.Stack(t.stack))}}),Vt(ye.Object,{toDropShape:function(e){var t=e.env;if(void 0===t.c)return pt.none;var n=this.modifiers;if(n.isEmpty)return this.object.toDropShape(e);var r=t.duplicate(),i=new vt(pt.none,r),a=A.empty;n.foreach((function(e){e.preprocess(i,a),a=a.prepend(e)}));var o=this.object.toDropShape(i),u=r.c;if(void 0===u)return pt.none;var s=r.originalReferencePoint;return(r=t.duplicate()).c=u,r.originalReferencePoint=s,i=new vt(pt.none,r),o=n.head.modifyShape(i,o,n.tail),e.appendShapeToFront(o),t.c=r.c.move(t.c.x,t.c.y),o},toConnectShape:function(e){var t=e.env;if(void 0===t.c)return pt.none;var n=this.modifiers;if(n.isEmpty)return this.object.toConnectShape(e);var r=t.duplicate(),i=new vt(pt.none,r),a=A.empty;n.foreach((function(e){e.preprocess(i,a),a=a.prepend(e)}));var o=this.object.toConnectShape(i);t.angle=r.angle,t.lastCurve=r.lastCurve;var u=r.c;if(void 0===u)return pt.none;var s=r.originalReferencePoint;return(r=t.duplicate()).c=u,r.originalReferencePoint=s,i=new vt(pt.none,r),o=n.head.modifyShape(i,o,n.tail),e.appendShapeToFront(o),t.c=r.c.move(t.c.x,t.c.y),o},boundingBox:function(e){var t=e.duplicateEnv(),n=t.env;return n.angle=0,n.p=n.c=Bt.originPosition,t.shape=pt.none,this.toDropShape(t).getBoundingBox()}}),Vt(ye.ObjectBox,{toConnectShape:function(e){var t=(n=e.env).c,n=e.env,r=(ze.measure.thickness,n.p.edgePoint(n.c.x,n.c.y)),i=n.c.edgePoint(n.p.x,n.p.y);if(r.x!==i.x||r.y!==i.y){var a=new Ot.Line(r,i).toShape(e,this,"196883","");return n.originalReferencePoint=t,a}return n.angle=0,n.lastCurve=At.none,n.originalReferencePoint=t,pt.none},boundingBox:function(e){var t=e.duplicateEnv(),n=t.env;return n.angle=0,n.p=n.c=Bt.originPosition,t.shape=pt.none,this.toDropShape(t).getBoundingBox()}}),Vt(ye.ObjectBox.WrapUpObject,{toDropShape:function(e){var t=e.env,n=this.object.toDropShape(e);return t.originalReferencePoint=t.c,n},toConnectShape:function(e){var t=e.env,n=this.object.toConnectShape(e);return t.originalReferencePoint=t.c,n}}),Vt(ye.ObjectBox.CompositeObject,{toDropShape:function(e){var t=e.env,n=t.c;if(void 0===n)return pt.none;var r=n,i=t.duplicate(),a=new vt(pt.none,i);this.objects.foreach((function(e){i.c=n;var t=e.toDropShape(a);r=nt.combineRect(r,i.c),r=nt.combineRect(r,t.getBoundingBox().toPoint())})),t.c=r;var o=a.shape;return e.appendShapeToFront(o),t.originalReferencePoint=n,o}}),Vt(ye.ObjectBox.Xybox,{toDropShape:function(e){var t=e.env,n=t.c;if(void 0===n)return pt.none;var r=new Bt,i=new vt(pt.none,r);this.posDecor.toShape(i);var a=i.shape,o=a.getBoundingBox();if(void 0===o)return pt.none;var u=Math.max(0,o.l-o.x),s=Math.max(0,o.r+o.x),c=Math.max(0,o.u+o.y),h=Math.max(0,o.d-o.y);t.c=new nt.Rect(n.x,n.y,{l:u,r:s,u:c,d:h}),t.originalReferencePoint=n;var l=new pt.TranslateShape(n.x,n.y,a);return e.appendShapeToFront(l),l}}),Vt(ye.ObjectBox.Xymatrix,{toDropShape:function(e){var t=e.env,n=t.c,r=this.xymatrix.toShape(e);return t.originalReferencePoint=n,r}}),Vt(ye.ObjectBox.Text,{toDropShape:function(e){var t=e.env,n=new pt.TextShape(t.c,this.math);return e.appendShapeToFront(n),t.c=n.getBoundingBox(),t.originalReferencePoint=n.getOriginalReferencePoint(),n}}),Vt(ye.ObjectBox.Empty,{toDropShape:function(e){var t=e.env;return t.originalReferencePoint=t.c,t.c=new nt.Point(t.c.x,t.c.y),pt.none}}),Vt(ye.ObjectBox.Txt,{toDropShape:function(e){var t=e.env;if(void 0===t.c)return pt.none;var n=this.textObject.toDropShape(e);return t.originalReferencePoint=t.c,n}}),Vt(ye.ObjectBox.Txt.Width.Vector,{width:function(e){return this.vector.xy().x}}),Vt(ye.ObjectBox.Txt.Width.Default,{width:function(e){var t=e.env.c;return t.r+t.l}}),Vt(ye.ObjectBox.Cir,{toDropShape:function(e){var t=e.env;if(void 0===t.c)return pt.none;t.originalReferencePoint=t.c;var n=this.radius.radius(e),r=t.c.x,i=t.c.y,a=this.cir.toDropShape(e,r,i,n);return t.c=new nt.Ellipse(r,i,n,n,n,n),a},toConnectShape:function(e){var t=e.env;return t.originalReferencePoint=t.c,pt.none}}),Vt(ye.ObjectBox.Cir.Radius.Vector,{radius:function(e){return this.vector.xy(e).x}}),Vt(ye.ObjectBox.Cir.Radius.Default,{radius:function(e){return e.env.c.r}}),Vt(ye.ObjectBox.Cir.Cir.Segment,{toDropShape:function(e,t,n,r){e.env;var i,a,o=this.startPointDegree(e),u=this.endPointDegree(e,o),s=u-o;if(0===(s=s<0?s+360:s))return pt.none;"^"===this.orient?(i=s>180?"1":"0",a="0"):(i=s>180?"0":"1",a="1");var c=Math.PI/180,h=t+r*Math.cos(o*c),l=n+r*Math.sin(o*c),m=t+r*Math.cos(u*c),p=n+r*Math.sin(u*c),f=new pt.CircleSegmentShape(t,n,h,l,r,i,a,m,p);return e.appendShapeToFront(f),f},startPointDegree:function(e){var t=this.startDiag.toString();return"^"===this.orient?this.diagToAngleACW(t):this.diagToAngleCW(t)},endPointDegree:function(e,t){var n=this.endDiag.toString();return"^"===this.orient?this.diagToAngleACW(n,t):this.diagToAngleCW(n,t)},diagToAngleACW:function(e,t){switch(e){case"l":return 90;case"r":return-90;case"d":return 180;case"u":return 0;case"dl":case"ld":return 135;case"dr":case"rd":return-135;case"ul":case"lu":return 45;case"ur":case"ru":return-45;default:return void 0!==t?t+180:0}},diagToAngleCW:function(e,t){switch(e){case"l":return-90;case"r":return 90;case"d":return 0;case"u":return 180;case"dl":case"ld":return-45;case"dr":case"rd":return 45;case"ul":case"lu":return-135;case"ur":case"ru":return 135;default:return void 0!==t?t+180:0}}}),Vt(ye.ObjectBox.Cir.Cir.Full,{toDropShape:function(e,t,n,r){var i=new pt.FullCircleShape(t,n,r);return e.appendShapeToFront(i),i}}),Vt(ye.ObjectBox.Frame,{toDropShape:function(e){var t=e.env;return t.originalReferencePoint=t.c,this.toDropFilledShape(e,"currentColor",!1)},toDropFilledShape:function(e,t,n){var r=e.env.c;if(void 0===r)return pt.none;var i=ze.measure.thickness,a=r.x,o=r.y,u=r.l,s=r.r,c=r.u,h=r.d,l=pt.none;switch(this.main){case"--":var m=3*i;if(n){var p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!1,t,ze.measure.em2px(m)+" "+ze.measure.em2px(m))}else{var f=this.radius.radius(e);l=new pt.RectangleShape(a,o,u,s,c,h,f,!1,t,ze.measure.em2px(m)+" "+ze.measure.em2px(m))}break;case"==":m=3*i;if(n){p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!0,t,ze.measure.em2px(m)+" "+ze.measure.em2px(m))}else{f=this.radius.radius(e);l=new pt.RectangleShape(a,o,u,s,c,h,f,!0,t,ze.measure.em2px(m)+" "+ze.measure.em2px(m))}break;case"o-":m=3*i,f=ze.measure.lineElementLength;l=new pt.RectangleShape(a,o,u,s,c,h,f,!1,t,ze.measure.em2px(m)+" "+ze.measure.em2px(m));break;case"oo":var d=(p=this.radius.xy(e)).x;l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,d,d,!0,t,void 0);break;case"ee":p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!0,t,void 0);break;case"-,":var y=this.radius.depth(e);f=this.radius.radius(e);l=new pt.CompositeShape(new pt.RectangleShape(a,o,u,s,c,h,f,!1,t,void 0),new pt.BoxShadeShape(a,o,u,s,c,h,y));break;case".o":d=(p=this.radius.xy(e)).x;l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,d,d,!1,t,ze.measure.dottedDasharray);break;case"-o":m=3*i,d=(p=this.radius.xy(e)).x;l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,d,d,!1,t,ze.measure.em2px(m)+" "+ze.measure.em2px(m));break;case".e":p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!1,t,ze.measure.dottedDasharray);break;case"-e":m=3*i,p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!1,t,ze.measure.em2px(m)+" "+ze.measure.em2px(m));break;case"-":if(n){p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!1,t,void 0)}else{f=this.radius.radius(e);l=new pt.RectangleShape(a,o,u,s,c,h,f,!1,t,void 0)}break;case"=":if(n){p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!0,t,void 0)}else{f=this.radius.radius(e);l=new pt.RectangleShape(a,o,u,s,c,h,f,!0,t,void 0)}break;case".":if(n){p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!1,t,ze.measure.dottedDasharray)}else{f=this.radius.radius(e);l=new pt.RectangleShape(a,o,u,s,c,h,f,!1,t,ze.measure.dottedDasharray)}break;case",":y=this.radius.depth(e);l=new pt.BoxShadeShape(a,o,u,s,c,h,y,t);break;case"o":d=(p=this.radius.xy(e)).x;l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,d,d,!1,t,void 0);break;case"e":p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!1,t,void 0);break;case"\\{":l=new pt.LeftBrace(a-u,o,c,h,0,t);break;case"\\}":l=new pt.LeftBrace(a+s,o,h,c,180,t);break;case"^\\}":case"^\\{":l=new pt.LeftBrace(a,o+c,s,u,270,t);break;case"_\\{":case"_\\}":l=new pt.LeftBrace(a,o-h,u,s,90,t);break;case"(":l=new pt.LeftParenthesis(a-u,o+(c-h)/2,c+h,0,t);break;case")":l=new pt.LeftParenthesis(a+s,o+(c-h)/2,c+h,180,t);break;case"^(":case"^)":l=new pt.LeftParenthesis(a+(s-u)/2,o+c,u+s,270,t);break;case"_(":case"_)":l=new pt.LeftParenthesis(a+(s-u)/2,o-h,u+s,90,t);break;case"*":if(r.isCircle()){p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!1,"currentColor",void 0,t,!0)}else{f=this.radius.radius(e);l=new pt.RectangleShape(a,o,u,s,c,h,f,!1,"currentColor",void 0,t,!0)}break;case"**":if(r.isCircle()){p=this.radius.xy(e);l=new pt.EllipseShape(a+(s-u)/2,o+(c-h)/2,p.x,p.y,!1,"currentColor",void 0,t,!1)}else{f=this.radius.radius(e);l=new pt.RectangleShape(a,o,u,s,c,h,f,!1,"currentColor",void 0,t,!1)}break;default:return pt.none}return e.appendShapeToFront(l),l},toConnectShape:function(e){var t=e.env,n=t.c,r=t.p;void 0!==n&&void 0!==r||pt.none,t.originalReferencePoint=n;var i=t.duplicate();i.c=r.combineRect(n);var a=new vt(pt.none,i),o=this.toDropShape(a);return e.appendShapeToFront(o),o}}),Vt(ye.ObjectBox.Frame.Radius.Vector,{radius:function(e){return this.vector.xy(e).x},depth:function(e){return this.vector.xy(e).x},xy:function(e){return this.vector.xy(e)}}),Vt(ye.ObjectBox.Frame.Radius.Default,{radius:function(e){return 0},depth:function(e){return ze.measure.thickness/2},xy:function(e){var t=e.env.c;return{x:(t.l+t.r)/2,y:(t.u+t.d)/2}}}),Vt(ye.ObjectBox.Dir,{toDropShape:function(e){var t=e.env,n=t.c;t.originalReferencePoint=n;var r=t.angle;if(void 0===n)return pt.none;t.c=new nt.Point(n.x,n.y);ze.measure.thickness;var i=pt.none;switch(this.main){case"":return pt.none;case">":switch(this.variant){case"2":var a=(i=new pt.GT2ArrowheadShape(n,r)).getRadius();t.c=new nt.Ellipse(n.x,n.y,a,a,a,a);break;case"3":a=(i=new pt.GT3ArrowheadShape(n,r)).getRadius();t.c=new nt.Ellipse(n.x,n.y,a,a,a,a);break;default:i="^"===this.variant?new pt.UpperGTArrowheadShape(n,r):"_"===this.variant?new pt.LowerGTArrowheadShape(n,r):new pt.GTArrowheadShape(n,r)}break;case"<":switch(this.variant){case"2":a=(i=new pt.LT2ArrowheadShape(n,r)).getRadius();t.c=new nt.Ellipse(n.x,n.y,a,a,a,a);break;case"3":a=(i=new pt.LT3ArrowheadShape(n,r)).getRadius();t.c=new nt.Ellipse(n.x,n.y,a,a,a,a);break;default:i="^"===this.variant?new pt.UpperLTArrowheadShape(n,r):"_"===this.variant?new pt.LowerLTArrowheadShape(n,r):new pt.LTArrowheadShape(n,r)}break;case"|":switch(this.variant){case"^":i=new pt.UpperColumnArrowheadShape(n,r);break;case"_":i=new pt.LowerColumnArrowheadShape(n,r);break;case"2":i=new pt.Column2ArrowheadShape(n,r);break;case"3":i=new pt.Column3ArrowheadShape(n,r);break;default:i=new pt.ColumnArrowheadShape(n,r)}break;case"(":switch(this.variant){case"^":i=new pt.UpperLParenArrowheadShape(n,r);break;case"_":i=new pt.LowerLParenArrowheadShape(n,r);break;default:i=new pt.LParenArrowheadShape(n,r)}break;case")":switch(this.variant){case"^":i=new pt.UpperRParenArrowheadShape(n,r);break;case"_":i=new pt.LowerRParenArrowheadShape(n,r);break;default:i=new pt.RParenArrowheadShape(n,r)}break;case"`":switch(this.variant){case"_":i=new pt.LowerBackquoteArrowheadShape(n,r);break;case"^":default:i=new pt.UpperBackquoteArrowheadShape(n,r)}break;case"'":switch(this.variant){case"_":i=new pt.LowerQuoteArrowheadShape(n,r);break;case"^":default:i=new pt.UpperQuoteArrowheadShape(n,r)}break;case"*":i=new pt.AsteriskArrowheadShape(n,0);break;case"o":i=new pt.OArrowheadShape(n,0);break;case"+":i=new pt.PlusArrowheadShape(n,r);break;case"x":i=new pt.XArrowheadShape(n,r);break;case"/":i=new pt.SlashArrowheadShape(n,r);break;case"-":case"--":ze.measure.lineElementLength;i="3"===this.variant?new pt.Line3ArrowheadShape(n,r):"2"===this.variant?new pt.Line2ArrowheadShape(n,r):new pt.LineArrowheadShape(n,r);break;case"=":case"==":i=new pt.Line2ArrowheadShape(n,r);break;case".":case"..":i="3"===this.variant?new pt.Dot3ArrowheadShape(n,r):"2"===this.variant?new pt.Dot2ArrowheadShape(n,r):new pt.DotArrowheadShape(n,r);break;case":":case"::":i=new pt.Dot2ArrowheadShape(n,r);break;case"~":case"~~":i="3"===this.variant?new pt.Tilde3ArrowheadShape(n,r):"2"===this.variant?new pt.Tilde2ArrowheadShape(n,r):new pt.TildeArrowheadShape(n,r);break;case">>":switch(this.variant){case"^":i=new pt.UpperGTGTArrowheadShape(n,r);break;case"_":i=new pt.LowerGTGTArrowheadShape(n,r);break;case"2":a=(i=new pt.GTGT2ArrowheadShape(n,r)).getRadius();t.c=new nt.Ellipse(n.x,n.y,a,a,a,a);break;case"3":a=(i=new pt.GTGT3ArrowheadShape(n,r)).getRadius();t.c=new nt.Ellipse(n.x,n.y,a,a,a,a);break;default:i=new pt.GTGTArrowheadShape(n,r)}break;case"<<":switch(this.variant){case"^":i=new pt.UpperLTLTArrowheadShape(n,r);break;case"_":i=new pt.LowerLTLTArrowheadShape(n,r);break;case"2":a=(i=new pt.LTLT2ArrowheadShape(n,r)).getRadius();t.c=new nt.Ellipse(n.x,n.y,a,a,a,a);break;case"3":a=(i=new pt.LTLT3ArrowheadShape(n,r)).getRadius();t.c=new nt.Ellipse(n.x,n.y,a,a,a,a);break;default:i=new pt.LTLTArrowheadShape(n,r)}break;case"||":switch(this.variant){case"^":i=new pt.UpperColumnColumnArrowheadShape(n,r);break;case"_":i=new pt.LowerColumnColumnArrowheadShape(n,r);break;case"2":i=new pt.ColumnColumn2ArrowheadShape(n,r);break;case"3":i=new pt.ColumnColumn3ArrowheadShape(n,r);break;default:i=new pt.ColumnColumnArrowheadShape(n,r)}break;case"|-":switch(this.variant){case"^":i=new pt.UpperColumnLineArrowheadShape(n,r);break;case"_":i=new pt.LowerColumnLineArrowheadShape(n,r);break;case"2":i=new pt.ColumnLine2ArrowheadShape(n,r);break;case"3":i=new pt.ColumnLine3ArrowheadShape(n,r);break;default:i=new pt.ColumnLineArrowheadShape(n,r)}break;case">|":i=new pt.GTColumnArrowheadShape(n,r);break;case">>|":i=new pt.GTGTColumnArrowheadShape(n,r);break;case"|<":i=new pt.ColumnLTArrowheadShape(n,r);break;case"|<<":i=new pt.ColumnLTLTArrowheadShape(n,r);break;case"//":i=new pt.SlashSlashArrowheadShape(n,r);break;case"=>":i=new pt.LineGT2ArrowheadShape(n,r);break;default:var o=ze.repositories.dirRepository.get(this.main);if(void 0===o)throw new TeXError("ExecutionError","\\dir "+this.variant+"{"+this.main+"} not defined.");i=o.toDropShape(e)}return e.appendShapeToFront(i),i},toConnectShape:function(e){var t=e.env;t.originalReferencePoint=t.c;ze.measure.thickness;var n=t.p.edgePoint(t.c.x,t.c.y),r=t.c.edgePoint(t.p.x,t.p.y);return n.x!==r.x||n.y!==r.y?new Ot.Line(n,r).toShape(e,this,this.main,this.variant):(t.angle=0,t.lastCurve=At.none,pt.none)}}),Vt(ye.ObjectBox.Curve,{toDropShape:function(e){var t=e.env;return t.originalReferencePoint=t.c,pt.none},toConnectShape:function(e){var t=e.env;t.originalReferencePoint=t.c;var n=void 0,r=void 0;this.objects.foreach((function(e){n=e.objectForDrop(n),r=e.objectForConnect(r)})),void 0===n&&void 0===r&&(r=new ye.Object(A.empty,new ye.ObjectBox.Dir("","-")));ze.measure.thickness;var i=t.c,a=t.p,o=[];this.poslist.foreach((function(t){t.addPositions(o,e)})),t.c=i,t.p=a;var u=pt.none,s=a,c=i;switch(o.length){case 0:return s.x===c.x&&s.y===c.y?(t.lastCurve=At.none,t.angle=0,pt.none):void 0!==r?r.toConnectShape(e):n.toConnectShape(e);case 1:var h=(m=new Ot.QuadBezier(s,o[0],c)).tOfShavedStart(s),l=m.tOfShavedEnd(c);if(void 0===h||void 0===l||h>=l)return t.angle=0,t.lastCurve=At.none,pt.none;u=m.toShape(e,n,r),t.lastCurve=new At.QuadBezier(m,h,l,u),t.angle=Math.atan2(c.y-s.y,c.x-s.x);break;case 2:var m;h=(m=new Ot.CubicBezier(s,o[0],o[1],c)).tOfShavedStart(s),l=m.tOfShavedEnd(c);if(void 0===h||void 0===l||h>=l)return t.angle=0,t.lastCurve=At.none,pt.none;u=m.toShape(e,n,r),t.lastCurve=new At.CubicBezier(m,h,l,u),t.angle=Math.atan2(c.y-s.y,c.x-s.x);break;default:var p=new Ot.CubicBSpline(s,o,c),f=new Ot.CubicBeziers(p.toCubicBeziers());h=f.tOfShavedStart(s),l=f.tOfShavedEnd(c);if(void 0===h||void 0===l||h>=l)return t.angle=0,t.lastCurve=At.none,pt.none;u=f.toShape(e,n,r),t.lastCurve=new At.CubicBSpline(s,c,f,h,l,u),t.angle=Math.atan2(c.y-s.y,c.x-s.x)}return u}}),Vt(ye.ObjectBox.Curve.Object.Drop,{objectForDrop:function(e){return this.object},objectForConnect:function(e){return e}}),Vt(ye.ObjectBox.Curve.Object.Connect,{objectForDrop:function(e){return e},objectForConnect:function(e){return this.object}}),Vt(ye.ObjectBox.Curve.PosList.CurPos,{addPositions:function(e,t){var n=t.env;e.push(n.c)}}),Vt(ye.ObjectBox.Curve.PosList.Pos,{addPositions:function(e,t){var n=t.env;this.pos.toShape(t),e.push(n.c)}}),Vt(ye.ObjectBox.Curve.PosList.AddStack,{addPositions:function(e,t){t.env.stack.reverse().foreach((function(t){e.push(t)}))}}),Vt(ye.Coord.C,{position:function(e){return e.env.c}}),Vt(ye.Coord.P,{position:function(e){return e.env.p}}),Vt(ye.Coord.X,{position:function(e){var t=e.env,n=t.p,r=t.c,i=t.origin,a=t.xBase,o=r.y-n.y,u=n.x-r.x,c=r.x*n.y-r.y*n.x,h=a.y,l=-a.x,m=a.x*i.y-a.y*i.x,p=o*l-h*u;if(Math.abs(p)<s.machinePrecision)return console.log("there is no intersection point."),Bt.originPosition;var f=-(l*c-u*m)/p,d=(h*c-o*m)/p;return new nt.Point(f,d)}}),Vt(ye.Coord.Y,{position:function(e){var t=e.env,n=t.p,r=t.c,i=t.origin,a=t.yBase,o=r.y-n.y,u=n.x-r.x,c=r.x*n.y-r.y*n.x,h=a.y,l=-a.x,m=a.x*i.y-a.y*i.x,p=o*l-h*u;if(Math.abs(p)<s.machinePrecision)return console.log("there is no intersection point."),Bt.originPosition;var f=-(l*c-u*m)/p,d=(h*c-o*m)/p;return new nt.Point(f,d)}}),Vt(ye.Coord.Vector,{position:function(e){var t=this.vector.xy(e);return new nt.Point(t.x,t.y)}}),Vt(ye.Coord.Id,{position:function(e){return e.env.lookupPos(this.id).position(e)}}),Vt(ye.Coord.Group,{position:function(e){var t=e.env,n=t.origin,r=t.xBase,i=t.yBase,a=t.p;return this.posDecor.toShape(e),t.p=a,t.origin=n,t.xBase=r,t.yBase=i,t.c}}),Vt(ye.Coord.StackPosition,{position:function(e){return e.env.stackAt(this.number)}}),Vt(ye.Coord.DeltaRowColumn,{position:function(e){var t=e.env,n=t.xymatrixRow,r=t.xymatrixCol;if(void 0===n||void 0===r)throw new TeXError("ExecutionError","xymatrix rows and columns not found for "+this.toSring());var i=this.prefix+(n+this.dr)+","+(r+this.dc);return e.env.lookupPos(i,'in entry "'+t.xymatrixRow+","+t.xymatrixCol+'": No '+this+" (is "+i+") from here.").position(e)}}),Vt(ye.Coord.Hops,{position:function(e){var t=e.env,n=t.xymatrixRow,r=t.xymatrixCol;if(void 0===n||void 0===r)throw new TeXError("ExecutionError","xymatrix rows and columns not found for "+this.toSring());this.hops.foreach((function(e){switch(e){case"u":n-=1;break;case"d":n+=1;break;case"l":r-=1;break;case"r":r+=1}}));var i=this.prefix+n+","+r;return e.env.lookupPos(i,'in entry "'+t.xymatrixRow+","+t.xymatrixCol+'": No '+this+" (is "+i+") from here.").position(e)}}),Vt(ye.Coord.HopsWithPlace,{position:function(e){var t=e.env,n=t.xymatrixRow,r=t.xymatrixCol;if(void 0===n||void 0===r)throw new TeXError("ExecutionError","xymatrix rows and columns not found for "+this.toSring());this.hops.foreach((function(e){switch(e){case"u":n-=1;break;case"d":n+=1;break;case"l":r-=1;break;case"r":r+=1}}));var i=this.prefix+n+","+r,a=e.env.lookupPos(i,'in entry "'+t.xymatrixRow+","+t.xymatrixCol+'": No '+this+" (is "+i+") from here.").position(e),o=(t.c,t.duplicate());o.p=t.c,o.c=a;var u,s=o.c.x-o.p.x,c=o.c.y-o.p.y;u=0===s&&0===c?0:Math.atan2(c,s),o.angle=u;var h=o.p.edgePoint(o.c.x,o.c.y),l=o.c.edgePoint(o.p.x,o.p.y);o.lastCurve=new At.Line(h,l,o.p,o.c,void 0);var m=new vt(pt.none,o),p=this.place.toShape(m);return o.lastCurve.position(p)}}),Vt(ye.Vector.InCurBase,{xy:function(e){return e.env.absVector(this.x,this.y)},angle:function(e){var t=e.env.absVector(this.x,this.y);return Math.atan2(t.y,t.x)}}),Vt(ye.Vector.Abs,{xy:function(e){return{x:ze.measure.length2em(this.x),y:ze.measure.length2em(this.y)}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Vector.Angle,{xy:function(e){var t=Math.PI/180*this.degree,n=e.env.absVector(Math.cos(t),Math.sin(t));return n},angle:function(e){return Math.PI/180*this.degree}}),Vt(ye.Vector.Dir,{xy:function(e){var t=ze.measure.length2em(this.dimen),n=this.dir.angle(e);return{x:t*Math.cos(n),y:t*Math.sin(n)}},angle:function(e){return this.dir.angle(e)}}),Vt(ye.Vector.Corner,{xy:function(e){var t=this.corner.xy(e);return{x:t.x*this.factor,y:t.y*this.factor}},angle:function(e){return this.corner.angle(e)}}),Vt(ye.Corner.L,{xy:function(e){return{x:-e.env.c.l,y:0}},angle:function(e){return Math.PI}}),Vt(ye.Corner.R,{xy:function(e){return{x:e.env.c.r,y:0}},angle:function(e){return 0}}),Vt(ye.Corner.D,{xy:function(e){return{x:0,y:-e.env.c.d}},angle:function(e){return-Math.PI/2}}),Vt(ye.Corner.U,{xy:function(e){return{x:0,y:e.env.c.u}},angle:function(e){return Math.PI/2}}),Vt(ye.Corner.CL,{xy:function(e){var t=e.env.c;return{x:-t.l,y:(t.u-t.d)/2}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Corner.CR,{xy:function(e){var t=e.env.c;return{x:t.r,y:(t.u-t.d)/2}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Corner.CD,{xy:function(e){var t=e.env.c;return{x:(t.r-t.l)/2,y:-t.d}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Corner.CU,{xy:function(e){var t=e.env.c;return{x:(t.r-t.l)/2,y:t.u}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Corner.LU,{xy:function(e){var t=e.env.c;return{x:-t.l,y:t.u}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Corner.LD,{xy:function(e){var t=e.env.c;return{x:-t.l,y:-t.d}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Corner.RU,{xy:function(e){var t=e.env.c;return{x:t.r,y:t.u}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Corner.RD,{xy:function(e){var t=e.env.c;return{x:t.r,y:-t.d}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Corner.NearestEdgePoint,{xy:function(e){var t=e.env,n=t.c,r=n.edgePoint(t.p.x,t.p.y);return{x:r.x-n.x,y:r.y-n.y}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Corner.PropEdgePoint,{xy:function(e){var t=e.env,n=t.c,r=n.proportionalEdgePoint(t.p.x,t.p.y);return{x:r.x-n.x,y:r.y-n.y}},angle:function(e){var t=this.xy(e);return Math.atan2(t.y,t.x)}}),Vt(ye.Corner.Axis,{xy:function(e){return{x:0,y:ze.measure.axisHeightLength}},angle:function(e){return Math.PI/2}}),Vt(ye.Modifier,{proceedModifyShape:function(e,t,n){return n.isEmpty?t:n.head.modifyShape(e,t,n.tail)}}),Vt(ye.Modifier.Vector,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=this.vector.xy(e),i=e.env;return i.c=i.c.shiftFrame(-r.x,-r.y),t=new pt.TranslateShape(-r.x,-r.y,t),this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.RestoreOriginalRefPoint,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=e.env,i=r.originalReferencePoint;if(void 0!==i){var a=r.c.x-i.x,o=r.c.y-i.y;r.c=r.c.shiftFrame(a,o),t=new pt.TranslateShape(a,o,t)}return this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.Point,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=e.env.c;return e.env.c=new nt.Point(r.x,r.y),this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.Rect,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=e.env.c;return e.env.c=new nt.Rect(r.x,r.y,{l:r.l,r:r.r,u:r.u,d:r.d}),this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.Circle,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=e.env.c;return e.env.c=new nt.Ellipse(r.x,r.y,r.l,r.r,r.u,r.d),this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.L,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=e.env,i=r.c;if(void 0!==i){var a,o,u=i.r+i.l,s=i.u+i.d;u<s?(a=(i.l-i.r)/2,o=(i.d-i.u)/2):(a=-i.r+s/2,o=(i.d-i.u)/2),r.c=r.c.shiftFrame(a,o),t=new pt.TranslateShape(a,o,t)}return this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.R,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=e.env,i=r.c;if(void 0!==i){var a,o,u=i.r+i.l,s=i.u+i.d;u<s?(a=(i.l-i.r)/2,o=(i.d-i.u)/2):(a=i.l-s/2,o=(i.d-i.u)/2),r.c=r.c.shiftFrame(a,o),t=new pt.TranslateShape(a,o,t)}return this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.U,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=e.env,i=r.c;if(void 0!==i){var a,o,u=i.r+i.l;u>i.u+i.d?(a=(i.l-i.r)/2,o=(i.d-i.u)/2):(a=(i.l-i.r)/2,o=i.d-u/2),r.c=r.c.shiftFrame(a,o),t=new pt.TranslateShape(a,o,t)}return this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.D,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=e.env,i=r.c;if(void 0!==i){var a,o,u=i.r+i.l;u>i.u+i.d?(a=(i.l-i.r)/2,o=(i.d-i.u)/2):(a=(i.l-i.r)/2,o=-i.u+u/2),r.c=r.c.shiftFrame(a,o),t=new pt.TranslateShape(a,o,t)}return this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.C,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r,i,a=e.env,o=a.c;void 0!==o&&(r=(o.l-o.r)/2,i=(o.d-o.u)/2,a.c=a.c.shiftFrame(r,i),t=new pt.TranslateShape(r,i,t));return this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.ChangeColor,{preprocess:function(e,t){},modifyShape:function(e,t,n){return t=this.proceedModifyShape(e,t,n),new pt.ChangeColorShape(this.colorName,t)}}),Vt(ye.Modifier.Shape.Alphabets,{preprocess:function(e,t){var n=ze.repositories.modifierRepository.get(this.alphabets);if(void 0!==n)return n.preprocess(e,t)},modifyShape:function(e,t,n){var r=ze.repositories.modifierRepository.get(this.alphabets);if(void 0!==r)return r.modifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.DefineShape,{preprocess:function(e,t){var n=t.reverse();ze.repositories.modifierRepository.put(this.shape,new ye.Modifier.Shape.CompositeModifiers(n))},modifyShape:function(e,t,n){return this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.CompositeModifiers,{preprocess:function(e,t){this.modifiers.foreach((function(n){n.preprocess(e,t),t=t.prepend(n)}))},modifyShape:function(e,t,n){return t=this.proceedModifyShape(e,t,this.modifiers),this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Invisible,{preprocess:function(e,t){},modifyShape:function(e,t,n){return t=this.proceedModifyShape(e,t,n),pt.none}}),Vt(ye.Modifier.Hidden,{preprocess:function(e,t){},modifyShape:function(e,t,n){return this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Direction,{preprocess:function(e,t){e.env.angle=this.direction.angle(e)},modifyShape:function(e,t,n){return e.env.angle=this.direction.angle(e),this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.AddOp,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=e.env.c;return e.env.c=this.op.apply(this.size,r,e),e.appendShapeToFront(new pt.InvisibleBoxShape(e.env.c)),this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.AddOp.Grow,{apply:function(e,t,n){var r=n.env,i=e.isDefault?{x:2*r.objectmargin,y:2*r.objectmargin}:e.vector.xy(n),a=Math.abs(i.x/2),o=Math.abs(i.y/2);return t.grow(a,o)},applyToDimen:function(e,t){return e+t}}),Vt(ye.Modifier.AddOp.Shrink,{apply:function(e,t,n){var r=n.env,i=e.isDefault?{x:2*r.objectmargin,y:2*r.objectmargin}:e.vector.xy(n),a=-Math.abs(i.x/2),o=-Math.abs(i.y/2);return t.grow(a,o)},applyToDimen:function(e,t){return e-t}}),Vt(ye.Modifier.AddOp.Set,{apply:function(e,t,n){var r=n.env,i=e.isDefault?{x:r.objectwidth,y:r.objectheight}:e.vector.xy(n),a=Math.abs(i.x),o=Math.abs(i.y);return t.toSize(a,o)},applyToDimen:function(e,t){return t}}),Vt(ye.Modifier.AddOp.GrowTo,{apply:function(e,t,n){var r=Math.max(t.l+t.r,t.u+t.d),i=e.isDefault?{x:r,y:r}:e.vector.xy(n),a=Math.abs(i.x),o=Math.abs(i.y);return t.growTo(a,o)},applyToDimen:function(e,t){return Math.max(Math.max(e,t),0)}}),Vt(ye.Modifier.AddOp.ShrinkTo,{apply:function(e,t,n){var r=Math.min(t.l+t.r,t.u+t.d),i=e.isDefault?{x:r,y:r}:e.vector.xy(n),a=Math.abs(i.x),o=Math.abs(i.y);return t.shrinkTo(a,o)},applyToDimen:function(e,t){return Math.max(Math.min(e,t),0)}}),Vt(ye.Modifier.Shape.Frame,{preprocess:function(e,t){},modifyShape:function(e,t,n){var r=e.env;if(void 0!==r.c){this.main;var i=new ye.ObjectBox.Frame.Radius.Default,a="currentColor";this.options.foreach((function(e){i=e.getRadius(i)})),this.options.foreach((function(e){a=e.getColorName(a)}));var o=r.duplicate(),u=new vt(pt.none,o),s=new ye.ObjectBox.Frame(i,this.main).toDropFilledShape(u,a,r.c.isCircle());t=new pt.CompositeShape(t,s)}return this.proceedModifyShape(e,t,n)}}),Vt(ye.Modifier.Shape.Frame.Radius,{getRadius:function(e){return new ye.ObjectBox.Frame.Radius.Vector(this.vector)},getColorName:function(e){return e}}),Vt(ye.Modifier.Shape.Frame.Color,{getRadius:function(e){return e},getColorName:function(e){return this.colorName}}),Vt(ye.Direction.Compound,{angle:function(e){var t=this.dir.angle(e);return this.rots.foreach((function(n){t=n.rotate(t,e)})),t}}),Vt(ye.Direction.Diag,{angle:function(e){return this.diag.angle(e)}}),Vt(ye.Direction.Vector,{angle:function(e){return this.vector.angle(e)}}),Vt(ye.Direction.ConstructVector,{angle:function(e){var t=e.env,n=t.origin,r=t.xBase,i=t.yBase,a=t.p,o=t.c;this.posDecor.toShape(e);var u=Math.atan2(t.c.y-t.p.y,t.c.x-t.p.x);return t.c=o,t.p=a,t.origin=n,t.xBase=r,t.yBase=i,u}}),Vt(ye.Direction.RotVector,{rotate:function(e,t){return e+this.vector.angle(t)}}),Vt(ye.Direction.RotCW,{rotate:function(e,t){return e+Math.PI/2}}),Vt(ye.Direction.RotAntiCW,{rotate:function(e,t){return e-Math.PI/2}}),Vt(ye.Diag.Default,{isEmpty:!0,angle:function(e){return e.env.angle}}),Vt(ye.Diag.Angle,{isEmpty:!1,angle:function(e){return this.ang}}),Vt(ye.Decor,{toShape:function(e){this.commands.foreach((function(t){t.toShape(e)}))}}),Vt(ye.Command.Save,{toShape:function(e){e.env.saveState(),this.pos.toShape(e)}}),Vt(ye.Command.Restore,{toShape:function(e){e.env.restoreState()}}),Vt(ye.Command.Pos,{toShape:function(e){this.pos.toShape(e)}}),Vt(ye.Command.AfterPos,{toShape:function(e){this.pos.toShape(e),this.decor.toShape(e)}}),Vt(ye.Command.Drop,{toShape:function(e){this.object.toDropShape(e)}}),Vt(ye.Command.Connect,{toShape:function(e){this.object.toConnectShape(e)}}),Vt(ye.Command.Relax,{toShape:function(e){}}),Vt(ye.Command.Ignore,{toShape:function(e){}}),Vt(ye.Command.ShowAST,{toShape:function(e){console.log(this.pos.toString()+" "+this.decor)}}),Vt(ye.Command.Ar,{toShape:function(e){var t=e.env,n=t.origin,r=t.xBase,i=t.yBase,a=t.p,o=t.c;t.pathActionForBeforeSegment=x.empty,t.pathActionForAfterSegment=x.empty,t.labelsForNextSegmentOnly=x.empty,t.labelsForLastSegmentOnly=x.empty,t.labelsForEverySegment=x.empty,t.segmentSlideEm=x.empty,t.lastTurnDiag=x.empty,t.arrowVariant="",t.tailTip=new ye.Command.Ar.Form.Tip.Tipchars(""),t.headTip=new ye.Command.Ar.Form.Tip.Tipchars(">"),t.stemConn=new ye.Command.Ar.Form.Conn.Connchars("-"),t.reverseAboveAndBelow=!1,t.arrowObjectModifiers=A.empty,this.forms.foreach((function(t){t.toShape(e)})),t.pathActionForBeforeSegment.isDefined||(t.pathActionForBeforeSegment=new x.Some(new ye.PosDecor(new ye.Pos.Coord(new ye.Coord.C,A.empty.append(new ye.Pos.ConnectObject(new ye.Object(t.arrowObjectModifiers,t.stemConn.getObject(e))))),new ye.Decor(A.empty)))),t.labelsForNextSegmentOnly=new x.Some(new ye.Command.Path.Labels(A.empty.append(new ye.Command.Path.Label.At(new ye.Pos.Place(new ye.Place(1,1,new ye.Place.Factor(0),new ye.Slide(x.empty))),t.tailTip.getObject(e),x.empty)))),t.labelsForLastSegmentOnly=new x.Some(new ye.Command.Path.Labels(A.empty.append(new ye.Command.Path.Label.At(new ye.Pos.Place(new ye.Place(1,1,new ye.Place.Factor(1),new ye.Slide(x.empty))),t.headTip.getObject(e),x.empty)))),this.path.toShape(e),t.c=o,t.p=a,t.origin=n,t.xBase=r,t.yBase=i}}),Vt(ye.Command.Ar.Form.BuildArrow,{toShape:function(e){var t=e.env;t.arrowVariant=this.variant,t.tailTip=this.tailTip,t.stemConn=this.stemConn,t.headTip=this.headTip}}),Vt(ye.Command.Ar.Form.ChangeVariant,{toShape:function(e){e.env.arrowVariant=this.variant}}),Vt(ye.Command.Ar.Form.ChangeStem,{toShape:function(e){e.env.stemConn=new ye.Command.Ar.Form.Conn.Connchars(this.connchar)}}),Vt(ye.Command.Ar.Form.DashArrowStem,{toShape:function(e){}}),Vt(ye.Command.Ar.Form.CurveArrow,{toShape:function(e){var t=e.env,n=ze.measure.em2length(2*ze.measure.length2em(this.dist));t.pathActionForBeforeSegment=new x.Some(new ye.PosDecor(new ye.Pos.Coord(new ye.Coord.C,A.empty.append(new ye.Pos.ConnectObject(new ye.Object(t.arrowObjectModifiers,new ye.ObjectBox.Curve(A.empty,A.empty.append(new ye.ObjectBox.Curve.Object.Connect(t.stemConn.getObject(e))),A.empty.append(new ye.ObjectBox.Curve.PosList.Pos(new ye.Pos.Coord(new ye.Coord.Group(new ye.PosDecor(new ye.Pos.Coord(new ye.Coord.C,A.empty.append(new ye.Pos.ConnectObject(new ye.Object(A.empty,new ye.ObjectBox.Dir("","")))).append(new ye.Pos.Place(new ye.Place(0,0,void 0,new ye.Slide(x.empty)))).append(new ye.Pos.Plus(new ye.Coord.Vector(new ye.Vector.Dir(this.direction,n))))),new ye.Decor(A.empty))),A.empty)))))))),new ye.Decor(A.empty)))}}),Vt(ye.Command.Ar.Form.CurveFitToDirection,{toShape:function(e){var t=e.env;t.pathActionForBeforeSegment=new x.Some(new ye.PosDecor(new ye.Pos.Coord(new ye.Coord.C,A.empty.append(new ye.Pos.ConnectObject(new ye.Object(t.arrowObjectModifiers,new ye.ObjectBox.Curve(A.empty,A.empty.append(new ye.ObjectBox.Curve.Object.Connect(t.stemConn.getObject(e))),A.empty.append(new ye.ObjectBox.Curve.PosList.Pos(new ye.Pos.Coord(new ye.Coord.C,A.empty.append(new ye.Pos.SwapPAndC(new ye.Coord.C)).append(new ye.Pos.Plus(new ye.Coord.Vector(new ye.Vector.Dir(this.outDirection,"3pc"))))))).append(new ye.ObjectBox.Curve.PosList.Pos(new ye.Pos.Coord(new ye.Coord.C,A.empty.append(new ye.Pos.SwapPAndC(new ye.Coord.C)).append(new ye.Pos.Plus(new ye.Coord.Vector(new ye.Vector.Dir(this.inDirection,"3pc")))))))))))),new ye.Decor(A.empty)))}}),Vt(ye.Command.Ar.Form.CurveWithControlPoints,{toShape:function(e){var t=e.env,n=t.duplicate();n.startCapturePositions();var r=new vt(pt.none,n);this.coord.position(r);var i=n.endCapturePositions();i=i.append(n.c);var a=A.empty;i.reverse().foreach((function(e){var n=t.inverseAbsVector(e.x,e.y);a=a.prepend(new ye.ObjectBox.Curve.PosList.Pos(new ye.Pos.Coord(new ye.Coord.Vector(new ye.Vector.InCurBase(n.x,n.y)),A.empty)))})),t.pathActionForBeforeSegment=new x.Some(new ye.PosDecor(new ye.Pos.Coord(new ye.Coord.C,A.empty.append(new ye.Pos.ConnectObject(new ye.Object(t.arrowObjectModifiers,new ye.ObjectBox.Curve(A.empty,A.empty.append(new ye.ObjectBox.Curve.Object.Connect(t.stemConn.getObject(e))),a))))),new ye.Decor(A.empty)))}}),Vt(ye.Command.Ar.Form.AddShape,{toShape:function(e){e.env.arrowObjectModifiers=A.empty.append(this.shape)}}),Vt(ye.Command.Ar.Form.AddModifiers,{toShape:function(e){e.env.arrowObjectModifiers=this.modifiers}}),Vt(ye.Command.Ar.Form.Slide,{toShape:function(e){e.env.segmentSlideEm=new x.Some(ze.measure.length2em(this.slideDimen))}}),Vt(ye.Command.Ar.Form.LabelAt,{toShape:function(e){e.env.labelsForEverySegment=new x.Some(new ye.Command.Path.Labels(A.empty.append(new ye.Command.Path.Label.At(new ye.Pos.Place(this.anchor),this.it,x.empty))))}}),Vt(ye.Command.Ar.Form.LabelAbove,{toShape:function(e){var t,n=e.env;t=n.reverseAboveAndBelow?new ye.Command.Path.Label.Below(new ye.Pos.Place(this.anchor),this.it,x.empty):new ye.Command.Path.Label.Above(new ye.Pos.Place(this.anchor),this.it,x.empty),n.labelsForEverySegment=new x.Some(new ye.Command.Path.Labels(A.empty.append(t)))}}),Vt(ye.Command.Ar.Form.LabelBelow,{toShape:function(e){var t,n=e.env;t=n.reverseAboveAndBelow?new ye.Command.Path.Label.Above(new ye.Pos.Place(this.anchor),this.it,x.empty):new ye.Command.Path.Label.Below(new ye.Pos.Place(this.anchor),this.it,x.empty),n.labelsForEverySegment=new x.Some(new ye.Command.Path.Labels(A.empty.append(t)))}}),Vt(ye.Command.Ar.Form.ReverseAboveAndBelow,{toShape:function(e){e.env.reverseAboveAndBelow=!0}}),Vt(ye.Command.Ar.Form.Conn.Connchars,{getObject:function(e){var t=e.env,n=new ye.ObjectBox.Dir(t.arrowVariant,this.connchars);return new ye.Object(t.arrowObjectModifiers,n)}}),Vt(ye.Command.Ar.Form.Conn.Object,{getObject:function(e){var t=e.env.arrowObjectModifiers.concat(this.object.modifiers);return new ye.Object(t,this.object.object)}}),Vt(ye.Command.Ar.Form.Conn.Dir,{getObject:function(e){var t=e.env,n=this.dir,r=n;return""===n.variant&&""!==t.arrowVariant&&(r=new ye.ObjectBox.Dir(t.arrowVariant,n.main)),new ye.Object(t.arrowObjectModifiers,r)}}),Vt(ye.Command.Ar.Form.Tip.Tipchars,{getObject:function(e){var t=e.env,n=new ye.ObjectBox.Dir(t.arrowVariant,this.tipchars);return new ye.Object(t.arrowObjectModifiers,n)}}),Vt(ye.Command.Ar.Form.Tip.Object,{getObject:function(e){var t=e.env.arrowObjectModifiers.concat(this.object.modifiers);return new ye.Object(t,this.object.object)}}),Vt(ye.Command.Ar.Form.Tip.Dir,{getObject:function(e){var t=e.env,n=this.dir,r=n;return""===n.variant&&""!==t.arrowVariant&&(r=new ye.ObjectBox.Dir(t.arrowVariant,n.main)),new ye.Object(t.arrowObjectModifiers,r)}}),Vt(ye.Command.Path,{toShape:function(e){var t=e.env,n=t.origin,r=t.xBase,i=t.yBase,a=t.p,o=t.c;t.pathActionForBeforeSegment=x.empty,t.pathActionForAfterSegment=x.empty,t.labelsForNextSegmentOnly=x.empty,t.labelsForLastSegmentOnly=x.empty,t.labelsForEverySegment=x.empty,t.segmentSlideEm=x.empty,t.lastTurnDiag=x.empty,this.path.toShape(e),t.c=o,t.p=a,t.origin=n,t.xBase=r,t.yBase=i}}),Vt(ye.Command.AfterPath,{toShape:function(e){this.path.toShape(e),this.decor.toShape(e)}}),Vt(ye.Command.Path.Path,{toShape:function(e){this.pathElements.foreach((function(t){t.toShape(e)}))}}),Vt(ye.Command.Path.SetBeforeAction,{toShape:function(e){e.env.pathActionForBeforeSegment=new x.Some(this.posDecor)}}),Vt(ye.Command.Path.SetAfterAction,{toShape:function(e){e.env.pathActionForAfterSegment=new x.Some(this.posDecor)}}),Vt(ye.Command.Path.AddLabelNextSegmentOnly,{toShape:function(e){e.env.labelsForNextSegmentOnly=new x.Some(this.labels)}}),Vt(ye.Command.Path.AddLabelLastSegmentOnly,{toShape:function(e){e.env.labelsForLastSegmentOnly=new x.Some(this.labels)}}),Vt(ye.Command.Path.AddLabelEverySegment,{toShape:function(e){e.env.labelsForEverySegment=new x.Some(this.labels)}}),Vt(ye.Command.Path.StraightSegment,{toShape:function(e){var t=e.env;this.segment.setupPositions(e);var n=t.c;t.pathActionForBeforeSegment.foreach((function(t){t.toShape(e)})),t.labelsForNextSegmentOnly.foreach((function(n){n.toShape(e),t.labelsForNextSegmentOnly=x.empty})),t.labelsForEverySegment.foreach((function(t){t.toShape(e)})),t.c=n,t.pathActionForAfterSegment.foreach((function(t){t.toShape(e)})),this.segment.toLabelsShape(e)}}),Vt(ye.Command.Path.LastSegment,{toShape:function(e){var t=e.env;this.segment.setupPositions(e);var n=t.c;t.pathActionForBeforeSegment.foreach((function(t){t.toShape(e)})),t.labelsForNextSegmentOnly.foreach((function(n){n.toShape(e),t.labelsForNextSegmentOnly=x.empty})),t.labelsForLastSegmentOnly.foreach((function(n){n.toShape(e),t.labelsForNextSegmentOnly=x.empty})),t.labelsForEverySegment.foreach((function(t){t.toShape(e)})),t.c=n,t.pathActionForAfterSegment.foreach((function(t){t.toShape(e)})),this.segment.toLabelsShape(e)}}),Vt(ye.Command.Path.TurningSegment,{toShape:function(e){var t=e.env,n=t.c;this.segment.pos.toShape(e),t.p=n;var r=this.turn.explicitizedCircle(e),i=this.turn.radius.radius(e);t.lastTurnDiag=new x.Some(r.endDiag);var a=r.startVector(e),o=r.endVector(e),u=t.segmentSlideEm.getOrElse(0);this.segment.slide.dimen.foreach((function(e){u=ze.measure.length2em(e),t.segmentSlideEm=new x.Some(u)})),0!==u&&(t.p=t.p.move(t.p.x-u*a.y,t.p.y+u*a.x),t.c=t.c.move(t.c.x-u*o.y,t.c.y+u*o.x),i="^"===r.orient?Math.max(0,i-u):Math.max(0,i+u));var c,h=t.p.edgePoint(t.p.x+a.x,t.p.y+a.y),l=t.c,m=r.relativeStartPoint(e,i),p=r.relativeEndPoint(e,i),f=r.relativeEndPoint(e,i+("^"===r.orient?u:-u)),d=a.x*o.y-a.y*o.x;if(Math.abs(d)<s.machinePrecision)c=0;else{var y=l.x-h.x+m.x-p.x,v=l.y-h.y+m.y-p.y;(c=(o.y*y-o.x*v)/d)<0&&(c=0)}var g=h.x-m.x+c*a.x,w=h.y-m.y+c*a.y,S=(r.toDropShape(e,g,w,i),new nt.Point(g+f.x,w+f.y));t.c=new nt.Point(g+m.x,w+m.y),t.pathActionForBeforeSegment.foreach((function(t){t.toShape(e)})),t.labelsForNextSegmentOnly.foreach((function(n){n.toShape(e),t.labelsForNextSegmentOnly=x.empty})),t.labelsForEverySegment.foreach((function(t){t.toShape(e)})),t.c=S,t.pathActionForAfterSegment.foreach((function(t){t.toShape(e)})),this.segment.toLabelsShape(e)}}),Vt(ye.Command.Path.Turn.Cir,{explicitizedCircle:function(e){var t,n,r,i=e.env;return t=this.cir.startDiag.isEmpty?i.lastTurnDiag.getOrElse(new ye.Diag.R):this.cir.startDiag,n=this.cir.orient,r=this.cir.endDiag.isEmpty?t.turn(n):this.cir.endDiag,new ye.ObjectBox.Cir.Cir.Segment(t,n,r)}}),Vt(ye.ObjectBox.Cir.Cir.Segment,{startVector:function(e){var t=this.startDiag.angle(e);return{x:Math.cos(t),y:Math.sin(t)}},endVector:function(e){var t=this.endDiag.angle(e);return{x:Math.cos(t),y:Math.sin(t)}},relativeStartPointAngle:function(e){return this.startPointDegree(e)/180*Math.PI},relativeStartPoint:function(e,t){var n=this.startPointDegree(e)/180*Math.PI;return{x:t*Math.cos(n),y:t*Math.sin(n)}},relativeEndPoint:function(e,t){var n;return n=this.endPointDegree(e,this.relativeStartPointAngle(e))/180*Math.PI,{x:t*Math.cos(n),y:t*Math.sin(n)}}}),Vt(ye.Command.Path.Turn.Diag,{explicitizedCircle:function(e){var t,n,r,i=e.env,a=(t=this.diag.isEmpty?i.lastTurnDiag.getOrElse(new ye.Diag.R):this.diag).angle(e);return n=(i.c.x-i.p.x)*Math.sin(a)-(i.c.y-i.p.y)*Math.cos(a)<0?"^":"_",r=t.turn(n),new ye.ObjectBox.Cir.Cir.Segment(t,n,r)}}),Vt(ye.Command.Path.TurnRadius.Default,{radius:function(e){return ze.measure.turnradius}}),Vt(ye.Command.Path.TurnRadius.Dimen,{radius:function(e){return ze.measure.length2em(this.dimen)}}),Vt(ye.Command.Path.Segment,{setupPositions:function(e){var t=e.env;t.p=t.c,this.pos.toShape(e);var n=t.p,r=t.c,i=r.x-n.x,a=r.y-n.y,o=Math.atan2(a,i)+Math.PI/2,u=t.segmentSlideEm.getOrElse(0);this.slide.dimen.foreach((function(e){u=ze.measure.length2em(e),t.segmentSlideEm=new x.Some(u)})),0!==u&&(n=n.move(n.x+u*Math.cos(o),n.y+u*Math.sin(o)),r=r.move(r.x+u*Math.cos(o),r.y+u*Math.sin(o))),t.p=n,t.c=r},toLabelsShape:function(e){var t=e.env,n=t.c,r=t.p;this.labels.toShape(e),t.c=n,t.p=r}}),Vt(ye.Command.Path.Labels,{toShape:function(e){this.labels.foreach((function(t){t.toShape(e)}))}}),Vt(ye.Command.Path.Label,{toShape:function(e){var t=e.env,n=t.p,r=t.c,i=this.anchor.toShape(e),a=this.getLabelMargin(e);if(0!==a){var o;o=(w=t.lastCurve).isNone?Math.atan2(r.y-n.y,r.x-n.x)+Math.PI/2:w.angle(i)+Math.PI/2+(a>0?0:Math.PI);r=t.c;var u=new vt(pt.none,t);this.it.toDropShape(u);var s=u.shape,c=s.getBoundingBox();if(void 0!==c){var h=c.x-r.x,l=c.y-r.y,m=c.l,p=c.r,f=c.u,d=c.d,y=Math.cos(o),v=Math.sin(o),x=Math.min((h-m)*y+(l-d)*v,(h-m)*y+(l+f)*v,(h+p)*y+(l-d)*v,(h+p)*y+(l+f)*v),g=Math.abs(a)-x;t.c=t.c.move(r.x+g*y,r.y+g*v),e.appendShapeToFront(new pt.TranslateShape(g*y,g*v,s))}}else this.it.toDropShape(e);var w=t.lastCurve;this.shouldSliceHole&&w.isDefined&&void 0!==i&&w.sliceHole(t.c,i),this.aliasOption.foreach((function(e){t.savePos(e,new Tt.Position(t.c))}))}}),Vt(ye.Command.Path.Label.Above,{getLabelMargin:function(e){return e.env.labelmargin},shouldSliceHole:!1}),Vt(ye.Command.Path.Label.Below,{getLabelMargin:function(e){return-e.env.labelmargin},shouldSliceHole:!1}),Vt(ye.Command.Path.Label.At,{getLabelMargin:function(e){return 0},shouldSliceHole:!0}),Vt(ye.Command.Xymatrix,{toShape:function(e){var t=e.env;if(void 0===t.c)return pt.none;var n=t.duplicate(),r=new vt(pt.none,n);n.xymatrixPrefix="",n.xymatrixRowSepEm=ze.measure.length2em("2pc"),n.xymatrixColSepEm=ze.measure.length2em("2pc"),n.xymatrixPretendEntryHeight=x.empty,n.xymatrixPretendEntryWidth=x.empty,n.xymatrixFixedRow=!1,n.xymatrixFixedCol=!1,n.xymatrixOrientationAngle=0,n.xymatrixEntryModifiers=A.empty,this.setup.foreach((function(e){e.toShape(r)}));var i,a,o=n.xymatrixOrientationAngle,u=0,s=0,c=new _t(this.rows.map((function(e){s+=1,a=0;var t=new _t.Row(e.entries.map((function(e){a+=1;var t=n.duplicate();t.origin={x:0,y:0},t.p=t.c=Bt.originPosition,t.angle=0,t.lastCurve=At.none,t.xymatrixRow=s,t.xymatrixCol=a;var r,i,o,u,c=new vt(pt.none,t),h=e.toShape(c),l=t.c;if(n.xymatrixPretendEntryHeight.isDefined){var m=n.xymatrixPretendEntryHeight.get;o=m/2,u=m/2}else o=l.u,u=l.d;if(n.xymatrixPretendEntryWidth.isDefined){var p=n.xymatrixPretendEntryWidth.get;r=p/2,i=p/2}else r=l.l,i=l.r;var f=new nt.Rect(0,0,{l:r,r:i,u:o,d:u});return new _t.Entry(t.c,h,e.decor,f)})),o);return u=Math.max(u,a),t})),o);if(0===(i=s))return pt.none;c.rows.foreach((function(e){a=0,e.entries.foreach((function(e){a+=1,c.getColumn(a).addEntry(e)}))}));var h,l,m=n.xymatrixColSepEm,p=[],f=t.c.x;if(p.push(f),n.xymatrixFixedCol){var d=0,y=0;c.columns.foreach((function(e){d=Math.max(d,e.getL()),y=Math.max(y,e.getR())})),c.columns.tail.foreach((function(e){f=f+y+m+d,p.push(f)})),h=d,l=p[p.length-1]+y}else{var v=c.columns.head;c.columns.tail.foreach((function(e){f=f+v.getR()+m+e.getL(),p.push(f),v=e})),h=c.columns.head.getL(),l=f+c.columns.at(u-1).getR()-p[0]}var g,w,S=n.xymatrixRowSepEm,C=[],b=t.c.y;if(C.push(b),n.xymatrixFixedRow){var k=0,M=0;c.rows.foreach((function(e){k=Math.max(k,e.getU()),M=Math.max(M,e.getD())})),c.rows.tail.foreach((function(e){b-=M+S+k,C.push(b)})),g=k,w=C[0]-C[C.length-1]+M}else{var P=c.rows.head;c.rows.tail.foreach((function(e){b-=P.getD()+S+e.getU(),C.push(b),P=e})),g=c.rows.head.getU(),w=C[0]-b+c.rows.at(i-1).getD()}t.c=new nt.Rect(t.c.x,t.c.y,{l:h,r:l,u:g,d:w});var B=n.xymatrixPrefix,O=Math.cos(o),E=Math.sin(o),L=0;c.rows.foreach((function(e){var t=0;e.entries.foreach((function(e){var r=p[t],i=C[L],a=r*O-i*E,o=r*E+i*O,u=t+1,s=L+1,c=new Tt.Position(e.c.move(a,o));n.savePos(s+","+u,c),n.savePos(B+s+","+u,c),t+=1})),L+=1})),r=new vt(pt.none,n);L=0;c.rows.foreach((function(e){var t=0;e.entries.foreach((function(e){var i=p[t],a=C[L],o=i*O-a*E,u=i*E+a*O,s=t+1,c=L+1,h=new pt.TranslateShape(o,u,e.objectShape);r.appendShapeToFront(h),n.c=e.c.move(o,u),n.xymatrixRow=c,n.xymatrixCol=s,e.decor.toShape(r),t+=1})),L+=1}));var j=r.shape;return e.appendShapeToFront(j),t.savedPosition=n.savedPosition,j}});var _t=function(){function e(t,n){Rt(this,e),this.rows=t,this.columns=A.empty,this.orientation=n}return Gt(e,[{key:"getColumn",value:function(t){if(this.columns.length()>=t)return this.columns.at(t-1);var n=new e.Column(this.orientation);return this.columns=this.columns.append(n),n}},{key:"toString",value:function(){return"Xymatrix{\n"+this.rows.mkString("\\\\\n")+"\n}"}}]),e}();function It(e,t,n){var r=[],i={lastNoSuccess:void 0,whiteSpaceRegex:s.whiteSpaceRegex,createTextNode:function(t){var n=new o.Z(t,e.stack.env,e.configuration).mml();return n.xypicTextObjectId=ze.textObjectIdCounter,ze.textObjectIdCounter++,r.push(n),n}},a=new Z(e.string,e.i,i),c=Y.parse(t,a);if(e.i=c.next.offset,c.successful)return e.create(n,c.get(),r);var h=i.lastNoSuccess.next.pos().lineContents(),l=i.lastNoSuccess.msg+'. Parse error at or near "'+h+'".';throw new u.Z("SyntaxError",l)}_t.Row=function(){function e(t,n){Rt(this,e),this.entries=t,this.orientation=n,We(this,"getU"),We(this,"getD")}return Gt(e,[{key:"getU",value:function(){var e=this.orientation,t=0;return this.entries.foreach((function(n){t=Math.max(t,n.getU(e))})),t}},{key:"getD",value:function(){var e=this.orientation,t=0;return this.entries.foreach((function(n){t=Math.max(t,n.getD(e))})),t}},{key:"toString",value:function(){return this.entries.mkString(" & ")}}]),e}(),_t.Column=function(){function e(t){Rt(this,e),this.entries=A.empty,this.orientation=t,We(this,"getL"),We(this,"getR")}return Gt(e,[{key:"addEntry",value:function(e){this.entries=this.entries.append(e),this.getL.reset,this.getR.reset}},{key:"getL",value:function(){var e=this.orientation,t=0;return this.entries.foreach((function(n){t=Math.max(t,n.getL(e))})),t}},{key:"getR",value:function(){var e=this.orientation,t=0;return this.entries.foreach((function(n){t=Math.max(t,n.getR(e))})),t}},{key:"toString",value:function(){return this.entries.mkString(" \\\\ ")}}]),e}(),_t.Entry=function(){function e(t,n,r,i){Rt(this,e),this.c=t,this.objectShape=n,this.decor=r,this.frame=i}return Gt(e,[{key:"getDistanceToEdgePoint",value:function(e,t){var n=e.edgePoint(e.x+Math.cos(t),e.y+Math.sin(t)),r=n.x-e.x,i=n.y-e.y;return Math.sqrt(r*r+i*i)}},{key:"getU",value:function(e){return 0===e?this.frame.u:this.getDistanceToEdgePoint(this.frame,e+Math.PI/2)}},{key:"getD",value:function(e){return 0===e?this.frame.d:this.getDistanceToEdgePoint(this.frame,e-Math.PI/2)}},{key:"getL",value:function(e){return 0===e?this.frame.l:this.getDistanceToEdgePoint(this.frame,e+Math.PI)}},{key:"getR",value:function(e){return 0===e?this.frame.r:this.getDistanceToEdgePoint(this.frame,e)}},{key:"toString",value:function(){return this.objectShape.toString()+" "+this.decor}}]),e}(),Vt(ye.Command.Xymatrix.Setup.Prefix,{toShape:function(e){e.env.xymatrixPrefix=this.prefix}}),Vt(ye.Command.Xymatrix.Setup.ChangeSpacing.Row,{toShape:function(e){var t=e.env;t.xymatrixRowSepEm=this.addop.applyToDimen(t.xymatrixRowSepEm,ze.measure.length2em(this.dimen))}}),Vt(ye.Command.Xymatrix.Setup.ChangeSpacing.Column,{toShape:function(e){var t=e.env;t.xymatrixColSepEm=this.addop.applyToDimen(t.xymatrixColSepEm,ze.measure.length2em(this.dimen))}}),Vt(ye.Command.Xymatrix.Setup.ChangeSpacing.RowAndColumn,{toShape:function(e){var t=e.env,n=this.addop.applyToDimen(t.xymatrixRowSepEm,ze.measure.length2em(this.dimen));t.xymatrixRowSepEm=n,t.xymatrixColSepEm=n}}),Vt(ye.Command.Xymatrix.Setup.PretendEntrySize.Height,{toShape:function(e){e.env.xymatrixPretendEntryHeight=new x.Some(ze.measure.length2em(this.dimen))}}),Vt(ye.Command.Xymatrix.Setup.PretendEntrySize.Width,{toShape:function(e){e.env.xymatrixPretendEntryWidth=new x.Some(ze.measure.length2em(this.dimen))}}),Vt(ye.Command.Xymatrix.Setup.PretendEntrySize.HeightAndWidth,{toShape:function(e){var t=new x.Some(ze.measure.length2em(this.dimen));e.env.xymatrixPretendEntryHeight=t,e.env.xymatrixPretendEntryWidth=t}}),Vt(ye.Command.Xymatrix.Setup.FixGrid.Row,{toShape:function(e){e.env.xymatrixFixedRow=!0}}),Vt(ye.Command.Xymatrix.Setup.FixGrid.Column,{toShape:function(e){e.env.xymatrixFixedCol=!0}}),Vt(ye.Command.Xymatrix.Setup.FixGrid.RowAndColumn,{toShape:function(e){e.env.xymatrixFixedRow=!0,e.env.xymatrixFixedCol=!0}}),Vt(ye.Command.Xymatrix.Setup.AdjustEntrySize.Margin,{toShape:function(e){var t=e.env;t.objectmargin=this.addop.applyToDimen(t.objectmargin,ze.measure.length2em(this.dimen))}}),Vt(ye.Command.Xymatrix.Setup.AdjustEntrySize.Width,{toShape:function(e){var t=e.env;t.objectwidth=this.addop.applyToDimen(t.objectwidth,ze.measure.length2em(this.dimen))}}),Vt(ye.Command.Xymatrix.Setup.AdjustEntrySize.Height,{toShape:function(e){var t=e.env;t.objectheight=this.addop.applyToDimen(t.objectheight,ze.measure.length2em(this.dimen))}}),Vt(ye.Command.Xymatrix.Setup.AdjustLabelSep,{toShape:function(e){var t=e.env;t.labelmargin=this.addop.applyToDimen(t.labelmargin,ze.measure.length2em(this.dimen))}}),Vt(ye.Command.Xymatrix.Setup.SetOrientation,{toShape:function(e){e.env.xymatrixOrientationAngle=this.direction.angle(e)}}),Vt(ye.Command.Xymatrix.Setup.AddModifier,{toShape:function(e){var t=e.env;t.xymatrixEntryModifiers=t.xymatrixEntryModifiers.prepend(this.modifier)}}),Vt(ye.Command.Xymatrix.Entry.SimpleEntry,{toShape:function(e){var t=e.env,n=ze.measure.em2length(t.objectmargin+t.objectwidth),r=ze.measure.em2length(t.objectmargin+t.objectheight),i=new ye.Modifier.AddOp(new ye.Modifier.AddOp.GrowTo,new ye.Modifier.AddOp.VactorSize(new ye.Vector.Abs(n,r))),a=ze.measure.em2length(t.objectmargin),o=new ye.Modifier.AddOp(new ye.Modifier.AddOp.Grow,new ye.Modifier.AddOp.VactorSize(new ye.Vector.Abs(a,a))),u=this.modifiers.concat(t.xymatrixEntryModifiers).prepend(i).prepend(o);return new ye.Object(u,this.objectbox).toDropShape(e)}}),Vt(ye.Command.Xymatrix.Entry.EmptyEntry,{toShape:function(e){var t=e.env,n=ze.measure.em2length(t.objectmargin+t.objectwidth),r=ze.measure.em2length(t.objectmargin+t.objectheight),i=new ye.Modifier.AddOp(new ye.Modifier.AddOp.GrowTo,new ye.Modifier.AddOp.VactorSize(new ye.Vector.Abs(n,r))),a=ze.measure.em2length(t.objectmargin),o=new ye.Modifier.AddOp(new ye.Modifier.AddOp.Grow,new ye.Modifier.AddOp.VactorSize(new ye.Vector.Abs(a,a))),u=t.xymatrixEntryModifiers.prepend(i).prepend(o);return new ye.Object(u,new ye.ObjectBox.Empty).toDropShape(e)}}),Vt(ye.Command.Xymatrix.Entry.ObjectEntry,{toShape:function(e){return this.object.toDropShape(e)}}),Vt(ye.Command.Twocell,{toShape:function(e){var t=e.env;if(void 0===t.c)return pt.none;var n=t.duplicate(),r=new vt(pt.none,n);n.twocellmodmapobject=t.twocellmodmapobject||new ye.Object(A.empty,new ye.ObjectBox.Dir("","|")),n.twocellhead=t.twocellhead||new ye.Object(A.empty,new ye.ObjectBox.Dir("",">")),n.twocelltail=t.twocelltail||new ye.Object(A.empty,new ye.ObjectBox.Dir("","")),n.twocellarrowobject=t.twocellarrowobject||new ye.Object(A.empty,new ye.ObjectBox.Dir("","=>")),n.twocellUpperCurveObjectSpacer=t.twocellUpperCurveObjectSpacer,n.twocellUpperCurveObject=t.twocellUpperCurveObject,n.twocellLowerCurveObjectSpacer=t.twocellLowerCurveObjectSpacer,n.twocellLowerCurveObject=t.twocellLowerCurveObject,n.twocellUpperLabel=x.empty,n.twocellLowerLabel=x.empty,n.twocellCurvatureEm=x.empty,n.twocellShouldDrawCurve=!0,n.twocellShouldDrawModMap=!1,this.switches.foreach((function(e){e.setup(r)})),this.twocell.toShape(r,this.arrow),e.appendShapeToFront(r.shape)}}),Vt(ye.Command.Twocell.Hops2cell,{toShape:function(e,t){var n=e.env,r=n.c,i=n.angle,a=n.c,o=this.targetPosition(e);if(void 0!==a&&void 0!==o){var u=o.x-a.x,s=o.y-a.y;if(0!==u||0!==s){var c=new nt.Point(a.x+.5*u,a.y+.5*s),h=Math.atan2(s,u),l=h+Math.PI/2,m=n.twocellCurvatureEm.getOrElse(this.getDefaultCurvature()),p=Math.cos(l),f=Math.sin(l),d=this.getUpperControlPoint(a,o,c,m,p,f),y=this.getLowerControlPoint(a,o,c,m,p,f);if(n.twocellShouldDrawCurve){var v,x;if(x=void 0===(v=n.twocellUpperCurveObjectSpacer)?new ye.Object(A.empty,new ye.ObjectBox.Dir("","-")):void 0!==n.twocellUpperCurveObject?n.twocellUpperCurveObject.getOrElse(void 0):void 0,this.toUpperCurveShape(e,a,d,o,v,x),n.lastCurve.isDefined){n.angle=h;var g=this.getUpperLabelPosition(a,o,c,m,p,f),w=this.getUpperLabelAngle(l,a,o,c,m,p,f);n.twocellUpperLabel.foreach((function(t){t.toShape(e,g,Math.cos(w),Math.sin(w),h)})),this.hasUpperTips&&t.toUpperTipsShape(e)}if(x=void 0===(v=n.twocellLowerCurveObjectSpacer)?new ye.Object(A.empty,new ye.ObjectBox.Dir("","-")):void 0!==n.twocellLowerCurveObject?n.twocellLowerCurveObject.getOrElse(void 0):void 0,this.toLowerCurveShape(e,a,y,o,v,x),n.lastCurve.isDefined){n.angle=h;var S=this.getLowerLabelPosition(a,o,c,m,p,f),C=this.getLowerLabelAngle(l,a,o,c,m,p,f);n.twocellLowerLabel.foreach((function(t){t.toShape(e,S,Math.cos(C),Math.sin(C),h)})),this.hasLowerTips&&t.toLowerTipsShape(e)}}n.c=this.getDefaultArrowPoint(a,o,c,m,p,f),n.angle=l+Math.PI;var b=c;t.toArrowShape(e,b),n.c=r,n.angle=i}}},_toCurveShape:function(e,t,n,r,i,a){var o=e.env,u=new Ot.QuadBezier(t,n,r),s=u.tOfShavedStart(t),c=u.tOfShavedEnd(r);if(void 0===s||void 0===c||s>=c)o.lastCurve=At.none;else{var h=u.toShape(e,i,a);o.lastCurve=new At.QuadBezier(u,s,c,h)}},targetPosition:function(e){var t=e.env,n=t.xymatrixRow,r=t.xymatrixCol;if(void 0===n||void 0===r)throw new TeXError("ExecutionError","rows and columns not found for hops ["+this.hops+"]");for(var i=0;i<this.hops.length;i++)switch(this.hops[i]){case"u":n-=1;break;case"d":n+=1;break;case"l":r-=1;break;case"r":r+=1}var a=n+","+r;return e.env.lookupPos(a,'in entry "'+t.xymatrixRow+","+t.xymatrixCol+'": No '+this+" (is "+a+") from here.").position(e)}}),Vt(ye.Command.Twocell.Twocell,{getUpperControlPoint:function(e,t,n,r,i,a){return new nt.Point(n.x+r*i,n.y+r*a)},getLowerControlPoint:function(e,t,n,r,i,a){return new nt.Point(n.x-r*i,n.y-r*a)},getUpperLabelPosition:function(e,t,n,r,i,a){return new nt.Point(n.x+.5*r*i,n.y+.5*r*a)},getLowerLabelPosition:function(e,t,n,r,i,a){return new nt.Point(n.x-.5*r*i,n.y-.5*r*a)},getUpperLabelAngle:function(e,t,n,r,i,a,o){return e+(i<0?Math.PI:0)},getLowerLabelAngle:function(e,t,n,r,i,a,o){return e+(i<0?0:Math.PI)},getDefaultArrowPoint:function(e,t,n,r,i,a){return n},toUpperCurveShape:function(e,t,n,r,i,a){this._toCurveShape(e,t,n,r,i,a)},toLowerCurveShape:function(e,t,n,r,i,a){this._toCurveShape(e,t,n,r,i,a)},getDefaultCurvature:function(){return 3.5*ze.measure.lineElementLength},hasUpperTips:!0,hasLowerTips:!0}),Vt(ye.Command.Twocell.UpperTwocell,{getUpperControlPoint:function(e,t,n,r,i,a){return new nt.Point(n.x+r*i,n.y+r*a)},getLowerControlPoint:function(e,t,n,r,i,a){return n},getUpperLabelPosition:function(e,t,n,r,i,a){return new nt.Point(n.x+.5*r*i,n.y+.5*r*a)},getLowerLabelPosition:function(e,t,n,r,i,a){return n},getUpperLabelAngle:function(e,t,n,r,i,a,o){return e+(i<0?Math.PI:0)},getLowerLabelAngle:function(e,t,n,r,i,a,o){return e+(i<0?0:Math.PI)},getDefaultArrowPoint:function(e,t,n,r,i,a){return new nt.Point(n.x+.25*r*i,n.y+.25*r*a)},toUpperCurveShape:function(e,t,n,r,i,a){this._toCurveShape(e,t,n,r,i,a)},toLowerCurveShape:function(e,t,n,r,i,a){var o=t.edgePoint(r.x,r.y),u=r.edgePoint(t.x,t.y);o.x!==u.x||o.y!==u.y?e.env.lastCurve=new At.Line(o,u,t,r,void 0):e.env.lastCurve=At.none},getDefaultCurvature:function(){return 7*ze.measure.lineElementLength},hasUpperTips:!0,hasLowerTips:!1}),Vt(ye.Command.Twocell.LowerTwocell,{getUpperControlPoint:function(e,t,n,r,i,a){return n},getLowerControlPoint:function(e,t,n,r,i,a){return new nt.Point(n.x+r*i,n.y+r*a)},getUpperLabelPosition:function(e,t,n,r,i,a){return n},getLowerLabelPosition:function(e,t,n,r,i,a){return new nt.Point(n.x+.5*r*i,n.y+.5*r*a)},getUpperLabelAngle:function(e,t,n,r,i,a,o){return e+(i<0?0:Math.PI)},getLowerLabelAngle:function(e,t,n,r,i,a,o){return e+(i<0?Math.PI:0)},getDefaultArrowPoint:function(e,t,n,r,i,a){return new nt.Point(n.x+.25*r*i,n.y+.25*r*a)},toUpperCurveShape:function(e,t,n,r,i,a){var o=t.edgePoint(r.x,r.y),u=r.edgePoint(t.x,t.y);o.x!==u.x||o.y!==u.y?e.env.lastCurve=new At.Line(o,u,t,r,void 0):e.env.lastCurve=At.none},toLowerCurveShape:function(e,t,n,r,i,a){this._toCurveShape(e,t,n,r,i,a)},getDefaultCurvature:function(){return-7*ze.measure.lineElementLength},hasUpperTips:!1,hasLowerTips:!0}),Vt(ye.Command.Twocell.CompositeMap,{getUpperControlPoint:function(e,t,n,r,i,a){var o=this.getMidBoxSize();return new nt.Ellipse(n.x+r*i,n.y+r*a,o,o,o,o)},getLowerControlPoint:function(e,t,n,r,i,a){var o=this.getMidBoxSize();return new nt.Ellipse(n.x+r*i,n.y+r*a,o,o,o,o)},getUpperLabelPosition:function(e,t,n,r,i,a){var o=n.x+r*i-t.x,u=n.y+r*a-t.y;Math.sqrt(o*o+u*u);return new nt.Point(t.x+.5*o,t.y+.5*u)},getLowerLabelPosition:function(e,t,n,r,i,a){var o=n.x+r*i-e.x,u=n.y+r*a-e.y;Math.sqrt(o*o+u*u);return new nt.Point(e.x+.5*o,e.y+.5*u)},getUpperLabelAngle:function(e,t,n,r,i,a,o){var u=n.x-r.x+i*a,s=n.y-r.y+i*o,c=Math.atan2(s,u),h=i<0?Math.PI:0;return c+Math.PI/2+h},getLowerLabelAngle:function(e,t,n,r,i,a,o){var u=r.x+i*a-t.x,s=r.y+i*o-t.y,c=Math.atan2(s,u),h=i<0?Math.PI:0;return c+Math.PI/2+h},getDefaultArrowPoint:function(e,t,n,r,i,a){return n},toUpperCurveShape:function(e,t,n,r,i,a){var o=e.env,u=t,s=n,c=u.edgePoint(s.x,s.y),h=s.edgePoint(u.x,u.y),l=o.p,m=o.c;o.p=u,o.c=s,new Ot.Line(c,h).toShape(e,void 0,"-",""),o.p=l,o.c=m},toLowerCurveShape:function(e,t,n,r,i,a){var o=e.env,u=n,s=r,c=u.edgePoint(s.x,s.y),h=s.edgePoint(u.x,u.y),l=o.p,m=o.c;o.p=u,o.c=s,new Ot.Line(c,h).toShape(e,void 0,"-",""),o.p=l,o.c=m},getMidBoxSize:function(){return.5*ze.measure.lineElementLength},getDefaultCurvature:function(){return 3.5*ze.measure.lineElementLength},hasUpperTips:!0,hasLowerTips:!0}),Vt(ye.Command.Twocell.Switch.UpperLabel,{setup:function(e){e.env.twocellUpperLabel=new x.Some(this)},toShape:function(e,t,n,r,i){this.label.toShape(e,t,n,r,i)}}),Vt(ye.Command.Twocell.Switch.LowerLabel,{setup:function(e){e.env.twocellLowerLabel=new x.Some(this)},toShape:function(e,t,n,r,i){this.label.toShape(e,t,n,r,i)}}),Vt(ye.Command.Twocell.Switch.SetCurvature,{setup:function(e){var t=e.env;this.nudge.isOmit?t.twocellShouldDrawCurve=!1:t.twocellCurvatureEm=new x.Some(this.nudge.number*ze.measure.lineElementLength)}}),Vt(ye.Command.Twocell.Switch.DoNotSetCurvedArrows,{setup:function(e){e.env.twocellShouldDrawCurve=!1}}),Vt(ye.Command.Twocell.Switch.PlaceModMapObject,{setup:function(e){e.env.twocellShouldDrawModMap=!0}}),Vt(ye.Command.Twocell.Switch.ChangeHeadTailObject,{setup:function(e){var t=e.env;switch(this.what){case"`":t.twocelltail=this.object;break;case"'":t.twocellhead=this.object}}}),Vt(ye.Command.Twocell.Switch.ChangeCurveObject,{setup:function(e){var t=e.env;switch(this.what){case"":t.twocellUpperCurveObjectSpacer=this.spacer,t.twocellUpperCurveObject=this.maybeObject,t.twocellLowerCurveObjectSpacer=this.spacer,t.twocellLowerCurveObject=this.maybeObject;break;case"^":t.twocellUpperCurveObjectSpacer=this.spacer,t.twocellUpperCurveObject=this.maybeObject;break;case"_":t.twocellLowerCurveObjectSpacer=this.spacer,t.twocellLowerCurveObject=this.maybeObject}}}),Vt(ye.Command.Twocell.Label,{toShape:function(e,t,n,r,i){var a,o=this.maybeNudge;if(o.isDefined){var u=o.get;if(u.isOmit)return;a=u.number*ze.measure.lineElementLength}else a=this.getDefaultLabelOffset();var s=e.env,c=s.c;s.c=new nt.Point(t.x+a*n,t.y+a*r),this.labelObject.toDropShape(e),s.c=c},getDefaultLabelOffset:function(){return ze.measure.lineElementLength}}),Vt(ye.Command.Twocell.Nudge.Number,{isOmit:!1}),Vt(ye.Command.Twocell.Nudge.Omit,{isOmit:!0}),Vt(ye.Command.Twocell.Arrow,{toTipsShape:function(e,t,n){var r=e.env,i=r.lastCurve,a=r.c,o=r.angle,u=t?Math.PI:0,s=i.tOfPlace(!0,!0,t?0:1,0);r.c=i.position(s),r.angle=i.angle(s)+u,r.twocellhead.toDropShape(e);s=i.tOfPlace(!0,!0,t?1:0,0);if(r.c=i.position(s),r.angle=i.angle(s)+u,n?r.twocellhead.toDropShape(e):r.twocelltail.toDropShape(e),r.twocellShouldDrawModMap){s=i.tOfPlace(!1,!1,.5,0);r.c=i.position(s),r.angle=i.angle(s)+u,r.twocellmodmapobject.toDropShape(e)}r.c=a,r.angle=o}}),Vt(ye.Command.Twocell.Arrow.WithOrientation,{toUpperTipsShape:function(e){switch(this.tok){case"":case"^":case"_":case"=":case"\\omit":case"'":this.toTipsShape(e,!1,!1);break;case"`":this.toTipsShape(e,!0,!1);break;case'"':this.toTipsShape(e,!1,!0)}},toLowerTipsShape:function(e){switch(this.tok){case"":case"^":case"_":case"=":case"\\omit":case"`":this.toTipsShape(e,!1,!1);break;case"'":this.toTipsShape(e,!0,!1);break;case'"':this.toTipsShape(e,!1,!0)}},toArrowShape:function(e,t){var n=e.env,r=n.c;switch(this.tok){case"^":var i=n.angle;n.angle=i+Math.PI,n.twocellarrowobject.toDropShape(e),n.c=new nt.Point(r.x+ze.measure.lineElementLength*Math.cos(i-Math.PI/2),r.y+ze.measure.lineElementLength*Math.sin(i-Math.PI/2)),this.labelObject.toDropShape(e),n.angle=i;break;case"":case"_":i=n.angle;n.twocellarrowobject.toDropShape(e),n.c=new nt.Point(r.x+ze.measure.lineElementLength*Math.cos(i+Math.PI/2),r.y+ze.measure.lineElementLength*Math.sin(i+Math.PI/2)),this.labelObject.toDropShape(e);break;case"=":i=n.angle;var a=new pt.TwocellEqualityArrowheadShape(n.c,n.angle);e.appendShapeToFront(a),n.c=new nt.Point(r.x+ze.measure.lineElementLength*Math.cos(i+Math.PI/2),r.y+ze.measure.lineElementLength*Math.sin(i+Math.PI/2)),this.labelObject.toDropShape(e);break;default:this.labelObject.toDropShape(e)}n.c=r}}),Vt(ye.Command.Twocell.Arrow.WithPosition,{toUpperTipsShape:function(e){this.toTipsShape(e,!1,!1)},toLowerTipsShape:function(e){this.toTipsShape(e,!1,!1)},toArrowShape:function(e,t){var n,r=e.env,i=r.c,a=r.angle,o=this.nudge;if(o.isOmit)n=i;else{var u=o.number*ze.measure.lineElementLength;n=new nt.Point(t.x+u*Math.cos(a),t.y+u*Math.sin(a))}r.c=n,r.twocellarrowobject.toDropShape(e),o.isOmit||(r.c=new nt.Point(n.x+ze.measure.lineElementLength*Math.cos(a+Math.PI/2),n.y+ze.measure.lineElementLength*Math.sin(a+Math.PI/2)),this.labelObject.toDropShape(e)),r.c=i}}),Vt(ye.Pos.Xyimport.TeXCommand,{toShape:function(e){var t=e.env;if(void 0===t.c)return pt.none;var n=t.duplicate(),r=new vt(pt.none,n),i=this.graphics.toDropShape(r),a=this.width,o=this.height;if(0===a||0===o)throw new TeXError("ExecutionError","the 'width' and 'height' attributes of the \\xyimport should be non-zero.");var u=n.c,s=u.l+u.r,c=u.u+u.d;if(0===s||0===c)throw new TeXError("ExecutionError","the width and height of the graphics to import should be non-zero.");var h=this.xOffset,l=this.yOffset;t.c=u.toRect({u:c/o*(o-l),d:c/o*l,l:s/a*h,r:s/a*(a-h)}),t.setXBase(s/a,0),t.setYBase(0,c/o);var m=u.l-t.c.l,p=u.d-t.c.d;i=new pt.TranslateShape(m,p,r.shape);e.appendShapeToFront(i)}}),Vt(ye.Pos.Xyimport.Graphics,{toShape:function(e){var t=e.env;if(void 0===t.c)return pt.none;var n=t.duplicate(),r=new vt(pt.none,n),i=this.width,a=this.height;if(0===i||0===a)throw new TeXError("ExecutionError","the 'width' and 'height' attributes of the \\xyimport should be non-zero.");var o=this.graphics;if(o.setup(r),!n.includegraphicsWidth.isDefined||!n.includegraphicsHeight.isDefined)throw new TeXError("ExecutionError","the 'width' and 'height' attributes of the \\includegraphics are required.");var u=n.includegraphicsWidth.get,s=n.includegraphicsHeight.get;if(0===u||0===s)throw new TeXError("ExecutionError","the 'width' and 'height' attributes of the \\includegraphics should be non-zero.");var c=this.xOffset,h=this.yOffset;t.c=n.c.toRect({u:s/a*(a-h),d:s/a*h,l:u/i*c,r:u/i*(i-c)}),t.setXBase(u/i,0),t.setYBase(0,s/a);var l=new pt.ImageShape(t.c,o.filepath);e.appendShapeToFront(l)}}),Vt(ye.Command.Includegraphics,{setup:function(e){var t=e.env;t.includegraphicsWidth=x.empty,t.includegraphicsHeight=x.empty,this.attributeList.foreach((function(t){t.setup(e)}))}}),Vt(ye.Command.Includegraphics.Attr.Width,{setup:function(e){e.env.includegraphicsWidth=new x.Some(ze.measure.length2em(this.dimen))}}),Vt(ye.Command.Includegraphics.Attr.Height,{setup:function(e){e.env.includegraphicsHeight=new x.Some(ze.measure.length2em(this.dimen))}});var zt={};zt.Macro=i.Z.Macro,zt.xybox=function(e,t,n){var r=It(e,Re.xybox(),ye.xypic.prototype.kind);e.Push(r)},zt.xymatrixbox=function(e,t,n){var r=It(e,Re.xymatrixbox(),ye.xypic.prototype.kind);e.Push(r)},zt.newdir=function(e,t,n){var r=It(e,Re.newdir(),ye.xypic.newdir.prototype.kind);e.Push(r)},zt.xyincludegraphics=function(e,t,n){var r=It(e,Re.includegraphics(),ye.xypic.includegraphics.prototype.kind);e.Push(r)},zt.xyEnvironment=function(e,t){var n=It(e,Re.xy(),ye.xypic.prototype.kind);return e.Push(t),n};new r.QQ("xypic-command",{hole:["Macro","{\\style{visibility:hidden}{x}}"],objectstyle:["Macro","\\textstyle"],labelstyle:["Macro","\\scriptstyle"],twocellstyle:["Macro","\\scriptstyle"],xybox:["xybox","xybox"],xymatrix:["xymatrixbox","xymatrix"],newdir:["newdir","newdir"],includegraphics:["xyincludegraphics","includegraphics"]},zt),new r.QM("xypic-environment",a.Z.environment,{xy:["xyEnvironment",null,!1]},zt);t.VK.create("xypic",{handler:{macro:["xypic-command"],environment:["xypic-environment"]},preprocessors:[function(e){e.math,e.document,e.data;ze.repositories.modifierRepository=new Ie,ze.repositories.dirRepository=new _e,ze.textObjectIdCounter=0,ze.wrapperOfTextObjectMap={}}],nodes:{xypic:function(e,t,n){var r=e.mmlFactory;return new ye.xypic(r,t,n)},"xypic-newdir":function(e,t,n){var r=e.mmlFactory;return new ye.xypic.newdir(r,t,n)},"xypic-includegraphics":function(e,t,n){var r=e.mmlFactory;return new ye.xypic.includegraphics(r,t,n)}}});var Qt=n(990),Nt=n(268),Xt=n(272);function Wt(e){return(Wt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ut(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ht(e,t)}function Ht(e,t){return(Ht=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function qt(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=Yt(e);if(t){var i=Yt(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Jt(this,n)}}function Jt(e,t){return!t||"object"!==Wt(t)&&"function"!=typeof t?Zt(e):t}function Zt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Yt(e){return(Yt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function $t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Kt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function en(e,t,n){return t&&Kt(e.prototype,t),n&&Kt(e,n),e}var tn=Ue,nn=function(){function e(){$t(this,e)}return en(e,null,[{key:"createSVG",value:function(e,t,n,r,i,a,o){return new an(e,t,n,r,i,a,o)}}]),e}(),rn=function(){function e(t){$t(this,e),this.xypicWrapper=t}return en(e,[{key:"createElement",value:function(e){return this.xypicWrapper.svg(e)}},{key:"createGroup",value:function(e){return new cn(this,e)}},{key:"createChangeColorGroup",value:function(e){return new hn(this,e)}},{key:"createSVGElement",value:function(e,t){var n=this.createElement(e);if(t)for(var r in t)if(t.hasOwnProperty(r)){var i=t[r].toString();"xlink:href"===r?this.xypicWrapper.setAttribute(n,r,i,"http://www.w3.org/1999/xlink"):this.xypicWrapper.setAttribute(n,r,i)}return this.appendChild(n),n}},{key:"appendChild",value:function(e){return this.xypicWrapper.adaptor.append(this.drawArea,e),e}},{key:"transformBuilder",value:function(){return new on}}]),e}(),an=function(e){Ut(n,e);var t=qt(n);function n(e,r,i,a,o,u,s){var c;$t(this,n);var h=(c=t.call(this,e)).createElement("svg");if(c.xypicWrapper.setAttribute(h,"xmlns","http://www.w3.org/2000/svg"),c.xypicWrapper.setAttribute(h,"version","1.1"),s)for(var l in s)s.hasOwnProperty(l)&&c.xypicWrapper.setAttribute(h,l,s[l].toString());h.style&&(h.style.width=ze.measure.Em(a),h.style.height=ze.measure.Em(r+i));s={fill:"none",stroke:u,"stroke-linecap":"round","stroke-width":ze.measure.em2px(o)};for(var m in c.drawArea=c.createElement("g"),s)s.hasOwnProperty(m)&&c.xypicWrapper.setAttribute(c.drawArea,m,s[m].toString());return c.xypicWrapper.append(h,c.drawArea),c.svg=h,c.boundingBox=void 0,c.color=u,c}return en(n,[{key:"setHeight",value:function(e){this.xypicWrapper.setStyle(this.svg,"height",ze.measure.Em(e))}},{key:"setWidth",value:function(e){this.xypicWrapper.setStyle(this.svg,"width",ze.measure.Em(e))}},{key:"setAttribute",value:function(e,t){this.xypicWrapper.setAttribute(this.svg,e,t.toString())}},{key:"extendBoundingBox",value:function(e){this.boundingBox=nt.combineRect(this.boundingBox,e)}},{key:"getOrigin",value:function(){return{x:0,y:0}}},{key:"getCurrentColor",value:function(){return this.color}}]),n}(rn),on=function(){function e(t){$t(this,e),this.transform=t||A.empty}return en(e,[{key:"translate",value:function(t,n){return new e(this.transform.append(new un(t,n)))}},{key:"rotateDegree",value:function(t){return new e(this.transform.append(new sn(t/180*Math.PI)))}},{key:"rotateRadian",value:function(t){return new e(this.transform.append(new sn(t)))}},{key:"toString",value:function(){var e="";return this.transform.foreach((function(t){e+=t.toTranslateForm()})),e}},{key:"apply",value:function(e,t){var n={x:e,y:t};return this.transform.foreach((function(e){n=e.apply(n.x,n.y)})),n}}]),e}(),un=function(){function e(t,n){$t(this,e),this.dx=t,this.dy=n}return en(e,[{key:"apply",value:function(e,t){return{x:e-this.dx,y:t+this.dy}}},{key:"toTranslateForm",value:function(){return"translate("+ze.measure.em2px(this.dx)+","+ze.measure.em2px(-this.dy)+") "}}]),e}(),sn=function(){function e(t){$t(this,e),this.radian=t}return en(e,[{key:"apply",value:function(e,t){var n=Math.cos(this.radian),r=Math.sin(this.radian);return{x:n*e+r*t,y:-r*e+n*t}}},{key:"toTranslateForm",value:function(){return"rotate("+tn(-180*this.radian/Math.PI)+") "}}]),e}(),cn=function(e){Ut(n,e);var t=qt(n);function n(e,r){var i;$t(this,n),(i=t.call(this,e.xypicWrapper)).parent=e,i.drawArea=e.createSVGElement("g",void 0===r?{}:{transform:r.toString()});var a=e.getOrigin();return i.origin=void 0===r?a:r.apply(a.x,a.y),We(Zt(i),"getCurrentColor"),i}return en(n,[{key:"remove",value:function(){this.xypicWrapper.remove(this.drawArea)}},{key:"extendBoundingBox",value:function(e){this.parent.extendBoundingBox(e)}},{key:"getOrigin",value:function(){return this.origin}},{key:"getCurrentColor",value:function(){return this.parent.getCurrentColor()}}]),n}(rn),hn=function(e){Ut(n,e);var t=qt(n);function n(e,r){var i;return $t(this,n),(i=t.call(this,e.xypicWrapper)).parent=e,i.drawArea=e.createSVGElement("g",{stroke:r}),i.color=r,We(Zt(i),"getOrigin"),i}return en(n,[{key:"remove",value:function(){this.xypicWrapper.remove(this.drawArea)}},{key:"extendBoundingBox",value:function(e){this.parent.extendBoundingBox(e)}},{key:"getOrigin",value:function(){return this.parent.getOrigin()}},{key:"getCurrentColor",value:function(){return this.color}}]),n}(rn);function ln(e){return(ln="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function mn(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return pn(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return pn(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,u=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return o=e.done,e},e:function(e){u=!0,a=e},f:function(){try{o||null==n.return||n.return()}finally{if(u)throw a}}}}function pn(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function fn(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function dn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function yn(e,t,n){return t&&dn(e.prototype,t),n&&dn(e,n),e}function vn(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&xn(e,t)}function xn(e,t){return(xn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function gn(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=Sn(e);if(t){var i=Sn(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return wn(this,n)}}function wn(e,t){return!t||"object"!==ln(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Sn(e){return(Sn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Cn="http://www.w3.org/2000/svg",bn=Ue;function kn(e,t){var n=function(e){vn(n,e);var t=gn(n);function n(e,r){var i,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;fn(this,n),i=t.call(this,e,r,a);for(var o=ze.wrapperOfTextObjectMap,u=r.textMmls,s=i.childNodes,c=u.length,h=0;h<c;h++){var l=u[h].xypicTextObjectId;o[l]=s[h]}return i._textObjects=[],i}return yn(n,[{key:"getElement",value:function(){return this.chtml}},{key:"appendTextObject",value:function(e){this._textObjects.push(e)}},{key:"getChildWrapper",value:function(e){var t=e.xypicTextObjectId;if(null==t)throw new u.Z("IllegalStateError","BUG");var n=ze.wrapperOfTextObjectMap[t];if(null==n)throw new u.Z("IllegalStateError","unknown textObjectId:"+t);return n}},{key:"toCHTML",value:function(e){var t=ze.svgForDebug,n=ze.svgForTestLayout;this._textObjects=[],this.setupMeasure(this),this._toCHTML(e),ze.svgForDebug=t,ze.svgForTestLayout=n}},{key:"setupMeasure",value:function(e){var t=Ue,n=e.length2em("1em"),r=parseFloat(e.px(100).replace("px",""))/100,i=e.font.params.axis_height,a=e.length2em("0.15em"),o=function(t){return Math.round(parseFloat(e.px(100*t).replace("px","")))/100};ze.measure={length2em:function(n){return t(e.length2em(n))},oneem:n,em2length:function(e){return t(e/n)+"em"},Em:function(t){return e.em(t)},em:r,em2px:o,axis_height:i,strokeWidth:e.length2em("0.04em"),thickness:a,jot:e.length2em("3pt"),objectmargin:e.length2em("3pt"),objectwidth:e.length2em("0pt"),objectheight:e.length2em("0pt"),labelmargin:e.length2em("2.5pt"),turnradius:e.length2em("10pt"),lineElementLength:e.length2em("5pt"),axisHeightLength:i*e.length2em("10pt"),dottedDasharray:n+" "+o(a)}}},{key:"append",value:function(e,t){this.adaptor.append(e,t)}},{key:"remove",value:function(e){this.adaptor.remove(e)}},{key:"svg",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return this.adaptor.node(e,t,n,Cn)}},{key:"setAttribute",value:function(e,t,n,r){return this.adaptor.setAttribute(e,t,n,r)}},{key:"setStyle",value:function(e,t,n){this.adaptor.setStyle(e,t,n)}},{key:"drawTextObject",value:function(e,t,n){var r=ze.measure.length2em("0.2em"),i=t.xypicWrapper,a=i.getChildWrapper(e.math),o=a.adaptor,u=a.getBBox(),s=u.scale,c=(u.h+r)*s,h=(u.d+r)*s,l=(u.w+2*r)*s,m=(c+h)/2,p=l/2,f=e.c;if(e.originalBBox={H:c,D:h,W:l},!n){var d=a.html("mjx-xypic-object");o.append(i.getElement(),d),o.setStyle(d,"text-align","center"),o.setStyle(d,"position","absolute"),o.setStyle(d,"color",t.getCurrentColor()),a.toCHTML(d);var y=t.getOrigin();o.setAttribute(d,"data-x",f.x-p-y.x+r*s),o.setAttribute(d,"data-y",-f.y-m-y.y+r*s),o.setAttribute(d,"data-xypic-id",e.math.xypicTextObjectId),i.appendTextObject(d)}return f.toRect({u:m,d:m,l:p,r:p})}}]),n}(Qt.wO),r=function(e){vn(n,e);var t=gn(n);function n(e,r){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return fn(this,n),t.call(this,e,r,i)}return yn(n,[{key:"kind",get:function(){return ye.xypic.prototype.kind}},{key:"_toCHTML",value:function(e){var t=this.standardCHTMLnode(e);this.cthml=t;var n=this.adaptor;n.setStyle(t,"position","relative");var r=this.length2em("0.2em"),i=ze.measure.strokeWidth,a=1,o=0,u=1,s=ze.measure.em2px,c=nn.createSVG(this,a,o,u,i,"black",{viewBox:[0,-s(a+o),s(u),s(a+o)].join(" "),role:"img",focusable:!1,overflow:"visible"});ze.svgForDebug=c,ze.svgForTestLayout=c,n.append(t,c.svg);var h=this.node.cmd;if(h){var l=new Bt,m=new vt(pt.none,l);h.toShape(m);var p=m.shape;p.draw(c);var f=p.getBoundingBox();if(void 0!==f){var d=(f=new nt.Rect(0,0,{l:Math.max(0,-(f.x-f.l)),r:Math.max(0,f.x+f.r),u:Math.max(0,f.y+f.u),d:Math.max(0,-(f.y-f.d))})).x-f.l-r,y=-f.y-f.u-r,v=f.l+f.r+2*r,x=f.u+f.d+2*r;c.setWidth(v),c.setHeight(x),c.setAttribute("viewBox",[s(d),s(y),s(v),s(x)].join(" ")),n.setStyle(t,"vertical-align",bn(-f.d-r+ze.measure.axis_height)+"em");var g,w=mn(this._textObjects);try{for(w.s();!(g=w.n()).done;){var S=g.value,C=parseFloat(n.getAttribute(S,"data-x")),b=parseFloat(n.getAttribute(S,"data-y"));n.setStyle(S,"left",bn(C-d)+"em"),n.setStyle(S,"top",bn(b+f.y-f.d-.5*r)+"em")}}catch(e){w.e(e)}finally{w.f()}}else n.remove(c.svg)}else n.remove(c.svg)}}]),n}(n);t[r.prototype.kind]=r;var i=function(e){vn(n,e);var t=gn(n);function n(e,r){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return fn(this,n),t.call(this,e,r,i)}return yn(n,[{key:"kind",get:function(){return ye.xypic.newdir.prototype.kind}},{key:"_toCHTML",value:function(e){var t=this.node.cmd;ze.repositories.dirRepository.put(t.dirMain,t.compositeObject)}}]),n}(n);t[i.prototype.kind]=i;var a=function(e){vn(n,e);var t=gn(n);function n(e,r){var i,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return fn(this,n),(i=t.call(this,e,r,a))._setupGraphics(),i.computeBBox(i.bbox),i.bboxComputed=!0,i}return yn(n,[{key:"kind",get:function(){return ye.xypic.includegraphics.prototype.kind}},{key:"_setupGraphics",value:function(){this.setupMeasure(this);var e=new Bt,t=new vt(pt.none,e),n=this.node.cmd;if(n.setup(t),!e.includegraphicsWidth.isDefined||!e.includegraphicsHeight.isDefined)throw new u.Z("ExecutionError","the 'width' and 'height' attributes of the \\includegraphics are required.");var r=e.includegraphicsWidth.get,i=e.includegraphicsHeight.get;this.imageWidth=this.length2em(r),this.imageHeight=this.length2em(i),this.filepath=n.filepath}},{key:"computeBBox",value:function(e){e.empty(),e.updateFrom(new Xt.bK({w:this.imageWidth,h:this.imageHeight,d:0}))}},{key:"_toCHTML",value:function(e){var t=this.standardCHTMLnode(e);this.cthml=t,this.adaptor.setStyle(t,"position","relative"),this.adaptor.setStyle(t,"vertical-align","0em");var n=this.html("img");this.adaptor.setAttribute(n,"src",this.filepath),this.adaptor.setStyle(n,"width",bn(this.imageWidth)+"em"),this.adaptor.setStyle(n,"height",bn(this.imageHeight)+"em"),this.adaptor.append(t,n)}}]),n}(n);t[a.prototype.kind]=a}void 0!==Qt.wO&&kn(Qt.wO,Nt.w);var Mn=MathJax._.components.loader.Loader;Mn&&(MathJax._.output.chtml.Wrapper.CHTMLWrapper||Mn.ready("output/chtml").then((function(){var e=MathJax._.output.chtml;kn(e.Wrapper.CHTMLWrapper,e.Wrappers_ts.CHTMLWrappers)})))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,